{
"$schema": "http://json-schema.org/draft-07/schema",
"title": "cellranger_atac_count",
"description": "Align fastq files using Cell Ranger ATAC count.",
"type": "object",
"definitions": {

    
    "Dataset input": {
        "title": "Dataset input",
        "type": "object",
        "description": "Dataset input using nf-tower \"dataset\" or \"data explorer\". Allows for the input of multiple         parameter sets to initialise a Nextflow channel.",
        "properties": {
            "param_list": {
                "description": "Dataset input can either be a list of maps, a csv file, a json file, a yaml file, or simply a yaml                 blob. The names of the input fields (e.g. csv columns, json keys) need to be an exact match with the workflow input parameters.",
                "default": "",
                "format": "file-path",
                "mimetype": "text/csv",
                "pattern": "^\\S+\\.csv$"
            }
        }
    },

    
    
    "inputs" : {
    "title": "Inputs",
    "type": "object",
    "description": "No description",
    "properties": {
    
        
                "input": {
                "type":
                "string",
                "description": "Type: List of `file`, required, example: `sample_S1_L001_R1_001.fastq.gz;sample_S1_L001_R2_001.fastq.gz`, multiple_sep: `\";\"`. The fastq",
                "help_text": "Type: List of `file`, required, example: `sample_S1_L001_R1_001.fastq.gz;sample_S1_L001_R2_001.fastq.gz`, multiple_sep: `\";\"`. The fastq.gz files to align. Can also be a single directory containing fastq.gz files."
            
            }
    

        ,
                "reference": {
                "type":
                "string",
                "description": "Type: `file`, required, example: `reference.tar.gz`. The path to Cell Ranger reference tar",
                "help_text": "Type: `file`, required, example: `reference.tar.gz`. The path to Cell Ranger reference tar.gz file. Can also be a directory."
            
            }
    

}
},
    
    
    "outputs" : {
    "title": "Outputs",
    "type": "object",
    "description": "No description",
    "properties": {
    
        
                "output": {
                "type":
                "string",
                "description": "Type: `file`, required, default: `$id.$key.output.output`, example: `/path/to/output`. The folder to store the alignment results",
                "help_text": "Type: `file`, required, default: `$id.$key.output.output`, example: `/path/to/output`. The folder to store the alignment results."
            ,
                "default":"$id.$key.output.output"
            }
    

}
},
    
    
    "arguments" : {
    "title": "Arguments",
    "type": "object",
    "description": "No description",
    "properties": {
    
        
                "description": {
                "type":
                "string",
                "description": "Type: `string`, default: ``. Sample description to embed in output files",
                "help_text": "Type: `string`, default: ``. Sample description to embed in output files"
            ,
                "default":""
            }
    

        ,
                "force_cells": {
                "type":
                "integer",
                "description": "Type: `integer`. Define the top N barcodes with the most fragments overlapping peaks as cells and override the cell calling algorithm",
                "help_text": "Type: `integer`. Define the top N barcodes with the most fragments overlapping peaks as cells and override the cell calling algorithm. N must be a positive integer \u003c= 20,000. Use this option if the number of cells estimated by Cell Ranger ATAC is not consistent with the barcode rank plot"
            
            }
    

        ,
                "peaks": {
                "type":
                "string",
                "description": "Type: `file`. Override peak caller: specify peaks to use in downstream analyses from supplied 3-column BED file",
                "help_text": "Type: `file`. Override peak caller: specify peaks to use in downstream analyses from supplied 3-column BED file. The supplied peaks file must be sorted by position and not contain overlapping peaks; comment lines beginning with # are allowed"
            
            }
    

        ,
                "dim_reduce": {
                "type":
                "string",
                "description": "Type: `string`, default: `lsa`, choices: ``lsa`, `pca`, `plsa``. Dimensionality reduction mode for clustering",
                "help_text": "Type: `string`, default: `lsa`, choices: ``lsa`, `pca`, `plsa``. Dimensionality reduction mode for clustering",
                "enum": ["lsa", "pca", "plsa"]
            
            ,
                "default":"lsa"
            }
    

        ,
                "subsample_rate": {
                "type":
                "number",
                "description": "Type: `double`, example: `0.1`. Downsample to preserve this fraction of reads",
                "help_text": "Type: `double`, example: `0.1`. Downsample to preserve this fraction of reads"
            
            }
    

        ,
                "lanes": {
                "type":
                "string",
                "description": "Type: List of `string`, example: `1,3`, multiple_sep: `\";\"`. bcl2fastq option",
                "help_text": "Type: List of `string`, example: `1,3`, multiple_sep: `\";\"`. bcl2fastq option. Semicolon-delimited series of lanes to demultiplex. Use this if you have a sample sheet for an entire flow cell but only want to generate a few lanes for further 10x Genomics analysis."
            
            }
    

}
},
    
    
    "nextflow input-output arguments" : {
    "title": "Nextflow input-output arguments",
    "type": "object",
    "description": "Input/output parameters for Nextflow itself. Please note that both publishDir and publish_dir are supported but at least one has to be configured.",
    "properties": {
    
        
                "publish_dir": {
                "type":
                "string",
                "description": "Type: `string`, required, example: `output/`. Path to an output directory",
                "help_text": "Type: `string`, required, example: `output/`. Path to an output directory."
            
            }
    

        

}
}
},
"allOf": [

    {
    "$ref": "#/definitions/inputs"
    },

    {
    "$ref": "#/definitions/outputs"
    },

    {
    "$ref": "#/definitions/arguments"
    },

    {
    "$ref": "#/definitions/nextflow input-output arguments"
    }
]
}
