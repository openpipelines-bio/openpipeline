{
"$schema": "http://json-schema.org/draft-07/schema",
"title": "samtools_sort",
"description": "Sort and (optionally) index alignments.\n\nReads are sorted by leftmost coordinates, or by read name when `--sort_by_read_names` is used.\n\nAn appropriate `@HD-SO` sort order header tag will be added or an existing one updated if necessary.\n\nNote that to generate an index file (by specifying `--output_bai`), the default coordinate sort must be used.\nThus the `--sort_by_read_names` and `--sort_by \u003cTAG\u003e` options are incompatible with `--output_bai`. \n",
"type": "object",
"definitions": {

    
    "Dataset input": {
        "title": "Dataset input",
        "type": "object",
        "description": "Dataset input using nf-tower \"dataset\" or \"data explorer\". Allows for the input of multiple         parameter sets to initialise a Nextflow channel.",
        "properties": {
            "param_list": {
                "description": "Dataset input can either be a list of maps, a csv file, a json file, a yaml file, or simply a yaml                 blob. The names of the input fields (e.g. csv columns, json keys) need to be an exact match with the workflow input parameters.",
                "default": "",
                "format": "file-path",
                "mimetype": "text/csv",
                "pattern": "^\\S+\\.csv$"
            }
        }
    },

    
    
    "arguments" : {
    "title": "Arguments",
    "type": "object",
    "description": "No description",
    "properties": {
    
        
                "minimizer_cluster": {
                "type":
                "boolean",
                "description": "Type: `boolean_true`, default: `false`. Sort unmapped reads (those in chromosome \"*\") by their sequence minimiser (Schleimer et al",
                "help_text": "Type: `boolean_true`, default: `false`. Sort unmapped reads (those in chromosome \"*\") by their sequence minimiser (Schleimer et al., 2003; Roberts et al., 2004), \nalso reverse complementing as appropriate. This has the effect of collating some similar data together, improving the \ncompressibility of the unmapped sequence. The minimiser kmer size is adjusted using the -K option. Note data compressed \nin this manner may need to be name collated prior to conversion back to fastq.\n\nMapped sequences are sorted by chromosome and position. \n"
            ,
                "default":false
            }
    

        ,
                "minimizer_kmer": {
                "type":
                "integer",
                "description": "Type: `integer`, example: `20`. Sets the kmer size to be used in the -M option",
                "help_text": "Type: `integer`, example: `20`. Sets the kmer size to be used in the -M option."
            
            }
    

        ,
                "sort_by_read_names": {
                "type":
                "boolean",
                "description": "Type: `boolean_true`, default: `false`. Sort by read names (i",
                "help_text": "Type: `boolean_true`, default: `false`. Sort by read names (i.e., the QNAME field) rather than by chromosomal coordinates."
            ,
                "default":false
            }
    

        ,
                "sort_by": {
                "type":
                "string",
                "description": "Type: `string`. Sort first by this value in the alignment tag, then by position or name (if also using -n)",
                "help_text": "Type: `string`. Sort first by this value in the alignment tag, then by position or name (if also using -n)."
            
            }
    

        ,
                "no_pg": {
                "type":
                "boolean",
                "description": "Type: `boolean_true`, default: `false`. Do not add a @PG line to the header of the output file",
                "help_text": "Type: `boolean_true`, default: `false`. Do not add a @PG line to the header of the output file."
            ,
                "default":false
            }
    

}
},
    
    
    "input" : {
    "title": "Input",
    "type": "object",
    "description": "No description",
    "properties": {
    
        
                "input": {
                "type":
                "string",
                "description": "Type: `file`, required, example: `input.bam`. Path to the SAM/BAM/CRAM files containing the mapped reads",
                "help_text": "Type: `file`, required, example: `input.bam`. Path to the SAM/BAM/CRAM files containing the mapped reads."
            
            }
    

}
},
    
    
    "output" : {
    "title": "Output",
    "type": "object",
    "description": "No description",
    "properties": {
    
        
                "output_bam": {
                "type":
                "string",
                "description": "Type: `file`, required, default: `$id.$key.output_bam.bam`, example: `output.bam`. Filename to output the counts to",
                "help_text": "Type: `file`, required, default: `$id.$key.output_bam.bam`, example: `output.bam`. Filename to output the counts to."
            ,
                "default":"$id.$key.output_bam.bam"
            }
    

        ,
                "output_bai": {
                "type":
                "string",
                "description": "Type: `file`, default: `$id.$key.output_bai.bai`, example: `output.bam.bai`. BAI-format index for BAM file",
                "help_text": "Type: `file`, default: `$id.$key.output_bai.bai`, example: `output.bam.bai`. BAI-format index for BAM file."
            ,
                "default":"$id.$key.output_bai.bai"
            }
    

        ,
                "output_format": {
                "type":
                "string",
                "description": "Type: `string`, example: `bam`, choices: ``sam`, `bam`, `cram``. The output format",
                "help_text": "Type: `string`, example: `bam`, choices: ``sam`, `bam`, `cram``. The output format. By default, samtools tries to select a format based on the -o filename extension; if output is to standard output or no format can be deduced, bam is selected.",
                "enum": ["sam", "bam", "cram"]
            
            
            }
    

        ,
                "compression": {
                "type":
                "integer",
                "description": "Type: `integer`, example: `5`. Compression level, from 0 (uncompressed) to 9 (best",
                "help_text": "Type: `integer`, example: `5`. Compression level, from 0 (uncompressed) to 9 (best"
            
            }
    

}
},
    
    
    "nextflow input-output arguments" : {
    "title": "Nextflow input-output arguments",
    "type": "object",
    "description": "Input/output parameters for Nextflow itself. Please note that both publishDir and publish_dir are supported but at least one has to be configured.",
    "properties": {
    
        
                "publish_dir": {
                "type":
                "string",
                "description": "Type: `string`, required, example: `output/`. Path to an output directory",
                "help_text": "Type: `string`, required, example: `output/`. Path to an output directory."
            
            }
    

        

}
}
},
"allOf": [

    {
    "$ref": "#/definitions/arguments"
    },

    {
    "$ref": "#/definitions/input"
    },

    {
    "$ref": "#/definitions/output"
    },

    {
    "$ref": "#/definitions/nextflow input-output arguments"
    }
]
}
