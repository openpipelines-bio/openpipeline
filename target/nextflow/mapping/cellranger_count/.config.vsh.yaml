name: "cellranger_count"
namespace: "mapping"
version: "main_build"
authors:
- name: "Angela Oliveira Pisco"
  roles:
  - "author"
  info:
    role: "Contributor"
    links:
      github: "aopisco"
      orcid: "0000-0003-0142-2355"
      linkedin: "aopisco"
    organizations:
    - name: "Insitro"
      href: "https://insitro.com"
      role: "Director of Computational Biology"
    - name: "Open Problems"
      href: "https://openproblems.bio"
      role: "Core Member"
- name: "Samuel D'Souza"
  roles:
  - "author"
  info:
    role: "Contributor"
    links:
      github: "srdsam"
      linkedin: "samuel-d-souza-887023150/"
    organizations:
    - name: "Chan Zuckerberg Biohub"
      href: "https://www.czbiohub.org"
      role: "Data Engineer"
- name: "Robrecht Cannoodt"
  roles:
  - "author"
  - "maintainer"
  info:
    role: "Core Team Member"
    links:
      email: "robrecht@data-intuitive.com"
      github: "rcannood"
      orcid: "0000-0003-3641-729X"
      linkedin: "robrechtcannoodt"
    organizations:
    - name: "Data Intuitive"
      href: "https://www.data-intuitive.com"
      role: "Data Science Engineer"
    - name: "Open Problems"
      href: "https://openproblems.bio"
      role: "Core Member"
argument_groups:
- name: "Inputs"
  arguments:
  - type: "file"
    name: "--input"
    description: "The fastq.gz files to align. Can also be a single directory containing\
      \ fastq.gz files."
    info: null
    example:
    - "sample_S1_L001_R1_001.fastq.gz"
    - "sample_S1_L001_R2_001.fastq.gz"
    must_exist: true
    create_parent: true
    required: true
    direction: "input"
    multiple: true
    multiple_sep: ";"
  - type: "file"
    name: "--reference"
    description: "The path to Cell Ranger reference tar.gz file. Can also be a directory."
    info: null
    example:
    - "reference.tar.gz"
    must_exist: true
    create_parent: true
    required: true
    direction: "input"
    multiple: false
    multiple_sep: ";"
  - type: "file"
    name: "--feature_reference"
    description: "Feature reference CSV file, declaring Feature Barcode constructs\
      \ and associated barcodes\n"
    info: null
    must_exist: true
    create_parent: true
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ";"
- name: "Outputs"
  arguments:
  - type: "file"
    name: "--output"
    description: "The folder to store the alignment results."
    info: null
    example:
    - "/path/to/output"
    must_exist: true
    create_parent: true
    required: true
    direction: "output"
    multiple: false
    multiple_sep: ";"
- name: "Arguments"
  arguments:
  - type: "integer"
    name: "--expect_cells"
    description: "Expected number of recovered cells, used as input to cell calling\
      \ algorithm."
    info: null
    example:
    - 3000
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ";"
  - type: "integer"
    name: "--force_cells"
    description: "Force pipeline to use this number of cells, bypassing cell calling\
      \ algorithm."
    info: null
    example:
    - 3000
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ";"
  - type: "string"
    name: "--chemistry"
    description: "Assay configuration.\n- auto: autodetect mode\n- threeprime: Single\
      \ Cell 3'\n- fiveprime: Single Cell 5'\n- SC3Pv1: Single Cell 3' v1 \n  NOTE:\
      \ this mode cannot be auto-detected. It must be set explicitly with this option.\n\
      - SC3Pv2: Single Cell 3' v2\n- SC3Pv3: Single Cell 3' v3\n- SC3Pv4: Single Cell\
      \ 3' v4\n- SC3Pv3LT: Single Cell 3' v3 LT\n- SC3Pv3HT: Single Cell 3' v3 HT\n\
      - SC5P-R2-v3: Single Cell 5', paired-end/R2-only\n- SC5P-PE-v3: Single Cell\
      \ 5' paired-end v3 (GEM-X)\n- SC5P-PE: Single Cell 5' paired-end\n- SC5P-R2:\
      \ Single Cell 5' R2-only\n- SC-FB: Single Cell Antibody-only 3' v2 or 5'\n-\
      \ ARC-v1: for analyzing the Gene Expression portion of Multiome data. \n  NOTE:\
      \ when the pipeline auto-detects ARC-v1 chemistry, an error is triggered.\n\
      See https://kb.10xgenomics.com/hc/en-us/articles/115003764132-How-does-Cell-Ranger-auto-detect-chemistry-\
      \ for more information.\n"
    info: null
    default:
    - "auto"
    required: false
    choices:
    - "auto"
    - "threeprime"
    - "fiveprime"
    - "SC3Pv1"
    - "SC3Pv2"
    - "SC3Pv3"
    - "SC3Pv4"
    - "SC3Pv3LT"
    - "SC3Pv3HT"
    - "SC5P-PE-v3"
    - "SC5P-PE"
    - "SC5P-R2"
    - "SC5P-R2-v3"
    - "SC-FB"
    - "ARC-v1"
    direction: "input"
    multiple: false
    multiple_sep: ";"
  - type: "file"
    name: "--tenx_cloud_token_path"
    description: "The 10x Cloud Analysis user token used to enable cell annotation."
    info: null
    must_exist: true
    create_parent: true
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ";"
  - type: "string"
    name: "--cell_annotation_model"
    description: "\"Cell annotation model to use. If auto, uses the default model\
      \ for the species.\nIf not given, does not run cell annotation.\"\n"
    info: null
    required: false
    choices:
    - "auto"
    - "human_pca_v1_beta"
    - "mouse_pca_v1_beta"
    direction: "input"
    multiple: false
    multiple_sep: ";"
  - type: "boolean"
    name: "--secondary_analysis"
    description: "Whether or not to run the secondary analysis e.g. clustering."
    info: null
    default:
    - false
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ";"
  - type: "boolean"
    name: "--generate_bam"
    description: "Whether to generate a BAM file."
    info: null
    default:
    - true
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ";"
  - type: "boolean"
    name: "--include_introns"
    description: "Include intronic reads in count."
    info: null
    default:
    - true
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ";"
  - type: "integer"
    name: "--r1_length"
    description: "Hard trim the input Read 1 to this length before analysis"
    info: null
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ";"
  - type: "integer"
    name: "--r2_length"
    description: "Hard trim the input Read 2 to this length before analysis"
    info: null
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ";"
  - type: "integer"
    name: "--lanes"
    description: "Only use FASTQs from selected lanes."
    info: null
    example:
    - 1
    - 2
    - 3
    required: false
    direction: "input"
    multiple: true
    multiple_sep: ";"
  - type: "boolean"
    name: "--library_compatibility_check"
    description: "Whether to check for barcode compatibility between libraries.\n"
    info: null
    default:
    - true
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ";"
  - type: "integer"
    name: "--min_crispr_umi"
    description: "Set the minimum number of CRISPR guide RNA UMIs required for protospacer\
      \ detection.\nIf a lower or higher sensitivity is desired for detection, this\
      \ value can be customized\naccording to specific experimental needs. Applicable\
      \ only to datasets that include a\nCRISPR Guide Capture library.\n"
    info: null
    required: false
    min: 1
    direction: "input"
    multiple: false
    multiple_sep: ";"
resources:
- type: "bash_script"
  path: "script.sh"
  is_executable: true
- type: "file"
  path: "nextflow_labels.config"
  dest: "nextflow_labels.config"
description: "Align fastq files using Cell Ranger count."
test_resources:
- type: "python_script"
  path: "test.py"
  is_executable: true
- type: "file"
  path: "cellranger_tiny_fastq"
- type: "file"
  path: "setup_logger.py"
info: null
status: "enabled"
scope:
  image: "public"
  target: "public"
license: "MIT"
links:
  repository: "https://github.com/openpipelines-bio/openpipeline"
  docker_registry: "ghcr.io"
runners:
- type: "executable"
  id: "executable"
  docker_setup_strategy: "ifneedbepullelsecachedbuild"
- type: "nextflow"
  id: "nextflow"
  directives:
    label:
    - "highmem"
    - "highcpu"
    - "middisk"
    tag: "$id"
  auto:
    simplifyInput: true
    simplifyOutput: false
    transcript: false
    publish: false
  config:
    labels:
      mem1gb: "memory = 1000000000.B"
      mem2gb: "memory = 2000000000.B"
      mem5gb: "memory = 5000000000.B"
      mem10gb: "memory = 10000000000.B"
      mem20gb: "memory = 20000000000.B"
      mem50gb: "memory = 50000000000.B"
      mem100gb: "memory = 100000000000.B"
      mem200gb: "memory = 200000000000.B"
      mem500gb: "memory = 500000000000.B"
      mem1tb: "memory = 1000000000000.B"
      mem2tb: "memory = 2000000000000.B"
      mem5tb: "memory = 5000000000000.B"
      mem10tb: "memory = 10000000000000.B"
      mem20tb: "memory = 20000000000000.B"
      mem50tb: "memory = 50000000000000.B"
      mem100tb: "memory = 100000000000000.B"
      mem200tb: "memory = 200000000000000.B"
      mem500tb: "memory = 500000000000000.B"
      mem1gib: "memory = 1073741824.B"
      mem2gib: "memory = 2147483648.B"
      mem4gib: "memory = 4294967296.B"
      mem8gib: "memory = 8589934592.B"
      mem16gib: "memory = 17179869184.B"
      mem32gib: "memory = 34359738368.B"
      mem64gib: "memory = 68719476736.B"
      mem128gib: "memory = 137438953472.B"
      mem256gib: "memory = 274877906944.B"
      mem512gib: "memory = 549755813888.B"
      mem1tib: "memory = 1099511627776.B"
      mem2tib: "memory = 2199023255552.B"
      mem4tib: "memory = 4398046511104.B"
      mem8tib: "memory = 8796093022208.B"
      mem16tib: "memory = 17592186044416.B"
      mem32tib: "memory = 35184372088832.B"
      mem64tib: "memory = 70368744177664.B"
      mem128tib: "memory = 140737488355328.B"
      mem256tib: "memory = 281474976710656.B"
      mem512tib: "memory = 562949953421312.B"
      cpu1: "cpus = 1"
      cpu2: "cpus = 2"
      cpu5: "cpus = 5"
      cpu10: "cpus = 10"
      cpu20: "cpus = 20"
      cpu50: "cpus = 50"
      cpu100: "cpus = 100"
      cpu200: "cpus = 200"
      cpu500: "cpus = 500"
      cpu1000: "cpus = 1000"
    script:
    - "includeConfig(\"nextflow_labels.config\")"
  debug: false
  container: "docker"
engines:
- type: "docker"
  id: "docker"
  image: "ghcr.io/data-intuitive/cellranger:9.0"
  target_tag: "main_build"
  namespace_separator: "/"
  setup:
  - type: "docker"
    run:
    - "DEBIAN_FRONTEND=noninteractive apt update && \\\napt upgrade -y && apt install\
      \ -y procps && rm -rf /var/lib/apt/lists/*\n"
  test_setup:
  - type: "apt"
    packages:
    - "git"
    interactive: false
  - type: "python"
    user: false
    packages:
    - "viashpy==0.8.0"
    github:
    - "openpipelines-bio/core#subdirectory=packages/python/openpipeline_testutils"
    upgrade: true
  entrypoint: []
  cmd: null
build_info:
  config: "src/mapping/cellranger_count/config.vsh.yaml"
  runner: "nextflow"
  engine: "docker"
  output: "target/nextflow/mapping/cellranger_count"
  executable: "target/nextflow/mapping/cellranger_count/main.nf"
  viash_version: "0.9.4"
  git_commit: "e419e4e2e4a3b65b270e7112f1f5bfa094c34e3c"
  git_remote: "https://github.com/openpipelines-bio/openpipeline"
package_config:
  name: "openpipeline"
  summary: "Best-practice workflows for single-cell multi-omics analyses.\n"
  description: "OpenPipelines are extensible single cell analysis pipelines for reproducible\
    \ and large-scale single cell processing using [Viash](https://viash.io) and [Nextflow](https://www.nextflow.io/).\n\
    \nIn terms of workflows, the following has been made available, but keep in mind\
    \ that\nindividual tools and functionality can be executed as standalone components\
    \ as well.\n\n  * Demultiplexing: conversion of raw sequencing data to FASTQ objects.\n\
    \  * Ingestion: Read mapping and generating a count matrix.\n  * Single sample\
    \ processing: cell filtering and doublet detection.\n  * Multisample processing:\
    \ Count transformation, normalization, QC metric calulations.\n  * Integration:\
    \ Clustering, integration and batch correction using single and multimodal methods.\n\
    \  * Downstream analysis workflows\n"
  info:
    test_resources:
    - type: "s3"
      path: "s3://openpipelines-data"
      dest: "resources_test"
  viash_version: "0.9.4"
  source: "src"
  target: "target"
  config_mods:
  - ".resources += {path: '/src/workflows/utils/labels.config', dest: 'nextflow_labels.config'}\n\
    .runners[.type == 'nextflow'].config.script := 'includeConfig(\"nextflow_labels.config\"\
    )'"
  - ".version := \"main_build\""
  - ".engines[.type == 'docker'].target_tag := 'main_build'"
  keywords:
  - "single-cell"
  - "multimodal"
  license: "MIT"
  organization: "openpipelines-bio"
  links:
    repository: "https://github.com/openpipelines-bio/openpipeline"
    docker_registry: "ghcr.io"
    homepage: "https://openpipelines.bio"
    documentation: "https://openpipelines.bio/fundamentals"
    issue_tracker: "https://github.com/openpipelines-bio/openpipeline/issues"
