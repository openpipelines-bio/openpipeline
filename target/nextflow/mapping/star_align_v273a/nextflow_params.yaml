# Input/Output
input: # please fill in - example: ["mysample_S1_L001_R1_001.fastq.gz", "mysample_S1_L001_R2_001.fastq.gz"]
reference: # please fill in - example: "/path/to/reference"
# output: "$id.$key.output.output"

# Run Parameters
# runRNGseed: 777

# Genome Parameters
# genomeLoad: "NoSharedMemory"
# genomeFastaFiles: ["path/to/file"]
# genomeFileSizes: [0]
# genomeTransformOutput: ["foo"]
# genomeChrSetMitochondrial: ["chrM", "M", "MT"]

# Splice Junctions Database
# sjdbFileChrStartEnd: ["foo"]
# sjdbGTFfile: "path/to/file"
# sjdbGTFchrPrefix: "foo"
# sjdbGTFfeatureExon: "exon"
# sjdbGTFtagExonParentTranscript: "transcript_id"
# sjdbGTFtagExonParentGene: "gene_id"
# sjdbGTFtagExonParentGeneName: ["gene_name"]
# sjdbGTFtagExonParentGeneType: ["gene_type", "gene_biotype"]
# sjdbOverhang: 100
# sjdbScore: 2
# sjdbInsertSave: "Basic"

# Variation parameters
# varVCFfile: "foo"

# Read Parameters
# readFilesType: "Fastx"
# readFilesSAMattrKeep: ["All"]
# readFilesManifest: "path/to/file"
# readFilesPrefix: "foo"
# readFilesCommand: ["foo"]
# readMapNumber: -1
# readMatesLengthsIn: "NotEqual"
# readNameSeparator: ["/"]
# readQualityScoreBase: 33

# Read Clipping
# clipAdapterType: "Hamming"
# clip3pNbases: [0]
# clip3pAdapterSeq: ["foo"]
# clip3pAdapterMMp: [0.1]
# clip3pAfterAdapterNbases: [0]
# clip5pNbases: [0]

# Limits
# limitGenomeGenerateRAM: 31000000000
# limitIObufferSize: [30000000, 50000000]
# limitOutSAMoneReadBytes: 100000
# limitOutSJoneRead: 1000
# limitOutSJcollapsed: 1000000
# limitBAMsortRAM: 0
# limitSjdbInsertNsj: 1000000
# limitNreadsSoft: -1

# Output: general
# outTmpKeep: "foo"
# outStd: "Log"
# outReadsUnmapped: "foo"
# outQSconversionAdd: 0
# outMultimapperOrder: "Old_2.4"

# Output: SAM and BAM
# outSAMtype: ["SAM"]
# outSAMmode: "Full"
# outSAMstrandField: "foo"
# outSAMattributes: ["Standard"]
# outSAMattrIHstart: 1
# outSAMunmapped: ["foo"]
# outSAMorder: "Paired"
# outSAMprimaryFlag: "OneBestScore"
# outSAMreadID: "Standard"
# outSAMmapqUnique: 255
# outSAMflagOR: 0
# outSAMflagAND: 65535
# outSAMattrRGline: ["foo"]
# outSAMheaderHD: ["foo"]
# outSAMheaderPG: ["foo"]
# outSAMheaderCommentFile: "foo"
# outSAMfilter: ["foo"]
# outSAMmultNmax: -1
# outSAMtlen: 1
# outBAMcompression: 1
# outBAMsortingThreadN: 0
# outBAMsortingBinsN: 50

# BAM processing
# bamRemoveDuplicatesType: "foo"
# bamRemoveDuplicatesMate2basesN: 0

# Output Wiggle
# outWigType: ["foo"]
# outWigStrand: "Stranded"
# outWigReferencesPrefix: "foo"
# outWigNorm: "RPM"

# Output Filtering
# outFilterType: "Normal"
# outFilterMultimapScoreRange: 1
# outFilterMultimapNmax: 10
# outFilterMismatchNmax: 10
# outFilterMismatchNoverLmax: 0.3
# outFilterMismatchNoverReadLmax: 1.0
# outFilterScoreMin: 0
# outFilterScoreMinOverLread: 0.66
# outFilterMatchNmin: 0
# outFilterMatchNminOverLread: 0.66
# outFilterIntronMotifs: "foo"
# outFilterIntronStrands: "RemoveInconsistentStrands"

# Output splice junctions (SJ.out.tab)
# outSJtype: "Standard"

# Output Filtering: Splice Junctions
# outSJfilterReads: "All"
# outSJfilterOverhangMin: [30, 12, 12, 12]
# outSJfilterCountUniqueMin: [3, 1, 1, 1]
# outSJfilterCountTotalMin: [3, 1, 1, 1]
# outSJfilterDistToOtherSJmin: [10, 0, 5, 10]
# outSJfilterIntronMaxVsReadN: [50000, 100000, 200000]

# Scoring
# scoreGap: 0
# scoreGapNoncan: -8
# scoreGapGCAG: -4
# scoreGapATAC: -8
# scoreGenomicLengthLog2scale: 0
# scoreDelOpen: -2
# scoreDelBase: -2
# scoreInsOpen: -2
# scoreInsBase: -2
# scoreStitchSJshift: 1

# Alignments and Seeding
# seedSearchStartLmax: 50
# seedSearchStartLmaxOverLread: 1.0
# seedSearchLmax: 0
# seedMultimapNmax: 10000
# seedPerReadNmax: 1000
# seedPerWindowNmax: 50
# seedNoneLociPerWindow: 10
# seedSplitMin: 12
# seedMapMin: 5
# alignIntronMin: 21
# alignIntronMax: 0
# alignMatesGapMax: 0
# alignSJoverhangMin: 5
# alignSJstitchMismatchNmax: [0, -1, 0, 0]
# alignSJDBoverhangMin: 3
# alignSplicedMateMapLmin: 0
# alignSplicedMateMapLminOverLmate: 0.66
# alignWindowsPerReadNmax: 10000
# alignTranscriptsPerWindowNmax: 100
# alignTranscriptsPerReadNmax: 10000
# alignEndsType: "Local"
# alignEndsProtrude: "0    ConcordantPair"
# alignSoftClipAtReferenceEnds: "Yes"
# alignInsertionFlush: "foo"

# Paired-End reads
# peOverlapNbasesMin: 0
# peOverlapMMp: 0.01

# Windows, Anchors, Binning
# winAnchorMultimapNmax: 50
# winBinNbits: 16
# winAnchorDistNbins: 9
# winFlankNbins: 4
# winReadCoverageRelativeMin: 0.5
# winReadCoverageBasesMin: 0

# Chimeric Alignments
# chimOutType: ["Junctions"]
# chimSegmentMin: 0
# chimScoreMin: 0
# chimScoreDropMax: 20
# chimScoreSeparation: 10
# chimScoreJunctionNonGTAG: -1
# chimJunctionOverhangMin: 20
# chimSegmentReadGapMax: 0
# chimFilter: ["banGenomicN"]
# chimMainSegmentMultNmax: 10
# chimMultimapNmax: 0
# chimMultimapScoreRange: 1
# chimNonchimScoreDropMin: 20
# chimOutJunctionFormat: 0

# Quantification of Annotations
# quantMode: ["foo"]
# quantTranscriptomeBAMcompression: 1
# quantTranscriptomeBan: "IndelSoftclipSingleend"

# 2-pass Mapping
# twopassMode: "foo"
# twopass1readsN: -1

# WASP parameters
# waspOutputMode: "foo"

# STARsolo (single cell RNA-seq) parameters
# soloType: ["foo"]
# soloCBwhitelist: ["foo"]
# soloCBstart: 1
# soloCBlen: 16
# soloUMIstart: 17
# soloUMIlen: 10
# soloBarcodeReadLength: 1
# soloBarcodeMate: 0
# soloCBposition: ["foo"]
# soloUMIposition: "foo"
# soloAdapterSequence: "foo"
# soloAdapterMismatchesNmax: 1
# soloCBmatchWLtype: "1MM_multi"
# soloInputSAMattrBarcodeSeq: ["foo"]
# soloInputSAMattrBarcodeQual: ["foo"]
# soloStrand: "Forward"
# soloFeatures: ["Gene"]
# soloMultiMappers: ["Unique"]
# soloUMIdedup: ["1MM_All"]
# soloUMIfiltering: ["foo"]
# soloOutFileNames: ["Solo.out/", "features.tsv", "barcodes.tsv", "matrix.mtx"]
# soloCellFilter: ["CellRanger2.2", "3000", "0.99", "10"]
# soloOutFormatFeaturesGeneField3: ["Gene Expression"]
# soloCellReadStats: "foo"

# Nextflow input-output arguments
publish_dir: # please fill in - example: "output/"
# param_list: "my_params.yaml"
