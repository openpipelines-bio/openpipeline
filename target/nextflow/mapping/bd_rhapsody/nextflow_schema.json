{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "title": "bd_rhapsody",
  "description": "BD Rhapsody Sequence Analysis CWL pipeline v2.2.1\n  \nThis pipeline performs analysis of single-cell multiomic sequence read (FASTQ) data. The supported\nsequencing libraries are those generated by the BD Rhapsody assay kits, including: Whole Transcriptome\nmRNA, Targeted mRNA, AbSeq Antibody-Oligonucleotides, Single-Cell Multiplexing, TCR/BCR, and\nATAC-Seq\n\nThe CWL pipeline file is obtained by cloning 'https://bitbucket.org/CRSwDev/cwl' and removing all objects with class 'DockerRequirement' from the YAML.\n",
  "type": "object",
  "$defs": {
    "Dataset input": {
      "title": "Dataset input",
      "type": "object",
      "description": "Dataset input using nf-tower \"dataset\" or \"data explorer\". Allows for the input of multiple         parameter sets to initialise a Nextflow channel.",
      "properties": {
        "param_list": {
          "description": "Dataset input can either be a list of maps, a csv file, a json file, a yaml file, or simply a yaml                 blob. The names of the input fields (e.g. csv columns, json keys) need to be an exact match with the workflow input parameters.",
          "default": "",
          "format": "file-path",
          "mimetype": "text/csv",
          "pattern": "^\\S+\\.csv$"
        }
      }
    },
    "inputs": {
      "title": "Inputs",
      "type": "object",
      "description": "No description",
      "required": [],
      "properties": {
        "reads": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "format": "path",
          "description": "Reads (optional) - Path to your FASTQ",
          "help_text": "Type: `file`, multiple: `True`, example: `WTALibrary_S1_L001_R1_001.fastq.gz;WTALibrary_S1_L001_R2_001.fastq.gz`. "
        },
        "reads_atac": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "format": "path",
          "description": "Path to your FASTQ",
          "help_text": "Type: `file`, multiple: `True`, example: `ATACLibrary_S2_L001_R1_001.fastq.gz;ATACLibrary_S2_L001_R2_001.fastq.gz;ATACLibrary_S2_L001_I2_001.fastq.gz`. "
        }
      }
    },
    "outputs": {
      "title": "Outputs",
      "type": "object",
      "description": "Outputs for all pipeline runs",
      "required": [
        "output_dir"
      ],
      "properties": {
        "output_dir": {
          "type": "string",
          "format": "path",
          "exists": true,
          "description": "The unprocessed output directory containing all the outputs from the pipeline",
          "help_text": "Type: `file`, multiple: `False`, required, default: `$id.$key.output_dir`, example: `output_dir`. ",
          "default": "$id.$key.output_dir"
        },
        "output_seurat": {
          "type": "string",
          "format": "path",
          "description": "Single-cell analysis tool inputs",
          "help_text": "Type: `file`, multiple: `False`, default: `$id.$key.output_seurat.rds`, example: `output_seurat.rds`. ",
          "default": "$id.$key.output_seurat.rds"
        },
        "output_mudata": {
          "type": "string",
          "format": "path",
          "description": "",
          "help_text": "Type: `file`, multiple: `False`, default: `$id.$key.output_mudata.h5mu`, example: `output_mudata.h5mu`. ",
          "default": "$id.$key.output_mudata.h5mu"
        },
        "metrics_summary": {
          "type": "string",
          "format": "path",
          "description": "Metrics Summary",
          "help_text": "Type: `file`, multiple: `False`, default: `$id.$key.metrics_summary.csv`, example: `metrics_summary.csv`. ",
          "default": "$id.$key.metrics_summary.csv"
        },
        "pipeline_report": {
          "type": "string",
          "format": "path",
          "description": "Pipeline Report",
          "help_text": "Type: `file`, multiple: `False`, default: `$id.$key.pipeline_report.html`, example: `pipeline_report.html`. ",
          "default": "$id.$key.pipeline_report.html"
        },
        "rsec_mols_per_cell": {
          "type": "string",
          "format": "path",
          "description": "Molecules per bioproduct per cell bassed on RSEC",
          "help_text": "Type: `file`, multiple: `False`, default: `$id.$key.rsec_mols_per_cell.zip`, example: `RSEC_MolsPerCell_MEX.zip`. ",
          "default": "$id.$key.rsec_mols_per_cell.zip"
        },
        "dbec_mols_per_cell": {
          "type": "string",
          "format": "path",
          "description": "Molecules per bioproduct per cell bassed on DBEC",
          "help_text": "Type: `file`, multiple: `False`, default: `$id.$key.dbec_mols_per_cell.zip`, example: `DBEC_MolsPerCell_MEX.zip`. ",
          "default": "$id.$key.dbec_mols_per_cell.zip"
        },
        "rsec_mols_per_cell_unfiltered": {
          "type": "string",
          "format": "path",
          "description": "Unfiltered tables containing all cell labels with 10 reads",
          "help_text": "Type: `file`, multiple: `False`, default: `$id.$key.rsec_mols_per_cell_unfiltered.zip`, example: `RSEC_MolsPerCell_Unfiltered_MEX.zip`. ",
          "default": "$id.$key.rsec_mols_per_cell_unfiltered.zip"
        },
        "bam": {
          "type": "string",
          "format": "path",
          "description": "Alignment file of R2 with associated R1 annotations for Bioproduct",
          "help_text": "Type: `file`, multiple: `False`, default: `$id.$key.bam.bam`, example: `BioProduct.bam`. ",
          "default": "$id.$key.bam.bam"
        },
        "bam_index": {
          "type": "string",
          "format": "path",
          "description": "Index file for the alignment file",
          "help_text": "Type: `file`, multiple: `False`, default: `$id.$key.bam_index.bai`, example: `BioProduct.bam.bai`. ",
          "default": "$id.$key.bam_index.bai"
        },
        "bioproduct_stats": {
          "type": "string",
          "format": "path",
          "description": "Bioproduct Stats",
          "help_text": "Type: `file`, multiple: `False`, default: `$id.$key.bioproduct_stats.csv`, example: `Bioproduct_Stats.csv`. ",
          "default": "$id.$key.bioproduct_stats.csv"
        },
        "dimred_tsne": {
          "type": "string",
          "format": "path",
          "description": "t-SNE dimensionality reduction coordinates per cell index",
          "help_text": "Type: `file`, multiple: `False`, default: `$id.$key.dimred_tsne.csv`, example: `tSNE_coordinates.csv`. ",
          "default": "$id.$key.dimred_tsne.csv"
        },
        "dimred_umap": {
          "type": "string",
          "format": "path",
          "description": "UMAP dimensionality reduction coordinates per cell index",
          "help_text": "Type: `file`, multiple: `False`, default: `$id.$key.dimred_umap.csv`, example: `UMAP_coordinates.csv`. ",
          "default": "$id.$key.dimred_umap.csv"
        },
        "immune_cell_classification": {
          "type": "string",
          "format": "path",
          "description": "Immune Cell Classification",
          "help_text": "Type: `file`, multiple: `False`, default: `$id.$key.immune_cell_classification.csv`, example: `Immune_Cell_Classification.csv`. ",
          "default": "$id.$key.immune_cell_classification.csv"
        }
      }
    },
    "references": {
      "title": "References",
      "type": "object",
      "description": "Assay type will be inferred from the provided reference(s).\nDo not provide both reference_archive and targeted_reference at the same time.\n  \nValid reference input combinations:\n  - reference_archive: WTA only\n  - reference_archive & abseq_reference: WTA + AbSeq\n  - reference_archive & supplemental_reference: WTA + extra transgenes\n  - reference_archive & abseq_reference & supplemental_reference: WTA + AbSeq + extra transgenes\n  - reference_archive: WTA + ATAC or ATAC only\n  - reference_archive & supplemental_reference: WTA + ATAC + extra transgenes\n  - targeted_reference: Targeted only\n  - targeted_reference & abseq_reference: Targeted + AbSeq\n  - abseq_reference: AbSeq only\n\nThe reference_archive can be generated with the bd_rhapsody_make_reference component.\nAlternatively, BD also provides standard references which can be downloaded from these locations:\n\n  - Human: https://bd-rhapsody-public.s3.amazonaws.com/Rhapsody-WTA/Pipeline-version2.x_WTA_references/RhapRef_Human_WTA_2023-02.tar.gz\n  - Mouse: https://bd-rhapsody-public.s3.amazonaws.com/Rhapsody-WTA/Pipeline-version2.x_WTA_references/RhapRef_Mouse_WTA_2023-02.tar.gz\n",
      "required": [],
      "properties": {
        "reference_archive": {
          "type": "string",
          "format": "path",
          "description": "Path to Rhapsody WTA Reference in the tar",
          "help_text": "Type: `file`, multiple: `False`, example: `RhapRef_Human_WTA_2023-02.tar.gz`. "
        },
        "targeted_reference": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "format": "path",
          "description": "Path to the targeted reference file in FASTA format",
          "help_text": "Type: `file`, multiple: `True`, example: `BD_Rhapsody_Immune_Response_Panel_Hs.fasta`. "
        },
        "abseq_reference": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "format": "path",
          "description": "Path to the AbSeq reference file in FASTA format",
          "help_text": "Type: `file`, multiple: `True`, example: `AbSeq_reference.fasta`. "
        },
        "supplemental_reference": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "format": "path",
          "description": "Path to the supplemental reference file in FASTA format",
          "help_text": "Type: `file`, multiple: `True`, example: `supplemental_reference.fasta`. "
        }
      }
    },
    "multiplex outputs": {
      "title": "Multiplex outputs",
      "type": "object",
      "description": "Outputs when multiplex option is selected",
      "required": [],
      "properties": {
        "sample_tag_metrics": {
          "type": "string",
          "format": "path",
          "description": "Sample Tag Metrics",
          "help_text": "Type: `file`, multiple: `False`, default: `$id.$key.sample_tag_metrics.csv`, example: `Sample_Tag_Metrics.csv`. ",
          "default": "$id.$key.sample_tag_metrics.csv"
        },
        "sample_tag_calls": {
          "type": "string",
          "format": "path",
          "description": "Sample Tag Calls",
          "help_text": "Type: `file`, multiple: `False`, default: `$id.$key.sample_tag_calls.csv`, example: `Sample_Tag_Calls.csv`. ",
          "default": "$id.$key.sample_tag_calls.csv"
        },
        "sample_tag_counts": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "format": "path",
          "description": "Sample Tag Counts",
          "help_text": "Type: `file`, multiple: `True`, default: `$id.$key.sample_tag_counts_*.zip`, example: `Sample_Tag1.zip`. ",
          "default": "$id.$key.sample_tag_counts_*.zip"
        },
        "sample_tag_counts_unassigned": {
          "type": "string",
          "format": "path",
          "description": "Sample Tag Counts Unassigned",
          "help_text": "Type: `file`, multiple: `False`, default: `$id.$key.sample_tag_counts_unassigned.zip`, example: `Multiplet_and_Undetermined.zip`. ",
          "default": "$id.$key.sample_tag_counts_unassigned.zip"
        }
      }
    },
    "vdj outputs": {
      "title": "VDJ Outputs",
      "type": "object",
      "description": "Outputs when VDJ option selected",
      "required": [],
      "properties": {
        "vdj_metrics": {
          "type": "string",
          "format": "path",
          "description": "VDJ Metrics",
          "help_text": "Type: `file`, multiple: `False`, default: `$id.$key.vdj_metrics.csv`, example: `VDJ_Metrics.csv`. ",
          "default": "$id.$key.vdj_metrics.csv"
        },
        "vdj_per_cell": {
          "type": "string",
          "format": "path",
          "description": "VDJ Per Cell",
          "help_text": "Type: `file`, multiple: `False`, default: `$id.$key.vdj_per_cell.csv`, example: `VDJ_perCell.csv`. ",
          "default": "$id.$key.vdj_per_cell.csv"
        },
        "vdj_per_cell_uncorrected": {
          "type": "string",
          "format": "path",
          "description": "VDJ Per Cell Uncorrected",
          "help_text": "Type: `file`, multiple: `False`, default: `$id.$key.vdj_per_cell_uncorrected.csv`, example: `VDJ_perCell_uncorrected.csv`. ",
          "default": "$id.$key.vdj_per_cell_uncorrected.csv"
        },
        "vdj_dominant_contigs": {
          "type": "string",
          "format": "path",
          "description": "VDJ Dominant Contigs",
          "help_text": "Type: `file`, multiple: `False`, default: `$id.$key.vdj_dominant_contigs.csv`, example: `VDJ_Dominant_Contigs_AIRR.csv`. ",
          "default": "$id.$key.vdj_dominant_contigs.csv"
        },
        "vdj_unfiltered_contigs": {
          "type": "string",
          "format": "path",
          "description": "VDJ Unfiltered Contigs",
          "help_text": "Type: `file`, multiple: `False`, default: `$id.$key.vdj_unfiltered_contigs.csv`, example: `VDJ_Unfiltered_Contigs_AIRR.csv`. ",
          "default": "$id.$key.vdj_unfiltered_contigs.csv"
        }
      }
    },
    "atac-seq outputs": {
      "title": "ATAC-Seq outputs",
      "type": "object",
      "description": "Outputs when ATAC-Seq option selected",
      "required": [],
      "properties": {
        "atac_metrics": {
          "type": "string",
          "format": "path",
          "description": "ATAC Metrics",
          "help_text": "Type: `file`, multiple: `False`, default: `$id.$key.atac_metrics.csv`, example: `ATAC_Metrics.csv`. ",
          "default": "$id.$key.atac_metrics.csv"
        },
        "atac_metrics_json": {
          "type": "string",
          "format": "path",
          "description": "ATAC Metrics JSON",
          "help_text": "Type: `file`, multiple: `False`, default: `$id.$key.atac_metrics_json.json`, example: `ATAC_Metrics.json`. ",
          "default": "$id.$key.atac_metrics_json.json"
        },
        "atac_fragments": {
          "type": "string",
          "format": "path",
          "description": "ATAC Fragments",
          "help_text": "Type: `file`, multiple: `False`, default: `$id.$key.atac_fragments.gz`, example: `ATAC_Fragments.bed.gz`. ",
          "default": "$id.$key.atac_fragments.gz"
        },
        "atac_fragments_index": {
          "type": "string",
          "format": "path",
          "description": "Index of ATAC Fragments",
          "help_text": "Type: `file`, multiple: `False`, default: `$id.$key.atac_fragments_index.tbi`, example: `ATAC_Fragments.bed.gz.tbi`. ",
          "default": "$id.$key.atac_fragments_index.tbi"
        },
        "atac_transposase_sites": {
          "type": "string",
          "format": "path",
          "description": "ATAC Transposase Sites",
          "help_text": "Type: `file`, multiple: `False`, default: `$id.$key.atac_transposase_sites.gz`, example: `ATAC_Transposase_Sites.bed.gz`. ",
          "default": "$id.$key.atac_transposase_sites.gz"
        },
        "atac_transposase_sites_index": {
          "type": "string",
          "format": "path",
          "description": "Index of ATAC Transposase Sites",
          "help_text": "Type: `file`, multiple: `False`, default: `$id.$key.atac_transposase_sites_index.tbi`, example: `ATAC_Transposase_Sites.bed.gz.tbi`. ",
          "default": "$id.$key.atac_transposase_sites_index.tbi"
        },
        "atac_peaks": {
          "type": "string",
          "format": "path",
          "description": "ATAC Peaks",
          "help_text": "Type: `file`, multiple: `False`, default: `$id.$key.atac_peaks.gz`, example: `ATAC_Peaks.bed.gz`. ",
          "default": "$id.$key.atac_peaks.gz"
        },
        "atac_peaks_index": {
          "type": "string",
          "format": "path",
          "description": "Index of ATAC Peaks",
          "help_text": "Type: `file`, multiple: `False`, default: `$id.$key.atac_peaks_index.tbi`, example: `ATAC_Peaks.bed.gz.tbi`. ",
          "default": "$id.$key.atac_peaks_index.tbi"
        },
        "atac_peak_annotation": {
          "type": "string",
          "format": "path",
          "description": "ATAC Peak Annotation",
          "help_text": "Type: `file`, multiple: `False`, default: `$id.$key.atac_peak_annotation.gz`, example: `peak_annotation.tsv.gz`. ",
          "default": "$id.$key.atac_peak_annotation.gz"
        },
        "atac_cell_by_peak": {
          "type": "string",
          "format": "path",
          "description": "ATAC Cell by Peak",
          "help_text": "Type: `file`, multiple: `False`, default: `$id.$key.atac_cell_by_peak.zip`, example: `ATAC_Cell_by_Peak_MEX.zip`. ",
          "default": "$id.$key.atac_cell_by_peak.zip"
        },
        "atac_cell_by_peak_unfiltered": {
          "type": "string",
          "format": "path",
          "description": "ATAC Cell by Peak Unfiltered",
          "help_text": "Type: `file`, multiple: `False`, default: `$id.$key.atac_cell_by_peak_unfiltered.zip`, example: `ATAC_Cell_by_Peak_Unfiltered_MEX.zip`. ",
          "default": "$id.$key.atac_cell_by_peak_unfiltered.zip"
        },
        "atac_bam": {
          "type": "string",
          "format": "path",
          "description": "ATAC BAM",
          "help_text": "Type: `file`, multiple: `False`, default: `$id.$key.atac_bam.bam`, example: `ATAC.bam`. ",
          "default": "$id.$key.atac_bam.bam"
        },
        "atac_bam_index": {
          "type": "string",
          "format": "path",
          "description": "Index of ATAC BAM",
          "help_text": "Type: `file`, multiple: `False`, default: `$id.$key.atac_bam_index.bai`, example: `ATAC.bam.bai`. ",
          "default": "$id.$key.atac_bam_index.bai"
        }
      }
    },
    "abseq cell calling outputs": {
      "title": "AbSeq Cell Calling outputs",
      "type": "object",
      "description": "Outputs when Cell Calling Abseq is selected",
      "required": [],
      "properties": {
        "protein_aggregates_experimental": {
          "type": "string",
          "format": "path",
          "description": "Protein Aggregates Experimental",
          "help_text": "Type: `file`, multiple: `False`, default: `$id.$key.protein_aggregates_experimental.csv`, example: `Protein_Aggregates_Experimental.csv`. ",
          "default": "$id.$key.protein_aggregates_experimental.csv"
        }
      }
    },
    "putative cell calling settings": {
      "title": "Putative Cell Calling Settings",
      "type": "object",
      "description": "No description",
      "required": [],
      "properties": {
        "cell_calling_data": {
          "type": "string",
          "description": "Specify the dataset to be used for putative cell calling: mRNA, AbSeq, ATAC, mRNA_and_ATAC\n  \nFor putative cell calling using an AbSeq dataset, please provide an AbSeq_Reference fasta file above",
          "help_text": "Type: `string`, multiple: `False`, example: `mRNA`, choices: ``mRNA`, `AbSeq`, `ATAC`, `mRNA_and_ATAC``. ",
          "enum": [
            "mRNA",
            "AbSeq",
            "ATAC",
            "mRNA_and_ATAC"
          ]
        },
        "cell_calling_bioproduct_algorithm": {
          "type": "string",
          "description": "Specify the bioproduct algorithm to be used for putative cell calling: Basic or Refined\n  \nBy default, the Basic algorithm will be used for putative cell calling",
          "help_text": "Type: `string`, multiple: `False`, example: `Basic`, choices: ``Basic`, `Refined``. ",
          "enum": [
            "Basic",
            "Refined"
          ]
        },
        "cell_calling_atac_algorithm": {
          "type": "string",
          "description": "Specify the ATAC-seq algorithm to be used for putative cell calling: Basic or Refined\n  \nBy default, the Basic algorithm will be used for putative cell calling",
          "help_text": "Type: `string`, multiple: `False`, example: `Basic`, choices: ``Basic`, `Refined``. ",
          "enum": [
            "Basic",
            "Refined"
          ]
        },
        "exact_cell_count": {
          "type": "integer",
          "description": "Set a specific number of cells as putative, based on those with the highest error-corrected read count\n",
          "help_text": "Type: `integer`, multiple: `False`, example: `10000`. "
        },
        "expected_cell_count": {
          "type": "integer",
          "description": "Guide the basic putative cell calling algorithm by providing an estimate of the number of cells expected",
          "help_text": "Type: `integer`, multiple: `False`, example: `20000`. "
        }
      }
    },
    "intronic reads settings": {
      "title": "Intronic Reads Settings",
      "type": "object",
      "description": "No description",
      "required": [],
      "properties": {
        "exclude_intronic_reads": {
          "type": "boolean",
          "description": "By default, the flag is false, and reads aligned to exons and introns are considered and represented in molecule counts",
          "help_text": "Type: `boolean`, multiple: `False`, example: `false`. "
        }
      }
    },
    "multiplex settings": {
      "title": "Multiplex Settings",
      "type": "object",
      "description": "No description",
      "required": [],
      "properties": {
        "sample_tags_version": {
          "type": "string",
          "description": "Specify the version of the Sample Tags used in the run:\n\n* If Sample Tag Multiplexing was done, specify the appropriate version: human, mouse, flex, nuclei_includes_mrna, nuclei_atac_only\n* If this is an SMK + Nuclei mRNA run or an SMK + Multiomic ATAC-Seq (WTA+ATAC-Seq) run (and not an SMK + ATAC-Seq only run), choose the \"nuclei_includes_mrna\" option",
          "help_text": "Type: `string`, multiple: `False`, example: `human`, choices: ``human`, `mouse`, `flex`, `nuclei_includes_mrna`, `nuclei_atac_only``. ",
          "enum": [
            "human",
            "mouse",
            "flex",
            "nuclei_includes_mrna",
            "nuclei_atac_only"
          ]
        },
        "tag_names": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Specify the tag number followed by '-' and the desired sample name to appear in Sample_Tag_Metrics",
          "help_text": "Type: `string`, multiple: `True`, example: `4-mySample;9-myOtherSample;6-alsoThisSample`. "
        }
      }
    },
    "vdj arguments": {
      "title": "VDJ arguments",
      "type": "object",
      "description": "No description",
      "required": [],
      "properties": {
        "vdj_version": {
          "type": "string",
          "description": "If VDJ was done, specify the appropriate option: human, mouse, humanBCR, humanTCR, mouseBCR, mouseTCR\n",
          "help_text": "Type: `string`, multiple: `False`, example: `human`, choices: ``human`, `mouse`, `humanBCR`, `humanTCR`, `mouseBCR`, `mouseTCR``. ",
          "enum": [
            "human",
            "mouse",
            "humanBCR",
            "humanTCR",
            "mouseBCR",
            "mouseTCR"
          ]
        }
      }
    },
    "atac options": {
      "title": "ATAC options",
      "type": "object",
      "description": "No description",
      "required": [],
      "properties": {
        "predefined_atac_peaks": {
          "type": "string",
          "format": "path",
          "description": "An optional BED file containing pre-established chromatin accessibility peak regions for generating the ATAC cell-by-peak matrix",
          "help_text": "Type: `file`, multiple: `False`, example: `predefined_peaks.bed`. "
        }
      }
    },
    "additional options": {
      "title": "Additional options",
      "type": "object",
      "description": "No description",
      "required": [],
      "properties": {
        "run_name": {
          "type": "string",
          "description": "Specify a run name to use as the output file base name",
          "help_text": "Type: `string`, multiple: `False`, default: `sample`. ",
          "default": "sample"
        },
        "generate_bam": {
          "type": "boolean",
          "description": "Specify whether to create the BAM file output\n",
          "help_text": "Type: `boolean`, multiple: `False`, default: `false`. ",
          "default": false
        },
        "long_reads": {
          "type": "boolean",
          "description": "Use STARlong (default: undefined - i",
          "help_text": "Type: `boolean`, multiple: `False`. "
        }
      }
    },
    "advanced options": {
      "title": "Advanced options",
      "type": "object",
      "description": "NOTE: Only change these if you are really sure about what you are doing\n",
      "required": [],
      "properties": {
        "custom_star_params": {
          "type": "string",
          "description": "Modify STAR alignment parameters - Set this parameter to fully override default STAR mapping parameters used in the pipeline",
          "help_text": "Type: `string`, multiple: `False`, example: `--alignIntronMax 6000 --outFilterScoreMinOverLread 0.1 --limitOutSJcollapsed 2000000`. "
        },
        "custom_bwa_mem2_params": {
          "type": "string",
          "description": "Modify bwa-mem2 alignment parameters - Set this parameter to fully override bwa-mem2 mapping parameters used in the pipeline\nThe pipeline does not specify any custom mapping params to bwa-mem2 so program default values are used\nThis applies to fastqs provided in the Reads_ATAC user input \nDo NOT set any non-mapping related params like `-C`, `-t`, etc",
          "help_text": "Type: `string`, multiple: `False`, example: `-k 16 -w 200 -r`. "
        }
      }
    },
    "cwl-runner arguments": {
      "title": "CWL-runner arguments",
      "type": "object",
      "description": "No description",
      "required": [],
      "properties": {
        "parallel": {
          "type": "boolean",
          "description": "Run jobs in parallel",
          "help_text": "Type: `boolean`, multiple: `False`, default: `true`. ",
          "default": true
        },
        "timestamps": {
          "type": "boolean",
          "description": "Add timestamps to the errors, warnings, and notifications",
          "help_text": "Type: `boolean_true`, multiple: `False`, default: `false`. ",
          "default": false
        }
      }
    },
    "undocumented arguments": {
      "title": "Undocumented arguments",
      "type": "object",
      "description": "No description",
      "required": [],
      "properties": {
        "abseq_umi": {
          "type": "integer",
          "description": "",
          "help_text": "Type: `integer`, multiple: `False`. "
        },
        "target_analysis": {
          "type": "boolean",
          "description": "",
          "help_text": "Type: `boolean`, multiple: `False`. "
        },
        "vdj_jgene_evalue": {
          "type": "number",
          "description": "e-value threshold for J gene",
          "help_text": "Type: `double`, multiple: `False`. "
        },
        "vdj_vgene_evalue": {
          "type": "number",
          "description": "e-value threshold for V gene",
          "help_text": "Type: `double`, multiple: `False`. "
        },
        "write_filtered_reads": {
          "type": "boolean",
          "description": "",
          "help_text": "Type: `boolean`, multiple: `False`. "
        }
      }
    },
    "nextflow input-output arguments": {
      "title": "Nextflow input-output arguments",
      "type": "object",
      "description": "Input/output parameters for Nextflow itself. Please note that both publishDir and publish_dir are supported but at least one has to be configured.",
      "required": [],
      "properties": {
        "publish_dir": {
          "type": "string",
          "description": "Path to an output directory",
          "help_text": "Type: `string`, multiple: `False`, required, example: `output/`. "
        }
      }
    }
  },
  "allOf": [
    {
      "$ref": "#/$defs/inputs"
    },
    {
      "$ref": "#/$defs/outputs"
    },
    {
      "$ref": "#/$defs/references"
    },
    {
      "$ref": "#/$defs/multiplex outputs"
    },
    {
      "$ref": "#/$defs/vdj outputs"
    },
    {
      "$ref": "#/$defs/atac-seq outputs"
    },
    {
      "$ref": "#/$defs/abseq cell calling outputs"
    },
    {
      "$ref": "#/$defs/putative cell calling settings"
    },
    {
      "$ref": "#/$defs/intronic reads settings"
    },
    {
      "$ref": "#/$defs/multiplex settings"
    },
    {
      "$ref": "#/$defs/vdj arguments"
    },
    {
      "$ref": "#/$defs/atac options"
    },
    {
      "$ref": "#/$defs/additional options"
    },
    {
      "$ref": "#/$defs/advanced options"
    },
    {
      "$ref": "#/$defs/cwl-runner arguments"
    },
    {
      "$ref": "#/$defs/undocumented arguments"
    },
    {
      "$ref": "#/$defs/nextflow input-output arguments"
    }
  ]
}
