manifest {
  name = 'mapping/bd_rhapsody'
  mainScript = 'main.nf'
  nextflowVersion = '!>=20.12.1-edge'
  version = '1.0.5'
  description = 'A wrapper for the BD Rhapsody Analysis CWL v1.10.1 pipeline.\n\nThe CWL pipeline file is obtained by cloning \'https://bitbucket.org/CRSwDev/cwl/src/master/\' and removing all objects with class \'DockerRequirement\' from the YML.\n\nThis pipeline can be used for a targeted analysis (with `--mode targeted`) or for a whole transcriptome analysis (with `--mode wta`).\n\n* If mode is `"targeted"`, then either the `--reference` or `--abseq_reference` parameters must be defined.\n* If mode is `"wta"`, then `--reference` and `--transcriptome_annotation` must be defined, `--abseq_reference` and `--supplemental_reference` is optional.\n\nThe reference_genome and transcriptome_annotation files can be generated with the make_reference pipeline.\nAlternatively, BD also provides standard references which can be downloaded from these locations:\n\n  - Human: http://bd-rhapsody-public.s3-website-us-east-1.amazonaws.com/Rhapsody-WTA/GRCh38-PhiX-gencodev29/\n  - Mouse: http://bd-rhapsody-public.s3-website-us-east-1.amazonaws.com/Rhapsody-WTA/GRCm38-PhiX-gencodevM19/\n'
  author = 'Robrecht Cannoodt'
}

process.container = 'nextflow/bash:latest'

// detect tempdir
tempDir = java.nio.file.Paths.get(
  System.getenv('NXF_TEMP') ?:
    System.getenv('VIASH_TEMP') ?: 
    System.getenv('TEMPDIR') ?: 
    System.getenv('TMPDIR') ?: 
    '/tmp'
).toAbsolutePath()

profiles {
  no_publish {
    process {
      withName: '.*' {
        publishDir = [
          enabled: false
        ]
      }
    }
  }
  mount_temp {
    docker.temp            = tempDir
    podman.temp            = tempDir
    charliecloud.temp      = tempDir
  }
  docker {
    docker.enabled         = true
    // docker.userEmulation   = true
    singularity.enabled    = false
    podman.enabled         = false
    shifter.enabled        = false
    charliecloud.enabled   = false
  }
  singularity {
    singularity.enabled    = true
    singularity.autoMounts = true
    docker.enabled         = false
    podman.enabled         = false
    shifter.enabled        = false
    charliecloud.enabled   = false
  }
  podman {
    podman.enabled         = true
    docker.enabled         = false
    singularity.enabled    = false
    shifter.enabled        = false
    charliecloud.enabled   = false
  }
  shifter {
    shifter.enabled        = true
    docker.enabled         = false
    singularity.enabled    = false
    podman.enabled         = false
    charliecloud.enabled   = false
  }
  charliecloud {
    charliecloud.enabled   = true
    docker.enabled         = false
    singularity.enabled    = false
    podman.enabled         = false
    shifter.enabled        = false
  }
}

process{
  withLabel: mem1gb { memory = 1.GB }
  withLabel: mem2gb { memory = 2.GB }
  withLabel: mem4gb { memory = 4.GB }
  withLabel: mem8gb { memory = 8.GB }
  withLabel: mem16gb { memory = 16.GB }
  withLabel: mem32gb { memory = 32.GB }
  withLabel: mem64gb { memory = 64.GB }
  withLabel: mem128gb { memory = 128.GB }
  withLabel: mem256gb { memory = 256.GB }
  withLabel: mem512gb { memory = 512.GB }
  withLabel: mem1tb { memory = 1.TB }
  withLabel: mem2tb { memory = 2.TB }
  withLabel: mem4tb { memory = 4.TB }
  withLabel: mem8tb { memory = 8.TB }
  withLabel: mem16tb { memory = 16.TB }
  withLabel: mem32tb { memory = 32.TB }
  withLabel: mem64tb { memory = 64.TB }
  withLabel: mem128tb { memory = 128.TB }
  withLabel: mem256tb { memory = 256.TB }
  withLabel: mem512tb { memory = 512.TB }
  withLabel: cpu1 { cpus = 1 }
  withLabel: cpu2 { cpus = 2 }
  withLabel: cpu5 { cpus = 5 }
  withLabel: cpu10 { cpus = 10 }
  withLabel: cpu20 { cpus = 20 }
  withLabel: cpu50 { cpus = 50 }
  withLabel: cpu100 { cpus = 100 }
  withLabel: cpu200 { cpus = 200 }
  withLabel: cpu500 { cpus = 500 }
  withLabel: cpu1000 { cpus = 1000 }
}

includeConfig("nextflow_labels.config")
