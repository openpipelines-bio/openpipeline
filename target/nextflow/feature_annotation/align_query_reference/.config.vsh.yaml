name: "align_query_reference"
namespace: "feature_annotation"
version: "2.1.2"
authors:
- name: "Dorien Roosen"
  roles:
  - "maintainer"
  info:
    role: "Core Team Member"
    links:
      email: "dorien@data-intuitive.com"
      github: "dorien-er"
      linkedin: "dorien-roosen"
    organizations:
    - name: "Data Intuitive"
      href: "https://www.data-intuitive.com"
      role: "Data Scientist"
argument_groups:
- name: "Inputs"
  description: "Input dataset (query) arguments"
  arguments:
  - type: "file"
    name: "--input"
    description: "The input (query) data to be labeled. Should be a .h5mu file."
    info: null
    example:
    - "input.h5mu"
    must_exist: true
    create_parent: true
    required: true
    direction: "input"
    multiple: false
    multiple_sep: ";"
  - type: "string"
    name: "--modality"
    description: "Which modality to process. Note that the query and reference modalities\
      \ should be the same."
    info: null
    default:
    - "rna"
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ";"
  - type: "string"
    name: "--input_layer"
    description: "The layer in the input (query) data containing raw counts if .X\
      \ is not to be used."
    info: null
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ";"
  - type: "string"
    name: "--input_layer_lognormalized"
    description: "The layer in the input (query) data containing log normalized counts\
      \ if .X is not to be used."
    info: null
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ";"
  - type: "string"
    name: "--input_var_gene_names"
    description: "The name of the .var column in the input (query) data containing\
      \ gene names; when no gene_name_layer is provided, the var index will be used.\n"
    info: null
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ";"
  - type: "string"
    name: "--input_obs_batch"
    description: "The name of the .obs column in the input (query) data containing\
      \ batch information.\n"
    info: null
    example:
    - "sample_id"
    required: true
    direction: "input"
    multiple: false
    multiple_sep: ";"
  - type: "string"
    name: "--input_obs_label"
    description: "The name of the .obs column in the input (query) data containing\
      \ cell type labels. If not provided, the --unkown_celltype_label will be assigned\
      \ to all observations.\n"
    info: null
    example:
    - "cell_type"
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ";"
  - type: "string"
    name: "--input_id"
    description: "Meta id value to be assigned to the --output_obs_id .obs field of\
      \ the aligned input (query) data.\n"
    info: null
    default:
    - "query"
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ";"
- name: "Reference"
  description: "Arguments related to the reference dataset."
  arguments:
  - type: "file"
    name: "--reference"
    description: "The reference data to train the CellTypist classifiers on. Only\
      \ required if a pre-trained --model is not provided."
    info: null
    example:
    - "reference.h5mu"
    must_exist: true
    create_parent: true
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ";"
  - type: "string"
    name: "--reference_layer"
    description: "The layer in the reference data containing raw counts if .X is not\
      \ to be used. Data are expected to be processed in the same way as the --input\
      \ query dataset."
    info: null
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ";"
  - type: "string"
    name: "--reference_layer_lognormalized"
    description: "The layer in the reference data containing log normalized counts\
      \ if .X is not to be used. Data are expected to be processed in the same way\
      \ as the --input query dataset."
    info: null
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ";"
  - type: "string"
    name: "--reference_var_gene_names"
    description: "The name of the .var column in the reference data containing gene\
      \ names; when no gene_name_layer is provided, the var index will be used.\n"
    info: null
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ";"
  - type: "string"
    name: "--reference_obs_batch"
    description: "The name of the .obs column in the reference data containing batch\
      \ information.\n"
    info: null
    example:
    - "sample_id"
    required: true
    direction: "input"
    multiple: false
    multiple_sep: ";"
  - type: "string"
    name: "--reference_obs_label"
    description: "The name of the .obs column in the reference data containing cell\
      \ type labels. If not provided, the --unkown_celltype_label will be assigned\
      \ to all observations.\n"
    info: null
    example:
    - "cell_type"
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ";"
  - type: "string"
    name: "--reference_id"
    description: "Meta id value to be assigned to the --output_obs_id .obs field of\
      \ the aligned reference data.\n"
    info: null
    default:
    - "reference"
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ";"
- name: "Outputs"
  description: "Output arguments."
  arguments:
  - type: "file"
    name: "--output_query"
    description: "Aligned query data."
    info: null
    example:
    - "output_query.h5mu"
    must_exist: true
    create_parent: true
    required: false
    direction: "output"
    multiple: false
    multiple_sep: ";"
  - type: "file"
    name: "--output_reference"
    description: "Aligned reference data."
    info: null
    example:
    - "output_reference.h5mu"
    must_exist: true
    create_parent: true
    required: false
    direction: "output"
    multiple: false
    multiple_sep: ";"
  - type: "string"
    name: "--output_compression"
    info: null
    example:
    - "gzip"
    required: false
    choices:
    - "gzip"
    - "lzf"
    direction: "input"
    multiple: false
    multiple_sep: ";"
  - type: "string"
    name: "--output_layer"
    description: "Name of the aligned layer containing raw counts in the output query\
      \ and reference datasets."
    info: null
    default:
    - "_counts"
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ";"
  - type: "string"
    name: "--output_layer_lognormalized"
    description: "Name of the aligned layer containing log normalized counts in the\
      \ output query and reference datasets."
    info: null
    default:
    - "_log_normalized"
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ";"
  - type: "string"
    name: "--output_var_gene_names"
    description: "Name of the .var column in the output query and reference datasets\
      \ containing the gene names."
    info: null
    default:
    - "_gene_names"
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ";"
  - type: "string"
    name: "--output_obs_batch"
    description: "Name of the .obs column in the output query and reference datasets\
      \ containing the batch information."
    info: null
    default:
    - "_sample_id"
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ";"
  - type: "string"
    name: "--output_obs_label"
    description: "Name of the .obs column in the output query and reference datasets\
      \ containing the cell type labels."
    info: null
    default:
    - "_cell_type"
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ";"
  - type: "string"
    name: "--output_obs_id"
    description: "Name of the .obs column in the output query and reference datasets\
      \ containing the dataset id."
    info: null
    default:
    - "_dataset"
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ";"
  - type: "string"
    name: "--output_var_index"
    description: "Name of the .var column to which the .var index of the --input and\
      \ --reference datasets is stored. Only relevant if \"--preserve_var_index\"\
      \ is False."
    info: null
    default:
    - "_ori_var_index"
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ";"
  - type: "string"
    name: "--output_var_common_genes"
    description: "Name of the .var column in the output query and reference datasets\
      \ containing the boolean array indicating the common variables."
    info: null
    default:
    - "_common_vars"
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ";"
- name: "Arguments"
  description: "Arguments related to the alignment of the input and reference datasets."
  arguments:
  - type: "integer"
    name: "--input_reference_gene_overlap"
    description: "The minimum number of genes present in both the reference and query\
      \ datasets.\n"
    info: null
    default:
    - 100
    required: false
    min: 1
    direction: "input"
    multiple: false
    multiple_sep: ";"
  - type: "boolean"
    name: "--align_layers_raw_counts"
    description: "Whether to align the query and reference layers containing raw counts."
    info: null
    default:
    - true
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ";"
  - type: "boolean_true"
    name: "--align_layers_lognormalized_counts"
    description: "Whether to align the query and reference layers containing log normalized\
      \ counts."
    info: null
    direction: "input"
  - type: "string"
    name: "--unkown_celltype_label"
    description: "The label to assign to cells with an unknown cell type.\n"
    info: null
    default:
    - "Unknown"
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ";"
  - type: "boolean_true"
    name: "--overwrite_existing_key"
    description: "If set to true and the layer, obs or var key already exists in the\
      \ query/reference file, the key will be overwritten."
    info: null
    direction: "input"
  - type: "boolean_true"
    name: "--preserve_var_index"
    description: "If set to true, the .var index of the --input and --reference datasets\
      \ will be preserved.\nIf set to false (default behavior), the original .var\
      \ index will be stored in the --output_var_index .var column and the .var index\
      \ will be replaced with the sanitized & aligned gene names.\n"
    info: null
    direction: "input"
resources:
- type: "python_script"
  path: "script.py"
  is_executable: true
- type: "file"
  path: "setup_logger.py"
- type: "file"
  path: "cross_check_genes.py"
- type: "file"
  path: "compress_h5mu.py"
- type: "file"
  path: "nextflow_labels.config"
  dest: "nextflow_labels.config"
description: "Alignment of a query and reference dataset by:\n* Alignment of layers\n\
  * Harmonization of .obs field names for batch and cell type labels\n* Harmonization\
  \ of .var field name for gene names\n* Sanitation of gene names\n* Cross-checking\
  \ of genes\n* Assignment of an id to the query and reference datasets\n"
test_resources:
- type: "python_script"
  path: "test.py"
  is_executable: true
- type: "file"
  path: "pbmc_1k_protein_v3_mms.h5mu"
- type: "file"
  path: "TS_Blood_filtered.h5mu"
info: null
status: "enabled"
scope:
  image: "public"
  target: "public"
license: "MIT"
links:
  repository: "https://github.com/openpipelines-bio/openpipeline"
  docker_registry: "ghcr.io"
runners:
- type: "executable"
  id: "executable"
  docker_setup_strategy: "ifneedbepullelsecachedbuild"
- type: "nextflow"
  id: "nextflow"
  directives:
    label:
    - "lowcpu"
    - "midmem"
    tag: "$id"
  auto:
    simplifyInput: true
    simplifyOutput: false
    transcript: false
    publish: false
  config:
    labels:
      mem1gb: "memory = 1000000000.B"
      mem2gb: "memory = 2000000000.B"
      mem5gb: "memory = 5000000000.B"
      mem10gb: "memory = 10000000000.B"
      mem20gb: "memory = 20000000000.B"
      mem50gb: "memory = 50000000000.B"
      mem100gb: "memory = 100000000000.B"
      mem200gb: "memory = 200000000000.B"
      mem500gb: "memory = 500000000000.B"
      mem1tb: "memory = 1000000000000.B"
      mem2tb: "memory = 2000000000000.B"
      mem5tb: "memory = 5000000000000.B"
      mem10tb: "memory = 10000000000000.B"
      mem20tb: "memory = 20000000000000.B"
      mem50tb: "memory = 50000000000000.B"
      mem100tb: "memory = 100000000000000.B"
      mem200tb: "memory = 200000000000000.B"
      mem500tb: "memory = 500000000000000.B"
      mem1gib: "memory = 1073741824.B"
      mem2gib: "memory = 2147483648.B"
      mem4gib: "memory = 4294967296.B"
      mem8gib: "memory = 8589934592.B"
      mem16gib: "memory = 17179869184.B"
      mem32gib: "memory = 34359738368.B"
      mem64gib: "memory = 68719476736.B"
      mem128gib: "memory = 137438953472.B"
      mem256gib: "memory = 274877906944.B"
      mem512gib: "memory = 549755813888.B"
      mem1tib: "memory = 1099511627776.B"
      mem2tib: "memory = 2199023255552.B"
      mem4tib: "memory = 4398046511104.B"
      mem8tib: "memory = 8796093022208.B"
      mem16tib: "memory = 17592186044416.B"
      mem32tib: "memory = 35184372088832.B"
      mem64tib: "memory = 70368744177664.B"
      mem128tib: "memory = 140737488355328.B"
      mem256tib: "memory = 281474976710656.B"
      mem512tib: "memory = 562949953421312.B"
      cpu1: "cpus = 1"
      cpu2: "cpus = 2"
      cpu5: "cpus = 5"
      cpu10: "cpus = 10"
      cpu20: "cpus = 20"
      cpu50: "cpus = 50"
      cpu100: "cpus = 100"
      cpu200: "cpus = 200"
      cpu500: "cpus = 500"
      cpu1000: "cpus = 1000"
    script:
    - "includeConfig(\"nextflow_labels.config\")"
  debug: false
  container: "docker"
engines:
- type: "docker"
  id: "docker"
  image: "python:3.12-slim"
  target_tag: "2.1.0"
  namespace_separator: "/"
  setup:
  - type: "apt"
    packages:
    - "procps"
    interactive: false
  - type: "python"
    user: false
    packages:
    - "anndata~=0.11.1"
    - "mudata~=0.3.1"
    script:
    - "exec(\"try:\\n  import awkward\\nexcept ModuleNotFoundError:\\n  exit(0)\\\
      nelse:  exit(1)\")"
    upgrade: true
  test_setup:
  - type: "apt"
    packages:
    - "git"
    interactive: false
  - type: "python"
    user: false
    packages:
    - "viashpy==0.8.0"
    github:
    - "openpipelines-bio/core#subdirectory=packages/python/openpipeline_testutils"
    upgrade: true
  entrypoint: []
  cmd: null
build_info:
  config: "src/feature_annotation/align_query_reference/config.vsh.yaml"
  runner: "nextflow"
  engine: "docker"
  output: "target/nextflow/feature_annotation/align_query_reference"
  executable: "target/nextflow/feature_annotation/align_query_reference/main.nf"
  viash_version: "0.9.4"
  git_commit: "a0c9522486585774f76416150f8a3291409b5363"
  git_remote: "https://github.com/openpipelines-bio/openpipeline"
  git_tag: "2.1.1-2-ga0c95224865"
package_config:
  name: "openpipeline"
  summary: "Best-practice workflows for single-cell multi-omics analyses.\n"
  description: "OpenPipelines are extensible single cell analysis pipelines for reproducible\
    \ and large-scale single cell processing using [Viash](https://viash.io) and [Nextflow](https://www.nextflow.io/).\n\
    \nIn terms of workflows, the following has been made available, but keep in mind\
    \ that\nindividual tools and functionality can be executed as standalone components\
    \ as well.\n\n  * Demultiplexing: conversion of raw sequencing data to FASTQ objects.\n\
    \  * Ingestion: Read mapping and generating a count matrix.\n  * Single sample\
    \ processing: cell filtering and doublet detection.\n  * Multisample processing:\
    \ Count transformation, normalization, QC metric calulations.\n  * Integration:\
    \ Clustering, integration and batch correction using single and multimodal methods.\n\
    \  * Downstream analysis workflows\n"
  info:
    test_resources:
    - type: "s3"
      path: "s3://openpipelines-data"
      dest: "resources_test"
  viash_version: "0.9.4"
  source: "src"
  target: "target"
  config_mods:
  - ".resources += {path: '/src/workflows/utils/labels.config', dest: 'nextflow_labels.config'}\n\
    .runners[.type == 'nextflow'].config.script := 'includeConfig(\"nextflow_labels.config\"\
    )'"
  - ".version := \"2.1.2\""
  - ".engines[.type == 'docker'].target_tag := '2.1.0'"
  keywords:
  - "single-cell"
  - "multimodal"
  license: "MIT"
  organization: "openpipelines-bio"
  links:
    repository: "https://github.com/openpipelines-bio/openpipeline"
    docker_registry: "ghcr.io"
    homepage: "https://openpipelines.bio"
    documentation: "https://openpipelines.bio/fundamentals"
    issue_tracker: "https://github.com/openpipelines-bio/openpipeline/issues"
