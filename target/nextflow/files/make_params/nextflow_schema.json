{
"$schema": "http://json-schema.org/draft-07/schema",
"title": "make_params",
"description": "Looks for files in a directory and turn it in a params file.",
"type": "object",
"definitions": {

    
    "Dataset input": {
        "title": "Dataset input",
        "type": "object",
        "description": "Dataset input using nf-tower \"dataset\" or \"data explorer\". Allows for the input of multiple         parameter sets to initialise a Nextflow channel.",
        "properties": {
            "param_list": {
                "description": "Dataset input can either be a list of maps, a csv file, a json file, a yaml file, or simply a yaml                 blob. The names of the input fields (e.g. csv columns, json keys) need to be an exact match with the workflow input parameters.",
                "default": "",
                "format": "file-path",
                "mimetype": "text/csv",
                "pattern": "^\\S+\\.csv$"
            }
        }
    },

    
    
    "arguments" : {
    "title": "Arguments",
    "type": "object",
    "description": "No description",
    "properties": {
    
        
                "base_dir": {
                "type":
                "string",
                "description": "Type: `file`, required, example: `/path/to/dir`. Base directory to search recursively",
                "help_text": "Type: `file`, required, example: `/path/to/dir`. Base directory to search recursively"
            
            }
    

        ,
                "pattern": {
                "type":
                "string",
                "description": "Type: `string`, required, example: `*.fastq.gz`. An optional regular expression",
                "help_text": "Type: `string`, required, example: `*.fastq.gz`. An optional regular expression. Only file names which match the regular expression will be matched."
            
            }
    

        ,
                "n_dirname_drop": {
                "type":
                "integer",
                "description": "Type: `integer`, default: `0`. For every matched file, the parent directory will be traversed N times",
                "help_text": "Type: `integer`, default: `0`. For every matched file, the parent directory will be traversed N times."
            ,
                "default":0
            }
    

        ,
                "n_basename_id": {
                "type":
                "integer",
                "description": "Type: `integer`, default: `0`. The unique identifiers will consist of at least N dirnames",
                "help_text": "Type: `integer`, default: `0`. The unique identifiers will consist of at least N dirnames."
            ,
                "default":0
            }
    

        ,
                "id_name": {
                "type":
                "string",
                "description": "Type: `string`, default: `id`. The name for storing the identifier field in the yaml",
                "help_text": "Type: `string`, default: `id`. The name for storing the identifier field in the yaml."
            ,
                "default":"id"
            }
    

        ,
                "path_name": {
                "type":
                "string",
                "description": "Type: `string`, default: `path`. The name for storing the path field in the yaml",
                "help_text": "Type: `string`, default: `path`. The name for storing the path field in the yaml."
            ,
                "default":"path"
            }
    

        ,
                "group_name": {
                "type":
                "string",
                "description": "Type: `string`, example: `param_list`. Top level name for the group of entries",
                "help_text": "Type: `string`, example: `param_list`. Top level name for the group of entries."
            
            }
    

        ,
                "output": {
                "type":
                "string",
                "description": "Type: `file`, required, default: `$id.$key.output.yaml`, example: `params.yaml`. Output YAML file",
                "help_text": "Type: `file`, required, default: `$id.$key.output.yaml`, example: `params.yaml`. Output YAML file."
            ,
                "default":"$id.$key.output.yaml"
            }
    

}
},
    
    
    "nextflow input-output arguments" : {
    "title": "Nextflow input-output arguments",
    "type": "object",
    "description": "Input/output parameters for Nextflow itself. Please note that both publishDir and publish_dir are supported but at least one has to be configured.",
    "properties": {
    
        
                "publish_dir": {
                "type":
                "string",
                "description": "Type: `string`, required, example: `output/`. Path to an output directory",
                "help_text": "Type: `string`, required, example: `output/`. Path to an output directory."
            
            }
    

        

}
}
},
"allOf": [

    {
    "$ref": "#/definitions/arguments"
    },

    {
    "$ref": "#/definitions/nextflow input-output arguments"
    }
]
}
