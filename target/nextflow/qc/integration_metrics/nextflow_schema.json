{
"$schema": "http://json-schema.org/draft-07/schema",
"title": "integration_metrics",
"description": "Calculation integration qc metrics and aggregate scores for bio conservation and batch correction.\nThe calculated metrics and aggregate scores are stored in the uns column.\nAll metric calculations are based on the scib library:\n  - publication: https://doi.org/10.1038/s41592-021-01336-8\n  - code: https://github.com/theislab/scib/\n  - documentation: https://scib.readthedocs.io/\n\nBio conservation metrics:\n  - nmi_score: scib.metrics.nmi\n  - ari_score: scib.metrics.ari\n  - asw_label: scib.metrics.silhouette\n  - isolated_label_f1: scib.metrics.isolated_labels \n  - isolated_label_asw: scib.metrics.isolated_labels\n  - clisi_graph: scib.metrics.clisi_graph\nNote that the scib bio conservation metrics for cell cycle conservation, HVG conservation and trajectory conservation are not currently provided, \nas this requires integrated count matrices and pseudo time values to be calculated, which is not currently supported in OpenPipeline.\n\nBatch correction metrics:\n  - asw_batch: scib.metrics.silhouette_batch\n  - pcr_score: scib.metrics.pcr_comparison\n  - graph_connectivity: scib.metrics.graph_connectivity\n  - ilisi_graph: scib.metrics.ilisi_graph\n  - kbet: scib.metrics.kBET\n\nAggregate scores:\n  - avg_bio: mean of calculated bio conservation metrics\n  - avg_batch: mean of calculated batch correction metrics\n  - overall_integration_score: weighted mean of bio and batch scores (60/40 ratio)\n  \n",
"type": "object",
"definitions": {

    
    "Dataset input": {
        "title": "Dataset input",
        "type": "object",
        "description": "Dataset input using nf-tower \"dataset\" or \"data explorer\". Allows for the input of multiple         parameter sets to initialise a Nextflow channel.",
        "properties": {
            "param_list": {
                "description": "Dataset input can either be a list of maps, a csv file, a json file, a yaml file, or simply a yaml                 blob. The names of the input fields (e.g. csv columns, json keys) need to be an exact match with the workflow input parameters.",
                "default": "",
                "format": "file-path",
                "mimetype": "text/csv",
                "pattern": "^\\S+\\.csv$"
            }
        }
    },

    
    
    "inputs" : {
    "title": "Inputs",
    "type": "object",
    "description": "No description",
    "properties": {
    
        
                "input": {
                "type":
                "string",
                "description": "Type: `file`, required, example: `input.h5mu`. Input h5mu file",
                "help_text": "Type: `file`, required, example: `input.h5mu`. Input h5mu file"
            
            }
    

        ,
                "modality": {
                "type":
                "string",
                "description": "Type: `string`, default: `rna`. ",
                "help_text": "Type: `string`, default: `rna`. "
            ,
                "default":"rna"
            }
    

        ,
                "bio_conservation_metrics": {
                "type":
                "string",
                "description": "Type: List of `string`, default: `nmi;ari;asw_label`, multiple_sep: `\";\"`, choices: ``nmi`, `ari`, `asw_label`, `isolated_label_f1`, `isolated_label_asw`, `clisi_graph``. The metrics to be calculated to assess biological conservation",
                "help_text": "Type: List of `string`, default: `nmi;ari;asw_label`, multiple_sep: `\";\"`, choices: ``nmi`, `ari`, `asw_label`, `isolated_label_f1`, `isolated_label_asw`, `clisi_graph``. The metrics to be calculated to assess biological conservation. \nThe provided metrics will be aggregated into a biological conservation score.\n"
            ,
                "default":"nmi;ari;asw_label"
            }
    

        ,
                "batch_correction_metrics": {
                "type":
                "string",
                "description": "Type: List of `string`, default: `asw_batch;pcr;graph_connectivity`, multiple_sep: `\";\"`, choices: ``asw_batch`, `pcr`, `graph_connectivity`, `ilisi_graph`, `kbet``. The metrics to be calculated for the batch correction",
                "help_text": "Type: List of `string`, default: `asw_batch;pcr;graph_connectivity`, multiple_sep: `\";\"`, choices: ``asw_batch`, `pcr`, `graph_connectivity`, `ilisi_graph`, `kbet``. The metrics to be calculated for the batch correction. \nThe provided metrics will be aggregated into a batch correction score.\n"
            ,
                "default":"asw_batch;pcr;graph_connectivity"
            }
    

}
},
    
    
    "outputs" : {
    "title": "Outputs",
    "type": "object",
    "description": "No description",
    "properties": {
    
        
                "output": {
                "type":
                "string",
                "description": "Type: `file`, default: `$id.$key.output.h5mu`, example: `output.h5mu`. Output h5mu file",
                "help_text": "Type: `file`, default: `$id.$key.output.h5mu`, example: `output.h5mu`. Output h5mu file."
            ,
                "default":"$id.$key.output.h5mu"
            }
    

        ,
                "output_compression": {
                "type":
                "string",
                "description": "Type: `string`, example: `gzip`, choices: ``gzip`, `lzf``. The compression format to be used on the output h5mu object",
                "help_text": "Type: `string`, example: `gzip`, choices: ``gzip`, `lzf``. The compression format to be used on the output h5mu object.",
                "enum": ["gzip", "lzf"]
            
            
            }
    

}
},
    
    
    "input annotations" : {
    "title": "Input Annotations",
    "type": "object",
    "description": "No description",
    "properties": {
    
        
                "obsm_embeddings": {
                "type":
                "string",
                "description": "Type: `string`, required, example: `X_scGPT`. The name of the adata",
                "help_text": "Type: `string`, required, example: `X_scGPT`. The name of the adata.obsm array containing scGPT cell embeddings.\n"
            
            }
    

        ,
                "obs_batch_label": {
                "type":
                "string",
                "description": "Type: `string`, required, example: `sample`. The name of the adata obs column containing the batch labels",
                "help_text": "Type: `string`, required, example: `sample`. The name of the adata obs column containing the batch labels.\n"
            
            }
    

        ,
                "obs_cell_label": {
                "type":
                "string",
                "description": "Type: `string`, required, example: `cell_type`. The name of the adata obs column containing the cell type labels",
                "help_text": "Type: `string`, required, example: `cell_type`. The name of the adata obs column containing the cell type labels.\n"
            
            }
    

        ,
                "obs_cluster": {
                "type":
                "string",
                "description": "Type: `string`, required, example: `cluster`. The name of the adata obs column containing the cluster labels",
                "help_text": "Type: `string`, required, example: `cluster`. The name of the adata obs column containing the cluster labels.\n"
            
            }
    

        ,
                "uns_neighbors": {
                "type":
                "string",
                "description": "Type: `string`, required, example: `neighbors`. The name of the adata uns object containing the neighbors information",
                "help_text": "Type: `string`, required, example: `neighbors`. The name of the adata uns object containing the neighbors information."
            
            }
    

        ,
                "obsp_neighbor_connectivities": {
                "type":
                "string",
                "description": "Type: `string`, required, example: `connectivities`. The name of the adata obsp object containing the neighbor connectivities",
                "help_text": "Type: `string`, required, example: `connectivities`. The name of the adata obsp object containing the neighbor connectivities.\n"
            
            }
    

}
},
    
    
    "nextflow input-output arguments" : {
    "title": "Nextflow input-output arguments",
    "type": "object",
    "description": "Input/output parameters for Nextflow itself. Please note that both publishDir and publish_dir are supported but at least one has to be configured.",
    "properties": {
    
        
                "publish_dir": {
                "type":
                "string",
                "description": "Type: `string`, required, example: `output/`. Path to an output directory",
                "help_text": "Type: `string`, required, example: `output/`. Path to an output directory."
            
            }
    

        

}
}
},
"allOf": [

    {
    "$ref": "#/definitions/inputs"
    },

    {
    "$ref": "#/definitions/outputs"
    },

    {
    "$ref": "#/definitions/input annotations"
    },

    {
    "$ref": "#/definitions/nextflow input-output arguments"
    }
]
}
