{
"$schema": "http://json-schema.org/draft-07/schema",
"title": "cellranger_mapping",
"description": "A pipeline for running Cell Ranger mapping.",
"type": "object",
"definitions": {

    
    "Dataset input": {
        "title": "Dataset input",
        "type": "object",
        "description": "Dataset input using nf-tower \"dataset\" or \"data explorer\". Allows for the input of multiple         parameter sets to initialise a Nextflow channel.",
        "properties": {
            "param_list": {
                "description": "Dataset input can either be a list of maps, a csv file, a json file, a yaml file, or simply a yaml                 blob. The names of the input fields (e.g. csv columns, json keys) need to be an exact match with the workflow input parameters.",
                "default": "",
                "format": "file-path",
                "mimetype": "text/csv",
                "pattern": "^\\S+\\.csv$"
            }
        }
    },

    
    
    "inputs" : {
    "title": "Inputs",
    "type": "object",
    "description": "No description",
    "properties": {
    
        
                "id": {
                "type":
                "string",
                "description": "Type: `string`, required, example: `foo`. ID of the sample",
                "help_text": "Type: `string`, required, example: `foo`. ID of the sample."
            
            }
    

        ,
                "input": {
                "type":
                "string",
                "description": "Type: List of `file`, required, example: `sample_S1_L001_R1_001.fastq.gz;sample_S1_L001_R2_001.fastq.gz`, multiple_sep: `\";\"`. The fastq",
                "help_text": "Type: List of `file`, required, example: `sample_S1_L001_R1_001.fastq.gz;sample_S1_L001_R2_001.fastq.gz`, multiple_sep: `\";\"`. The fastq.gz files to align. Can also be a single directory containing fastq.gz files."
            
            }
    

        ,
                "reference": {
                "type":
                "string",
                "description": "Type: `file`, required, example: `reference.tar.gz`. The path to Cell Ranger reference tar",
                "help_text": "Type: `file`, required, example: `reference.tar.gz`. The path to Cell Ranger reference tar.gz file."
            
            }
    

}
},
    
    
    "outputs" : {
    "title": "Outputs",
    "type": "object",
    "description": "No description",
    "properties": {
    
        
                "output_raw": {
                "type":
                "string",
                "description": "Type: `file`, required, default: `$id.$key.output_raw.output_raw`, example: `output_dir`. Location where the output folder from Cell Ranger will be stored",
                "help_text": "Type: `file`, required, default: `$id.$key.output_raw.output_raw`, example: `output_dir`. Location where the output folder from Cell Ranger will be stored."
            ,
                "default":"$id.$key.output_raw.output_raw"
            }
    

        ,
                "output_h5mu": {
                "type":
                "string",
                "description": "Type: `file`, required, default: `$id.$key.output_h5mu.h5mu`, example: `output.h5mu`. The output from Cell Ranger, converted to h5mu",
                "help_text": "Type: `file`, required, default: `$id.$key.output_h5mu.h5mu`, example: `output.h5mu`. The output from Cell Ranger, converted to h5mu."
            ,
                "default":"$id.$key.output_h5mu.h5mu"
            }
    

        ,
                "uns_metrics": {
                "type":
                "string",
                "description": "Type: `string`, default: `metrics_summary`. Name of the ",
                "help_text": "Type: `string`, default: `metrics_summary`. Name of the .uns slot under which to QC metrics (if any)."
            ,
                "default":"metrics_summary"
            }
    

        ,
                "output_type": {
                "type":
                "string",
                "description": "Type: `string`, default: `raw`, choices: ``raw`, `filtered``. Which Cell Ranger output to use for converting to h5mu",
                "help_text": "Type: `string`, default: `raw`, choices: ``raw`, `filtered``. Which Cell Ranger output to use for converting to h5mu.",
                "enum": ["raw", "filtered"]
            
            ,
                "default":"raw"
            }
    

}
},
    
    
    "cell ranger arguments" : {
    "title": "Cell Ranger arguments",
    "type": "object",
    "description": "No description",
    "properties": {
    
        
                "expect_cells": {
                "type":
                "integer",
                "description": "Type: `integer`, example: `3000`. Expected number of recovered cells, used as input to cell calling algorithm",
                "help_text": "Type: `integer`, example: `3000`. Expected number of recovered cells, used as input to cell calling algorithm."
            
            }
    

        ,
                "chemistry": {
                "type":
                "string",
                "description": "Type: `string`, default: `auto`, choices: ``auto`, `threeprime`, `fiveprime`, `SC3Pv1`, `SC3Pv2`, `SC3Pv3`, `SC3Pv3LT`, `SC3Pv3HT`, `SC5P-PE`, `SC5P-R2`, `SC-FB``. Assay configuration",
                "help_text": "Type: `string`, default: `auto`, choices: ``auto`, `threeprime`, `fiveprime`, `SC3Pv1`, `SC3Pv2`, `SC3Pv3`, `SC3Pv3LT`, `SC3Pv3HT`, `SC5P-PE`, `SC5P-R2`, `SC-FB``. Assay configuration.\n- auto: autodetect mode\n- threeprime: Single Cell 3\u0027\n- fiveprime: Single Cell 5\u0027\n- SC3Pv1: Single Cell 3\u0027 v1\n- SC3Pv2: Single Cell 3\u0027 v2\n- SC3Pv3: Single Cell 3\u0027 v3\n- SC3Pv3LT: Single Cell 3\u0027 v3 LT\n- SC3Pv3HT: Single Cell 3\u0027 v3 HT\n- SC5P-PE: Single Cell 5\u0027 paired-end\n- SC5P-R2: Single Cell 5\u0027 R2-only\n- SC-FB: Single Cell Antibody-only 3\u0027 v2 or 5\u0027\nSee https://kb.10xgenomics.com/hc/en-us/articles/115003764132-How-does-Cell-Ranger-auto-detect-chemistry- for more information.\n",
                "enum": ["auto", "threeprime", "fiveprime", "SC3Pv1", "SC3Pv2", "SC3Pv3", "SC3Pv3LT", "SC3Pv3HT", "SC5P-PE", "SC5P-R2", "SC-FB"]
            
            ,
                "default":"auto"
            }
    

        ,
                "secondary_analysis": {
                "type":
                "boolean",
                "description": "Type: `boolean`, default: `false`. Whether or not to run the secondary analysis e",
                "help_text": "Type: `boolean`, default: `false`. Whether or not to run the secondary analysis e.g. clustering."
            ,
                "default":false
            }
    

        ,
                "generate_bam": {
                "type":
                "boolean",
                "description": "Type: `boolean`, default: `true`. Whether to generate a BAM file",
                "help_text": "Type: `boolean`, default: `true`. Whether to generate a BAM file."
            ,
                "default":true
            }
    

        ,
                "include_introns": {
                "type":
                "boolean",
                "description": "Type: `boolean`, default: `true`. Include intronic reads in count (default=true unless --target-panel is specified in which case default=false)",
                "help_text": "Type: `boolean`, default: `true`. Include intronic reads in count (default=true unless --target-panel is specified in which case default=false)"
            ,
                "default":true
            }
    

}
},
    
    
    "nextflow input-output arguments" : {
    "title": "Nextflow input-output arguments",
    "type": "object",
    "description": "Input/output parameters for Nextflow itself. Please note that both publishDir and publish_dir are supported but at least one has to be configured.",
    "properties": {
    
        
                "publish_dir": {
                "type":
                "string",
                "description": "Type: `string`, required, example: `output/`. Path to an output directory",
                "help_text": "Type: `string`, required, example: `output/`. Path to an output directory."
            
            }
    

        

}
}
},
"allOf": [

    {
    "$ref": "#/definitions/inputs"
    },

    {
    "$ref": "#/definitions/outputs"
    },

    {
    "$ref": "#/definitions/cell ranger arguments"
    },

    {
    "$ref": "#/definitions/nextflow input-output arguments"
    }
]
}
