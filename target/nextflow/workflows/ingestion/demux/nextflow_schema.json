{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "title": "demux",
  "description": "Convert `.bcl` files to `.fastq` files using bcl2fastq, bcl-convert or Cell Ranger mkfastq.\n",
  "type": "object",
  "$defs": {
    "Dataset input": {
      "title": "Dataset input",
      "type": "object",
      "description": "Dataset input using nf-tower \"dataset\" or \"data explorer\". Allows for the input of multiple         parameter sets to initialise a Nextflow channel.",
      "properties": {
        "param_list": {
          "description": "Dataset input can either be a list of maps, a csv file, a json file, a yaml file, or simply a yaml                 blob. The names of the input fields (e.g. csv columns, json keys) need to be an exact match with the workflow input parameters.",
          "default": "",
          "type": "object",
          "format": "file-path",
          "mimetype": "text/csv"
        }
      }
    },
    "arguments": {
      "title": "Arguments",
      "type": "object",
      "description": "No description",
      "properties": {
        "id": {
          "type": "string",
          "description": "ID of the sample.",
          "help_text": "Type: `string`, multiple: `False`, required, example: `\"foo\"`. "
        },
        "input": {
          "type": "string",
          "format": "path",
          "exists": true,
          "description": "Input run directory",
          "help_text": "Type: `file`, multiple: `False`, required, direction: `input`, example: `\"bcl_dir\"`. "
        },
        "sample_sheet": {
          "type": "string",
          "format": "path",
          "exists": true,
          "description": "Pointer to the sample sheet",
          "help_text": "Type: `file`, multiple: `False`, required, direction: `input`, example: `\"bcl_dir\"`. "
        },
        "demultiplexer": {
          "type": "string",
          "description": "The multiplexer to use, one of bclconvert or mkfastq",
          "help_text": "Type: `string`, multiple: `False`, default: `\"bcl2fastq\"`, choices: ``bclconvert`, `bcl2fastq`, `mkfastq``. ",
          "enum": [
            "bclconvert",
            "bcl2fastq",
            "mkfastq"
          ],
          "default": "bcl2fastq"
        },
        "ignore_missing": {
          "type": "boolean",
          "description": "Should the demultiplexer ignore missing entities (filter, ...)",
          "help_text": "Type: `boolean`, multiple: `False`. "
        },
        "output_fastq": {
          "type": "string",
          "format": "path",
          "description": "Output directory containig fastq files",
          "help_text": "Type: `file`, multiple: `False`, required, default: `\"$id.$key.output_fastq\"`, direction: `output`, example: `\"fastq_dir\"`. ",
          "default": "$id.$key.output_fastq"
        },
        "output_fastqc": {
          "type": "string",
          "format": "path",
          "description": "Reports directory produced by FastQC",
          "help_text": "Type: `file`, multiple: `False`, default: `\"$id.$key.output_fastqc\"`, direction: `output`, example: `\"reports_dir\"`. ",
          "default": "$id.$key.output_fastqc"
        },
        "output_multiqc": {
          "type": "string",
          "format": "path",
          "description": "Reports directory produced by MultiQC",
          "help_text": "Type: `file`, multiple: `False`, default: `\"$id.$key.output_multiqc\"`, direction: `output`, example: `\"reports_dir\"`. ",
          "default": "$id.$key.output_multiqc"
        }
      }
    },
    "nextflow input-output arguments": {
      "title": "Nextflow input-output arguments",
      "type": "object",
      "description": "Input/output parameters for Nextflow itself. Please note that both publishDir and publish_dir are supported but at least one has to be configured.",
      "properties": {
        "publish_dir": {
          "type": "string",
          "description": "Path to an output directory.",
          "help_text": "Type: `string`, multiple: `False`, required, example: `\"output/\"`. "
        }
      }
    }
  },
  "allOf": [
    {
      "$ref": "#/$defs/arguments"
    },
    {
      "$ref": "#/$defs/nextflow input-output arguments"
    }
  ]
}
