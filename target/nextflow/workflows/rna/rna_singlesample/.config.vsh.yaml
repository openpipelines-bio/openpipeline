name: "rna_singlesample"
namespace: "workflows/rna"
version: "2.1.2"
authors:
- name: "Dries De Maeyer"
  roles:
  - "author"
  info:
    role: "Core Team Member"
    links:
      email: "ddemaeyer@gmail.com"
      github: "ddemaeyer"
      linkedin: "dries-de-maeyer-b46a814"
    organizations:
    - name: "Janssen Pharmaceuticals"
      href: "https://www.janssen.com"
      role: "Principal Scientist"
- name: "Robrecht Cannoodt"
  roles:
  - "author"
  - "maintainer"
  info:
    role: "Core Team Member"
    links:
      email: "robrecht@data-intuitive.com"
      github: "rcannood"
      orcid: "0000-0003-3641-729X"
      linkedin: "robrechtcannoodt"
    organizations:
    - name: "Data Intuitive"
      href: "https://www.data-intuitive.com"
      role: "Data Science Engineer"
    - name: "Open Problems"
      href: "https://openproblems.bio"
      role: "Core Member"
- name: "Dries Schaumont"
  roles:
  - "author"
  info:
    role: "Core Team Member"
    links:
      email: "dries@data-intuitive.com"
      github: "DriesSchaumont"
      orcid: "0000-0002-4389-0440"
      linkedin: "dries-schaumont"
    organizations:
    - name: "Data Intuitive"
      href: "https://www.data-intuitive.com"
      role: "Data Scientist"
argument_groups:
- name: "Input"
  arguments:
  - type: "string"
    name: "--id"
    description: "ID of the sample."
    info: null
    example:
    - "foo"
    required: true
    direction: "input"
    multiple: false
    multiple_sep: ";"
  - type: "file"
    name: "--input"
    description: "Path to the sample."
    info: null
    example:
    - "dataset.h5mu"
    must_exist: true
    create_parent: true
    required: true
    direction: "input"
    multiple: false
    multiple_sep: ";"
  - type: "string"
    name: "--layer"
    description: "Input layer to start from. By default, .X will be used."
    info: null
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ";"
- name: "Output"
  arguments:
  - type: "file"
    name: "--output"
    description: "Destination path to the output."
    info: null
    example:
    - "output.h5mu"
    must_exist: true
    create_parent: true
    required: true
    direction: "output"
    multiple: false
    multiple_sep: ";"
- name: "Filtering options"
  arguments:
  - type: "integer"
    name: "--min_counts"
    description: "Minimum number of counts captured per cell."
    info: null
    example:
    - 200
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ";"
  - type: "integer"
    name: "--max_counts"
    description: "Maximum number of counts captured per cell."
    info: null
    example:
    - 5000000
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ";"
  - type: "integer"
    name: "--min_genes_per_cell"
    description: "Minimum of non-zero values per cell."
    info: null
    example:
    - 200
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ";"
  - type: "integer"
    name: "--max_genes_per_cell"
    description: "Maximum of non-zero values per cell."
    info: null
    example:
    - 1500000
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ";"
  - type: "integer"
    name: "--min_cells_per_gene"
    description: "Minimum of non-zero values per gene."
    info: null
    example:
    - 3
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ";"
  - type: "double"
    name: "--min_fraction_mito"
    description: "Minimum fraction of UMIs that are mitochondrial. Requires --obs_name_mitochondrial_fraction."
    info: null
    example:
    - 0.0
    required: false
    min: 0.0
    max: 1.0
    direction: "input"
    multiple: false
    multiple_sep: ";"
  - type: "double"
    name: "--max_fraction_mito"
    description: "Maximum fraction of UMIs that are mitochondrial. Requires --obs_name_mitochondrial_fraction.\n"
    info: null
    example:
    - 0.2
    required: false
    min: 0.0
    max: 1.0
    direction: "input"
    multiple: false
    multiple_sep: ";"
  - type: "double"
    name: "--min_fraction_ribo"
    description: "Minimum fraction of UMIs that are ribosomal. Requires --obs_name_ribosomal_fraction."
    info: null
    example:
    - 0.0
    required: false
    min: 0.0
    max: 1.0
    direction: "input"
    multiple: false
    multiple_sep: ";"
  - type: "double"
    name: "--max_fraction_ribo"
    description: "Maximum fraction of UMIs that are ribosomal. Requires --obs_name_ribosomal_fraction.\n"
    info: null
    example:
    - 0.2
    required: false
    min: 0.0
    max: 1.0
    direction: "input"
    multiple: false
    multiple_sep: ";"
- name: "Mitochondrial & Ribosomal Gene Detection"
  arguments:
  - type: "string"
    name: "--var_gene_names"
    description: ".var column name to be used to detect mitochondrial/ribosomal genes\
      \ instead of .var_names (default if not set).\nGene names matching with the\
      \ regex value from --mitochondrial_gene_regex or --ribosomal_gene_regex will\
      \ be \nidentified as mitochondrial or ribosomal genes, respectively.  \n"
    info: null
    example:
    - "gene_symbol"
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ";"
  - type: "string"
    name: "--var_name_mitochondrial_genes"
    description: "In which .var slot to store a boolean array corresponding the mitochondrial\
      \ genes.\n"
    info: null
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ";"
  - type: "string"
    name: "--obs_name_mitochondrial_fraction"
    description: "When specified, write the fraction of counts originating from mitochondrial\
      \ genes \n(based on --mitochondrial_gene_regex) to an .obs column with the specified\
      \ name.\nRequires --var_name_mitochondrial_genes.\n"
    info: null
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ";"
  - type: "string"
    name: "--mitochondrial_gene_regex"
    description: "Regex string that identifies mitochondrial genes from --var_gene_names.\n\
      By default will detect human and mouse mitochondrial genes from a gene symbol.\n"
    info: null
    default:
    - "^[mM][tT]-"
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ";"
  - type: "string"
    name: "--var_name_ribosomal_genes"
    description: "In which .var slot to store a boolean array corresponding the ribosomal\
      \ genes.\n"
    info: null
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ";"
  - type: "string"
    name: "--obs_name_ribosomal_fraction"
    description: "When specified, write the fraction of counts originating from ribosomal\
      \ genes \n(based on --ribosomal_gene_regex) to an .obs column with the specified\
      \ name.\nRequires --var_name_ribosomal_genes.\n"
    info: null
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ";"
  - type: "string"
    name: "--ribosomal_gene_regex"
    description: "Regex string that identifies ribosomal genes from --var_gene_names.\n\
      By default will detect human and mouse ribosomal genes from a gene symbol.\n"
    info: null
    default:
    - "^[Mm]?[Rr][Pp][LlSs]"
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ";"
resources:
- type: "nextflow_script"
  path: "main.nf"
  is_executable: true
  entrypoint: "run_wf"
- type: "file"
  path: "utils"
- type: "file"
  path: "nextflow_labels.config"
  dest: "nextflow_labels.config"
description: "Processing unimodal single-sample RNA transcriptomics data."
test_resources:
- type: "nextflow_script"
  path: "test.nf"
  is_executable: true
  entrypoint: "test_wf"
- type: "nextflow_script"
  path: "test.nf"
  is_executable: true
  entrypoint: "test_wf2"
- type: "file"
  path: "pbmc_1k_protein_v3"
info:
  image: "/images/concepts/fig_workflow_multiomics_rna_singlesample.svg"
status: "enabled"
scope:
  image: "public"
  target: "public"
dependencies:
- name: "filter/filter_with_counts"
  repository:
    type: "local"
- name: "filter/filter_with_scrublet"
  repository:
    type: "local"
- name: "filter/do_filter"
  repository:
    type: "local"
- name: "filter/delimit_fraction"
  repository:
    type: "local"
- name: "workflows/qc/qc"
  repository:
    type: "local"
license: "MIT"
links:
  repository: "https://github.com/openpipelines-bio/openpipeline"
  docker_registry: "ghcr.io"
runners:
- type: "nextflow"
  id: "nextflow"
  directives:
    tag: "$id"
  auto:
    simplifyInput: true
    simplifyOutput: false
    transcript: false
    publish: false
  config:
    labels:
      mem1gb: "memory = 1000000000.B"
      mem2gb: "memory = 2000000000.B"
      mem5gb: "memory = 5000000000.B"
      mem10gb: "memory = 10000000000.B"
      mem20gb: "memory = 20000000000.B"
      mem50gb: "memory = 50000000000.B"
      mem100gb: "memory = 100000000000.B"
      mem200gb: "memory = 200000000000.B"
      mem500gb: "memory = 500000000000.B"
      mem1tb: "memory = 1000000000000.B"
      mem2tb: "memory = 2000000000000.B"
      mem5tb: "memory = 5000000000000.B"
      mem10tb: "memory = 10000000000000.B"
      mem20tb: "memory = 20000000000000.B"
      mem50tb: "memory = 50000000000000.B"
      mem100tb: "memory = 100000000000000.B"
      mem200tb: "memory = 200000000000000.B"
      mem500tb: "memory = 500000000000000.B"
      mem1gib: "memory = 1073741824.B"
      mem2gib: "memory = 2147483648.B"
      mem4gib: "memory = 4294967296.B"
      mem8gib: "memory = 8589934592.B"
      mem16gib: "memory = 17179869184.B"
      mem32gib: "memory = 34359738368.B"
      mem64gib: "memory = 68719476736.B"
      mem128gib: "memory = 137438953472.B"
      mem256gib: "memory = 274877906944.B"
      mem512gib: "memory = 549755813888.B"
      mem1tib: "memory = 1099511627776.B"
      mem2tib: "memory = 2199023255552.B"
      mem4tib: "memory = 4398046511104.B"
      mem8tib: "memory = 8796093022208.B"
      mem16tib: "memory = 17592186044416.B"
      mem32tib: "memory = 35184372088832.B"
      mem64tib: "memory = 70368744177664.B"
      mem128tib: "memory = 140737488355328.B"
      mem256tib: "memory = 281474976710656.B"
      mem512tib: "memory = 562949953421312.B"
      cpu1: "cpus = 1"
      cpu2: "cpus = 2"
      cpu5: "cpus = 5"
      cpu10: "cpus = 10"
      cpu20: "cpus = 20"
      cpu50: "cpus = 50"
      cpu100: "cpus = 100"
      cpu200: "cpus = 200"
      cpu500: "cpus = 500"
      cpu1000: "cpus = 1000"
    script:
    - "includeConfig(\"nextflow_labels.config\")"
  debug: false
  container: "docker"
build_info:
  config: "src/workflows/rna/rna_singlesample/config.vsh.yaml"
  runner: "nextflow"
  engine: "native"
  output: "target/nextflow/workflows/rna/rna_singlesample"
  executable: "target/nextflow/workflows/rna/rna_singlesample/main.nf"
  viash_version: "0.9.4"
  git_commit: "a0c9522486585774f76416150f8a3291409b5363"
  git_remote: "https://github.com/openpipelines-bio/openpipeline"
  git_tag: "2.1.1-2-ga0c95224865"
  dependencies:
  - "target/nextflow/filter/filter_with_counts"
  - "target/nextflow/filter/filter_with_scrublet"
  - "target/nextflow/filter/do_filter"
  - "target/nextflow/filter/delimit_fraction"
  - "target/nextflow/workflows/qc/qc"
package_config:
  name: "openpipeline"
  summary: "Best-practice workflows for single-cell multi-omics analyses.\n"
  description: "OpenPipelines are extensible single cell analysis pipelines for reproducible\
    \ and large-scale single cell processing using [Viash](https://viash.io) and [Nextflow](https://www.nextflow.io/).\n\
    \nIn terms of workflows, the following has been made available, but keep in mind\
    \ that\nindividual tools and functionality can be executed as standalone components\
    \ as well.\n\n  * Demultiplexing: conversion of raw sequencing data to FASTQ objects.\n\
    \  * Ingestion: Read mapping and generating a count matrix.\n  * Single sample\
    \ processing: cell filtering and doublet detection.\n  * Multisample processing:\
    \ Count transformation, normalization, QC metric calulations.\n  * Integration:\
    \ Clustering, integration and batch correction using single and multimodal methods.\n\
    \  * Downstream analysis workflows\n"
  info:
    test_resources:
    - type: "s3"
      path: "s3://openpipelines-data"
      dest: "resources_test"
  viash_version: "0.9.4"
  source: "src"
  target: "target"
  config_mods:
  - ".resources += {path: '/src/workflows/utils/labels.config', dest: 'nextflow_labels.config'}\n\
    .runners[.type == 'nextflow'].config.script := 'includeConfig(\"nextflow_labels.config\"\
    )'"
  - ".version := \"2.1.2\""
  keywords:
  - "single-cell"
  - "multimodal"
  license: "MIT"
  organization: "openpipelines-bio"
  links:
    repository: "https://github.com/openpipelines-bio/openpipeline"
    docker_registry: "ghcr.io"
    homepage: "https://openpipelines.bio"
    documentation: "https://openpipelines.bio/fundamentals"
    issue_tracker: "https://github.com/openpipelines-bio/openpipeline/issues"
