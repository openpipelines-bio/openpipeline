functionality:
  name: "rna_singlesample"
  namespace: "workflows/rna"
  version: "1.0.5"
  authors:
  - name: "Dries De Maeyer"
    roles:
    - "author"
    info:
      role: "Core Team Member"
      links:
        email: "ddemaeyer@gmail.com"
        github: "ddemaeyer"
        linkedin: "dries-de-maeyer-b46a814"
      organizations:
      - name: "Janssen Pharmaceuticals"
        href: "https://www.janssen.com"
        role: "Principal Scientist"
  - name: "Robrecht Cannoodt"
    roles:
    - "author"
    - "maintainer"
    info:
      role: "Core Team Member"
      links:
        email: "robrecht@data-intuitive.com"
        github: "rcannood"
        orcid: "0000-0003-3641-729X"
        linkedin: "robrechtcannoodt"
      organizations:
      - name: "Data Intuitive"
        href: "https://www.data-intuitive.com"
        role: "Data Science Engineer"
      - name: "Open Problems"
        href: "https://openproblems.bio"
        role: "Core Member"
  - name: "Dries Schaumont"
    roles:
    - "author"
    info:
      role: "Core Team Member"
      links:
        email: "dries@data-intuitive.com"
        github: "DriesSchaumont"
        orcid: "0000-0002-4389-0440"
        linkedin: "dries-schaumont"
      organizations:
      - name: "Data Intuitive"
        href: "https://www.data-intuitive.com"
        role: "Data Scientist"
  argument_groups:
  - name: "Input"
    arguments:
    - type: "string"
      name: "--id"
      description: "ID of the sample."
      info: null
      example:
      - "foo"
      required: true
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "file"
      name: "--input"
      description: "Path to the sample."
      info: null
      example:
      - "dataset.h5mu"
      must_exist: true
      create_parent: true
      required: true
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "string"
      name: "--layer"
      description: "Input layer to start from. By default, .X will be used."
      info: null
      required: false
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
  - name: "Output"
    arguments:
    - type: "file"
      name: "--output"
      description: "Destination path to the output."
      info: null
      example:
      - "output.h5mu"
      must_exist: true
      create_parent: true
      required: true
      direction: "output"
      multiple: false
      multiple_sep: ":"
      dest: "par"
  - name: "Filtering options"
    arguments:
    - type: "integer"
      name: "--min_counts"
      description: "Minimum number of counts captured per cell."
      info: null
      example:
      - 200
      required: false
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "integer"
      name: "--max_counts"
      description: "Maximum number of counts captured per cell."
      info: null
      example:
      - 5000000
      required: false
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "integer"
      name: "--min_genes_per_cell"
      description: "Minimum of non-zero values per cell."
      info: null
      example:
      - 200
      required: false
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "integer"
      name: "--max_genes_per_cell"
      description: "Maximum of non-zero values per cell."
      info: null
      example:
      - 1500000
      required: false
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "integer"
      name: "--min_cells_per_gene"
      description: "Minimum of non-zero values per gene."
      info: null
      example:
      - 3
      required: false
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "double"
      name: "--min_fraction_mito"
      description: "Minimum fraction of UMIs that are mitochondrial. Requires --obs_name_mitochondrial_fraction."
      info: null
      example:
      - 0.0
      required: false
      min: 0.0
      max: 1.0
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "double"
      name: "--max_fraction_mito"
      description: "Maximum fraction of UMIs that are mitochondrial. Requires --obs_name_mitochondrial_fraction.\n"
      info: null
      example:
      - 0.2
      required: false
      min: 0.0
      max: 1.0
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
  - name: "Mitochondrial gene detection"
    arguments:
    - type: "string"
      name: "--var_name_mitochondrial_genes"
      description: "In which .var slot to store a boolean array corresponding the\
        \ mitochondrial genes.\n"
      info: null
      required: false
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "string"
      name: "--obs_name_mitochondrial_fraction"
      description: "When specified, write the fraction of counts originating from\
        \ mitochondrial genes \n(based on --mitochondrial_gene_regex) to an .obs column\
        \ with the specified name.\nRequires --var_name_mitochondrial_genes.\n"
      info: null
      required: false
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "string"
      name: "--var_gene_names"
      description: ".var column name to be used to detect mitochondrial genes instead\
        \ of .var_names (default if not set).\nGene names matching with the regex\
        \ value from --mitochondrial_gene_regex will be identified\nas a mitochondrial\
        \ gene.\n"
      info: null
      example:
      - "gene_symbol"
      required: false
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "string"
      name: "--mitochondrial_gene_regex"
      description: "Regex string that identifies mitochondrial genes from --var_gene_names.\n\
        By default will detect human and mouse mitochondrial genes from a gene symbol.\n"
      info: null
      default:
      - "^[mM][tT]-"
      required: false
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
  resources:
  - type: "nextflow_script"
    path: "main.nf"
    is_executable: true
    entrypoint: "run_wf"
  - type: "file"
    path: "src/workflows/utils/"
  - type: "file"
    path: "./src/workflows/utils/labels.config"
    dest: "nextflow_labels.config"
  description: "Processing unimodal single-sample RNA transcriptomics data."
  test_resources:
  - type: "nextflow_script"
    path: "test.nf"
    is_executable: true
    entrypoint: "test_wf"
  - type: "nextflow_script"
    path: "test.nf"
    is_executable: true
    entrypoint: "test_wf2"
  - type: "file"
    path: "resources_test/pbmc_1k_protein_v3"
  - type: "file"
    path: "src/base/openpipelinetestutils"
    dest: "openpipelinetestutils"
  info:
    image: "/images/concepts/fig_workflow_multiomics_rna_singlesample.svg"
  status: "enabled"
  requirements:
    commands:
    - "ps"
  dependencies:
  - name: "filter/filter_with_counts"
    repository:
      type: "local"
      localPath: ""
    foundConfigPath: "/home/runner/work/openpipeline/openpipeline/src/filter/filter_with_counts/config.vsh.yaml"
    configInfo:
      functionalityName: "filter_with_counts"
      git_tag: "1.0.4-3-gbfe311bb554"
      git_remote: "https://github.com/openpipelines-bio/openpipeline"
      viash_version: "0.8.8"
      config: "/home/runner/work/openpipeline/openpipeline/src/filter/filter_with_counts/config.vsh.yaml"
      functionalityNamespace: "filter"
      output: ""
      platform: ""
      git_commit: "bfe311bb5542f97dfe80b20a3e47a02800708f43"
      executable: "/nextflow/filter/filter_with_counts/main.nf"
    writtenPath: "/home/runner/work/openpipeline/openpipeline/target/nextflow/filter/filter_with_counts"
  - name: "filter/filter_with_scrublet"
    repository:
      type: "local"
      localPath: ""
    foundConfigPath: "/home/runner/work/openpipeline/openpipeline/src/filter/filter_with_scrublet/config.vsh.yaml"
    configInfo:
      functionalityName: "filter_with_scrublet"
      git_tag: "1.0.4-3-gbfe311bb554"
      git_remote: "https://github.com/openpipelines-bio/openpipeline"
      viash_version: "0.8.8"
      config: "/home/runner/work/openpipeline/openpipeline/src/filter/filter_with_scrublet/config.vsh.yaml"
      functionalityNamespace: "filter"
      output: ""
      platform: ""
      git_commit: "bfe311bb5542f97dfe80b20a3e47a02800708f43"
      executable: "/nextflow/filter/filter_with_scrublet/main.nf"
    writtenPath: "/home/runner/work/openpipeline/openpipeline/target/nextflow/filter/filter_with_scrublet"
  - name: "filter/do_filter"
    repository:
      type: "local"
      localPath: ""
    foundConfigPath: "/home/runner/work/openpipeline/openpipeline/src/filter/do_filter/config.vsh.yaml"
    configInfo:
      functionalityName: "do_filter"
      git_tag: "1.0.4-3-gbfe311bb554"
      git_remote: "https://github.com/openpipelines-bio/openpipeline"
      viash_version: "0.8.8"
      config: "/home/runner/work/openpipeline/openpipeline/src/filter/do_filter/config.vsh.yaml"
      functionalityNamespace: "filter"
      output: ""
      platform: ""
      git_commit: "bfe311bb5542f97dfe80b20a3e47a02800708f43"
      executable: "/nextflow/filter/do_filter/main.nf"
    writtenPath: "/home/runner/work/openpipeline/openpipeline/target/nextflow/filter/do_filter"
  - name: "filter/delimit_fraction"
    repository:
      type: "local"
      localPath: ""
    foundConfigPath: "/home/runner/work/openpipeline/openpipeline/src/filter/delimit_fraction/config.vsh.yaml"
    configInfo:
      functionalityName: "delimit_fraction"
      git_tag: "1.0.4-3-gbfe311bb554"
      git_remote: "https://github.com/openpipelines-bio/openpipeline"
      viash_version: "0.8.8"
      config: "/home/runner/work/openpipeline/openpipeline/src/filter/delimit_fraction/config.vsh.yaml"
      functionalityNamespace: "filter"
      output: ""
      platform: ""
      git_commit: "bfe311bb5542f97dfe80b20a3e47a02800708f43"
      executable: "/nextflow/filter/delimit_fraction/main.nf"
    writtenPath: "/home/runner/work/openpipeline/openpipeline/target/nextflow/filter/delimit_fraction"
  - name: "workflows/qc/qc"
    repository:
      type: "local"
      localPath: ""
    foundConfigPath: "/home/runner/work/openpipeline/openpipeline/src/workflows/qc/qc/config.vsh.yaml"
    configInfo:
      functionalityName: "qc"
      git_tag: "1.0.4-3-gbfe311bb554"
      git_remote: "https://github.com/openpipelines-bio/openpipeline"
      viash_version: "0.8.8"
      config: "/home/runner/work/openpipeline/openpipeline/src/workflows/qc/qc/config.vsh.yaml"
      functionalityNamespace: "workflows/qc"
      output: ""
      platform: ""
      git_commit: "bfe311bb5542f97dfe80b20a3e47a02800708f43"
      executable: "/nextflow/workflows/qc/qc/main.nf"
    writtenPath: "/home/runner/work/openpipeline/openpipeline/target/nextflow/workflows/qc/qc"
  set_wd_to_resources_dir: false
platforms:
- type: "nextflow"
  id: "nextflow"
  directives:
    tag: "$id"
  auto:
    simplifyInput: true
    simplifyOutput: false
    transcript: false
    publish: false
  config:
    labels:
      mem1gb: "memory = 1.GB"
      mem2gb: "memory = 2.GB"
      mem4gb: "memory = 4.GB"
      mem8gb: "memory = 8.GB"
      mem16gb: "memory = 16.GB"
      mem32gb: "memory = 32.GB"
      mem64gb: "memory = 64.GB"
      mem128gb: "memory = 128.GB"
      mem256gb: "memory = 256.GB"
      mem512gb: "memory = 512.GB"
      mem1tb: "memory = 1.TB"
      mem2tb: "memory = 2.TB"
      mem4tb: "memory = 4.TB"
      mem8tb: "memory = 8.TB"
      mem16tb: "memory = 16.TB"
      mem32tb: "memory = 32.TB"
      mem64tb: "memory = 64.TB"
      mem128tb: "memory = 128.TB"
      mem256tb: "memory = 256.TB"
      mem512tb: "memory = 512.TB"
      cpu1: "cpus = 1"
      cpu2: "cpus = 2"
      cpu5: "cpus = 5"
      cpu10: "cpus = 10"
      cpu20: "cpus = 20"
      cpu50: "cpus = 50"
      cpu100: "cpus = 100"
      cpu200: "cpus = 200"
      cpu500: "cpus = 500"
      cpu1000: "cpus = 1000"
    script:
    - "includeConfig(\"nextflow_labels.config\")"
  debug: false
  container: "docker"
info:
  config: "/home/runner/work/openpipeline/openpipeline/src/workflows/rna/rna_singlesample/config.vsh.yaml"
  platform: "nextflow"
  output: "/home/runner/work/openpipeline/openpipeline/target/nextflow/workflows/rna/rna_singlesample"
  executable: "/home/runner/work/openpipeline/openpipeline/target/nextflow/workflows/rna/rna_singlesample/main.nf"
  viash_version: "0.8.8"
  git_commit: "bfe311bb5542f97dfe80b20a3e47a02800708f43"
  git_remote: "https://github.com/openpipelines-bio/openpipeline"
  git_tag: "1.0.4-3-gbfe311bb554"
