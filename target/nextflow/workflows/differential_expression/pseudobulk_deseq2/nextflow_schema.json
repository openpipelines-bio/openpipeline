{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "title": "pseudobulk_deseq2",
  "description": "Performs pseudobulk generation and subsequent differential expression analysis using DESeq2.\n",
  "type": "object",
  "$defs": {
    "Dataset input": {
      "title": "Dataset input",
      "type": "object",
      "description": "Dataset input using nf-tower \"dataset\" or \"data explorer\". Allows for the input of multiple         parameter sets to initialise a Nextflow channel.",
      "properties": {
        "param_list": {
          "description": "Dataset input can either be a list of maps, a csv file, a json file, a yaml file, or simply a yaml                 blob. The names of the input fields (e.g. csv columns, json keys) need to be an exact match with the workflow input parameters.",
          "type": "string",
          "default": "",
          "format": "file-path",
          "mimetype": "text/csv"
        }
      }
    },
    "inputs": {
      "title": "Inputs",
      "type": "object",
      "description": "No description",
      "properties": {
        "input": {
          "type": "string",
          "format": "path",
          "exists": true,
          "description": "Input h5mu file.",
          "help_text": "Type: `file`, multiple: `False`, required, direction: `input`, example: `\"/path/to/input_file.h5mu\"`. "
        },
        "modality": {
          "type": "string",
          "description": "Which modality from the input MuData file to process.",
          "help_text": "Type: `string`, multiple: `False`, default: `\"rna\"`. ",
          "default": "rna"
        },
        "input_layer": {
          "type": "string",
          "description": "Input layer to use",
          "help_text": "Type: `string`, multiple: `False`. "
        },
        "obs_cell_group": {
          "type": "string",
          "description": ".obs field containing the variable to group on",
          "help_text": "Type: `string`, multiple: `False`, required, example: `\"cell_type\"`. "
        },
        "obs_groups": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": ".obs fields containing the experimental condition(s) to create pseudobulk samples for.",
          "help_text": "Type: `string`, multiple: `True`, example: `[\"treatment\";\"disease\"]`. "
        },
        "var_gene_names": {
          "type": "string",
          "description": "Name of the .var field that contains gene symbols",
          "help_text": "Type: `string`, multiple: `False`, example: `\"gene_symbol\"`. "
        }
      }
    },
    "outputs": {
      "title": "Outputs",
      "type": "object",
      "description": "No description",
      "properties": {
        "output": {
          "type": "string",
          "format": "path",
          "description": "Output directory for DESeq2 results, containing one CSV file per cell group (as defined by `--obs_cell_group`) \n",
          "help_text": "Type: `file`, multiple: `False`, required, default: `\"$id.$key.output\"`, direction: `output`. ",
          "default": "$id.$key.output"
        },
        "output_prefix": {
          "type": "string",
          "description": "Prefix for output CSV files: files will be named \"{prefix}_{cell_group}.csv\"\n",
          "help_text": "Type: `string`, multiple: `False`, default: `\"deseq2_analysis\"`. ",
          "default": "deseq2_analysis"
        }
      }
    },
    "pseudobulk options": {
      "title": "Pseudobulk Options",
      "type": "object",
      "description": "No description",
      "properties": {
        "aggregation_method": {
          "type": "string",
          "description": "Method to aggregate the raw counts for pseudoreplicates",
          "help_text": "Type: `string`, multiple: `False`, default: `\"sum\"`, choices: ``sum`, `mean``. ",
          "enum": [
            "sum",
            "mean"
          ],
          "default": "sum"
        },
        "min_obs_per_sample": {
          "type": "integer",
          "description": "Minimum number of cells per pseudobulk sample.",
          "help_text": "Type: `integer`, multiple: `False`, default: `30`. ",
          "default": 30
        },
        "random_state": {
          "type": "integer",
          "description": "The random seed for sampling.",
          "help_text": "Type: `integer`, multiple: `False`, default: `0`. ",
          "default": 0
        }
      }
    },
    "dgea options": {
      "title": "DGEA options",
      "type": "object",
      "description": "No description",
      "properties": {
        "design_formula": {
          "type": "string",
          "description": "Design formula for DESeq2 analysis in R-style format.\nSpecifies the statistical model to account for various factors.\n",
          "help_text": "Type: `string`, multiple: `False`, required, example: `\"~ cell_type + disease + treatment\"`. "
        },
        "contrast_column": {
          "type": "string",
          "description": "Column in the metadata to use for the contrast.\nThis column should contain the conditions to compare.\n",
          "help_text": "Type: `string`, multiple: `False`, required, example: `\"treatment\"`. "
        },
        "contrast_values": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Values to compare in the contrast column.\nFirst value is baseline, following values are different treatments.\n",
          "help_text": "Type: `string`, multiple: `True`, required, example: `[\"ctrl\";\"stim\"]`. "
        },
        "filter_genes_min_samples": {
          "type": "integer",
          "description": "Minimum number of samples a gene must be expressed in to be included in the analysis.\nIf None, no filtering is applied.\n",
          "help_text": "Type: `integer`, multiple: `False`. "
        },
        "p_adj_threshold": {
          "type": "number",
          "description": "Adjusted p-value threshold for significance.\nGenes with adjusted p-values below this threshold will be considered significant.\n",
          "help_text": "Type: `double`, multiple: `False`, default: `0.05`. ",
          "default": 0.05
        },
        "log2fc_threshold": {
          "type": "number",
          "description": "Log2 fold change threshold for significance.\nGenes with absolute log2 fold change above this threshold will be considered significant.\n",
          "help_text": "Type: `double`, multiple: `False`, default: `0.0`. ",
          "default": 0.0
        },
        "filter_gene_patterns": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of regex patterns to filter out genes.\nGenes matching any of these patterns will be excluded from the analysis.\n",
          "help_text": "Type: `string`, multiple: `True`, example: `[\"MIR\\d+\";\"AL\\d+\";\"LINC\\d+\";\"AC\\d+\";\"AP\\d+\"]`. "
        }
      }
    },
    "nextflow input-output arguments": {
      "title": "Nextflow input-output arguments",
      "type": "object",
      "description": "Input/output parameters for Nextflow itself. Please note that both publishDir and publish_dir are supported but at least one has to be configured.",
      "properties": {
        "publish_dir": {
          "type": "string",
          "description": "Path to an output directory.",
          "help_text": "Type: `string`, multiple: `False`, required, example: `\"output/\"`. "
        }
      }
    }
  },
  "allOf": [
    {
      "$ref": "#/$defs/inputs"
    },
    {
      "$ref": "#/$defs/outputs"
    },
    {
      "$ref": "#/$defs/pseudobulk options"
    },
    {
      "$ref": "#/$defs/dgea options"
    },
    {
      "$ref": "#/$defs/nextflow input-output arguments"
    }
  ]
}
