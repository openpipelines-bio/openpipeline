{
"$schema": "http://json-schema.org/draft-07/schema",
"title": "gdo_singlesample",
"description": "Processing unimodal single-sample guide-derived oligonucleotide (GDO) data.",
"type": "object",
"definitions": {

    
    "Dataset input": {
        "title": "Dataset input",
        "type": "object",
        "description": "Dataset input using nf-tower \"dataset\" or \"data explorer\". Allows for the input of multiple         parameter sets to initialise a Nextflow channel.",
        "properties": {
            "param_list": {
                "description": "Dataset input can either be a list of maps, a csv file, a json file, a yaml file, or simply a yaml                 blob. The names of the input fields (e.g. csv columns, json keys) need to be an exact match with the workflow input parameters.",
                "default": "",
                "format": "file-path",
                "mimetype": "text/csv",
                "pattern": "^\\S+\\.csv$"
            }
        }
    },

    
    
    "input" : {
    "title": "Input",
    "type": "object",
    "description": "No description",
    "properties": {
    
        
                "id": {
                "type":
                "string",
                "description": "Type: `string`, required, example: `foo`. ID of the sample",
                "help_text": "Type: `string`, required, example: `foo`. ID of the sample."
            
            }
    

        ,
                "input": {
                "type":
                "string",
                "description": "Type: `file`, required, example: `dataset.h5mu`. Path to the sample",
                "help_text": "Type: `file`, required, example: `dataset.h5mu`. Path to the sample."
            
            }
    

        ,
                "layer": {
                "type":
                "string",
                "description": "Type: `string`. Input layer to start from",
                "help_text": "Type: `string`. Input layer to start from. By default, .X will be used."
            
            }
    

}
},
    
    
    "output" : {
    "title": "Output",
    "type": "object",
    "description": "No description",
    "properties": {
    
        
                "output": {
                "type":
                "string",
                "description": "Type: `file`, required, default: `$id.$key.output.h5mu`, example: `output.h5mu`. Destination path to the output",
                "help_text": "Type: `file`, required, default: `$id.$key.output.h5mu`, example: `output.h5mu`. Destination path to the output."
            ,
                "default":"$id.$key.output.h5mu"
            }
    

}
},
    
    
    "filtering options" : {
    "title": "Filtering options",
    "type": "object",
    "description": "No description",
    "properties": {
    
        
                "min_counts": {
                "type":
                "integer",
                "description": "Type: `integer`, example: `200`. Minimum number of counts captured per cell",
                "help_text": "Type: `integer`, example: `200`. Minimum number of counts captured per cell."
            
            }
    

        ,
                "max_counts": {
                "type":
                "integer",
                "description": "Type: `integer`, example: `5000000`. Maximum number of counts captured per cell",
                "help_text": "Type: `integer`, example: `5000000`. Maximum number of counts captured per cell."
            
            }
    

        ,
                "min_guides_per_cell": {
                "type":
                "integer",
                "description": "Type: `integer`, example: `200`. Minimum of non-zero values per cell",
                "help_text": "Type: `integer`, example: `200`. Minimum of non-zero values per cell."
            
            }
    

        ,
                "max_guides_per_cell": {
                "type":
                "integer",
                "description": "Type: `integer`, example: `1500000`. Maximum of non-zero values per cell",
                "help_text": "Type: `integer`, example: `1500000`. Maximum of non-zero values per cell."
            
            }
    

        ,
                "min_cells_per_guide": {
                "type":
                "integer",
                "description": "Type: `integer`, example: `3`. Minimum of non-zero values per gene",
                "help_text": "Type: `integer`, example: `3`. Minimum of non-zero values per gene."
            
            }
    

}
},
    
    
    "nextflow input-output arguments" : {
    "title": "Nextflow input-output arguments",
    "type": "object",
    "description": "Input/output parameters for Nextflow itself. Please note that both publishDir and publish_dir are supported but at least one has to be configured.",
    "properties": {
    
        
                "publish_dir": {
                "type":
                "string",
                "description": "Type: `string`, required, example: `output/`. Path to an output directory",
                "help_text": "Type: `string`, required, example: `output/`. Path to an output directory."
            
            }
    

        

}
}
},
"allOf": [

    {
    "$ref": "#/definitions/input"
    },

    {
    "$ref": "#/definitions/output"
    },

    {
    "$ref": "#/definitions/filtering options"
    },

    {
    "$ref": "#/definitions/nextflow input-output arguments"
    }
]
}
