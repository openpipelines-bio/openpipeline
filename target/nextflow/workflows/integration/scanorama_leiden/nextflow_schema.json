{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "title": "scanorama_leiden",
  "description": "Run scanorama integration followed by neighbour calculations, leiden clustering and run umap on the result.",
  "type": "object",
  "$defs": {
    "Dataset input": {
      "title": "Dataset input",
      "type": "object",
      "description": "Dataset input using nf-tower \"dataset\" or \"data explorer\". Allows for the input of multiple         parameter sets to initialise a Nextflow channel.",
      "properties": {
        "param_list": {
          "description": "Dataset input can either be a list of maps, a csv file, a json file, a yaml file, or simply a yaml                 blob. The names of the input fields (e.g. csv columns, json keys) need to be an exact match with the workflow input parameters.",
          "default": "",
          "format": "file-path",
          "mimetype": "text/csv",
          "pattern": "^\\S+\\.csv$"
        }
      }
    },
    "inputs": {
      "title": "Inputs",
      "type": "object",
      "description": "No description",
      "properties": {
        "id": {
          "type": "string",
          "description": "ID of the sample",
          "help_text": "Type: `string`, multiple: `False`, required, example: `foo`. "
        },
        "input": {
          "type": "string",
          "format": "path",
          "exists": true,
          "description": "Path to the sample",
          "help_text": "Type: `file`, multiple: `False`, required, direction: `input`, example: `dataset.h5mu`. "
        },
        "layer": {
          "type": "string",
          "description": "use specified layer for expression values instead of the ",
          "help_text": "Type: `string`, multiple: `False`, default: `log_normalized`. ",
          "default": "log_normalized"
        },
        "modality": {
          "type": "string",
          "description": "Which modality to process",
          "help_text": "Type: `string`, multiple: `False`, default: `rna`. ",
          "default": "rna"
        }
      }
    },
    "outputs": {
      "title": "Outputs",
      "type": "object",
      "description": "No description",
      "properties": {
        "output": {
          "type": "string",
          "format": "path",
          "description": "Destination path to the output",
          "help_text": "Type: `file`, multiple: `False`, required, default: `$id.$key.output.h5mu`, direction: `output`, example: `output.h5mu`. ",
          "default": "$id.$key.output.h5mu"
        }
      }
    },
    "neighbour calculation": {
      "title": "Neighbour calculation",
      "type": "object",
      "description": "No description",
      "properties": {
        "uns_neighbors": {
          "type": "string",
          "description": "In which ",
          "help_text": "Type: `string`, multiple: `False`, default: `scanorama_integration_neighbors`. ",
          "default": "scanorama_integration_neighbors"
        },
        "obsp_neighbor_distances": {
          "type": "string",
          "description": "In which ",
          "help_text": "Type: `string`, multiple: `False`, default: `scanorama_integration_distances`. ",
          "default": "scanorama_integration_distances"
        },
        "obsp_neighbor_connectivities": {
          "type": "string",
          "description": "In which ",
          "help_text": "Type: `string`, multiple: `False`, default: `scanorama_integration_connectivities`. ",
          "default": "scanorama_integration_connectivities"
        }
      }
    },
    "scanorama integration options": {
      "title": "Scanorama integration options",
      "type": "object",
      "description": "No description",
      "properties": {
        "obs_batch": {
          "type": "string",
          "description": "Column name discriminating between your batches",
          "help_text": "Type: `string`, multiple: `False`, default: `sample_id`. ",
          "default": "sample_id"
        },
        "obsm_input": {
          "type": "string",
          "description": "",
          "help_text": "Type: `string`, multiple: `False`, default: `X_pca`. ",
          "default": "X_pca"
        },
        "obsm_output": {
          "type": "string",
          "description": "The name of the field in adata",
          "help_text": "Type: `string`, multiple: `False`, default: `X_scanorama`. ",
          "default": "X_scanorama"
        },
        "knn": {
          "type": "integer",
          "description": "Number of nearest neighbors to use for matching",
          "help_text": "Type: `integer`, multiple: `False`, default: `20`. ",
          "default": 20
        },
        "batch_size": {
          "type": "integer",
          "description": "The batch size used in the alignment vector computation",
          "help_text": "Type: `integer`, multiple: `False`, default: `5000`. ",
          "default": 5000
        },
        "sigma": {
          "type": "number",
          "description": "Correction smoothing parameter on Gaussian kernel",
          "help_text": "Type: `double`, multiple: `False`, default: `15.0`. ",
          "default": 15.0
        },
        "approx": {
          "type": "boolean",
          "description": "Use approximate nearest neighbors with Python annoy; greatly speeds up matching runtime",
          "help_text": "Type: `boolean`, multiple: `False`, default: `true`. ",
          "default": true
        },
        "alpha": {
          "type": "number",
          "description": "Alignment score minimum cutoff",
          "help_text": "Type: `double`, multiple: `False`, default: `0.1`. ",
          "default": 0.1
        }
      }
    },
    "clustering options": {
      "title": "Clustering options",
      "type": "object",
      "description": "No description",
      "properties": {
        "obs_cluster": {
          "type": "string",
          "description": "Prefix for the ",
          "help_text": "Type: `string`, multiple: `False`, default: `scanorama_integration_leiden`. ",
          "default": "scanorama_integration_leiden"
        },
        "leiden_resolution": {
          "items": {
            "type": "number"
          },
          "type": "array",
          "description": "Control the coarseness of the clustering",
          "help_text": "Type: `double`, multiple: `True`, default: `[1.0]`. ",
          "default": "[1.0]"
        }
      }
    },
    "umap options": {
      "title": "Umap options",
      "type": "object",
      "description": "No description",
      "properties": {
        "obsm_umap": {
          "type": "string",
          "description": "In which ",
          "help_text": "Type: `string`, multiple: `False`, default: `X_leiden_scanorama_umap`. ",
          "default": "X_leiden_scanorama_umap"
        }
      }
    },
    "nextflow input-output arguments": {
      "title": "Nextflow input-output arguments",
      "type": "object",
      "description": "Input/output parameters for Nextflow itself. Please note that both publishDir and publish_dir are supported but at least one has to be configured.",
      "properties": {
        "publish_dir": {
          "type": "string",
          "description": "Path to an output directory",
          "help_text": "Type: `string`, multiple: `False`, required, example: `output/`. "
        }
      }
    }
  },
  "allOf": [
    {
      "$ref": "#/$defs/inputs"
    },
    {
      "$ref": "#/$defs/outputs"
    },
    {
      "$ref": "#/$defs/neighbour calculation"
    },
    {
      "$ref": "#/$defs/scanorama integration options"
    },
    {
      "$ref": "#/$defs/clustering options"
    },
    {
      "$ref": "#/$defs/umap options"
    },
    {
      "$ref": "#/$defs/nextflow input-output arguments"
    }
  ]
}
