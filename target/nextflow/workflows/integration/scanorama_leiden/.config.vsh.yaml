name: "scanorama_leiden"
namespace: "workflows/integration"
version: "main_build"
authors:
- name: "Mauro Saporita"
  roles:
  - "author"
  info:
    role: "Contributor"
    links:
      email: "maurosaporita@gmail.com"
      github: "mauro-saporita"
      linkedin: "mauro-saporita-930b06a5"
    organizations:
    - name: "Ardigen"
      href: "https://ardigen.com"
      role: "Lead Nextflow Developer"
- name: "Povilas Gibas"
  roles:
  - "author"
  info:
    role: "Contributor"
    links:
      email: "povilasgibas@gmail.com"
      github: "PoGibas"
      linkedin: "povilas-gibas"
    organizations:
    - name: "Ardigen"
      href: "https://ardigen.com"
      role: "Bioinformatician"
argument_groups:
- name: "Inputs"
  arguments:
  - type: "string"
    name: "--id"
    description: "ID of the sample."
    info: null
    example:
    - "foo"
    required: true
    direction: "input"
    multiple: false
    multiple_sep: ";"
  - type: "file"
    name: "--input"
    description: "Path to the sample."
    info: null
    example:
    - "dataset.h5mu"
    must_exist: true
    create_parent: true
    required: true
    direction: "input"
    multiple: false
    multiple_sep: ";"
  - type: "string"
    name: "--layer"
    description: "use specified layer for expression values instead of the .X object\
      \ from the modality."
    info: null
    default:
    - "log_normalized"
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ";"
  - type: "string"
    name: "--modality"
    description: "Which modality to process."
    info: null
    default:
    - "rna"
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ";"
- name: "Outputs"
  arguments:
  - type: "file"
    name: "--output"
    description: "Destination path to the output."
    info: null
    example:
    - "output.h5mu"
    must_exist: true
    create_parent: true
    required: true
    direction: "output"
    multiple: false
    multiple_sep: ";"
- name: "Neighbour calculation"
  arguments:
  - type: "string"
    name: "--uns_neighbors"
    description: "In which .uns slot to store various neighbor output objects."
    info: null
    default:
    - "scanorama_integration_neighbors"
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ";"
  - type: "string"
    name: "--obsp_neighbor_distances"
    description: "In which .obsp slot to store the distance matrix between the resulting\
      \ neighbors."
    info: null
    default:
    - "scanorama_integration_distances"
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ";"
  - type: "string"
    name: "--obsp_neighbor_connectivities"
    description: "In which .obsp slot to store the connectivities matrix between the\
      \ resulting neighbors."
    info: null
    default:
    - "scanorama_integration_connectivities"
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ";"
- name: "Scanorama integration options"
  arguments:
  - type: "string"
    name: "--obs_batch"
    description: "Column name discriminating between your batches."
    info: null
    default:
    - "sample_id"
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ";"
  - type: "string"
    name: "--obsm_input"
    description: ".obsm slot that points to embedding to run scanorama on."
    info: null
    default:
    - "X_pca"
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ";"
  - type: "string"
    name: "--obsm_output"
    description: "The name of the field in adata.obsm where the integrated embeddings\
      \ will be stored after running this function. Defaults to X_scanorama."
    info: null
    default:
    - "X_scanorama"
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ";"
  - type: "integer"
    name: "--knn"
    description: "Number of nearest neighbors to use for matching."
    info: null
    default:
    - 20
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ";"
  - type: "integer"
    name: "--batch_size"
    description: "The batch size used in the alignment vector computation. Useful\
      \ when integrating very large (>100k samples) datasets. Set to large value that\
      \ runs within available memory."
    info: null
    default:
    - 5000
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ";"
  - type: "double"
    name: "--sigma"
    description: "Correction smoothing parameter on Gaussian kernel."
    info: null
    default:
    - 15.0
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ";"
  - type: "boolean"
    name: "--approx"
    description: "Use approximate nearest neighbors with Python annoy; greatly speeds\
      \ up matching runtime."
    info: null
    default:
    - true
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ";"
  - type: "double"
    name: "--alpha"
    description: "Alignment score minimum cutoff"
    info: null
    default:
    - 0.1
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ";"
- name: "Clustering options"
  arguments:
  - type: "string"
    name: "--obs_cluster"
    description: "Prefix for the .obs keys under which to add the cluster labels.\
      \ Newly created columns in .obs will \nbe created from the specified value for\
      \ '--obs_cluster' suffixed with an underscore and one of the\nresolutions specified\
      \ in '--leiden_resolution'.\n"
    info: null
    default:
    - "scanorama_integration_leiden"
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ";"
  - type: "double"
    name: "--leiden_resolution"
    description: "Control the coarseness of the clustering. Higher values lead to\
      \ more clusters."
    info: null
    default:
    - 1.0
    required: false
    direction: "input"
    multiple: true
    multiple_sep: ";"
- name: "Umap options"
  arguments:
  - type: "string"
    name: "--obsm_umap"
    description: "In which .obsm slot to store the resulting UMAP embedding."
    info: null
    default:
    - "X_leiden_scanorama_umap"
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ";"
resources:
- type: "nextflow_script"
  path: "main.nf"
  is_executable: true
  entrypoint: "run_wf"
- type: "file"
  path: "utils"
- type: "file"
  path: "nextflow_labels.config"
  dest: "nextflow_labels.config"
description: "Run scanorama integration followed by neighbour calculations, leiden\
  \ clustering and run umap on the result."
test_resources:
- type: "nextflow_script"
  path: "test.nf"
  is_executable: true
  entrypoint: "test_wf"
- type: "nextflow_script"
  path: "test.nf"
  is_executable: true
  entrypoint: "test_wf2"
- type: "file"
  path: "pbmc_1k_protein_v3"
info: null
status: "enabled"
dependencies:
- name: "integrate/scanorama"
  repository:
    type: "local"
- name: "workflows/multiomics/neighbors_leiden_umap"
  repository:
    type: "local"
links:
  repository: "https://github.com/openpipelines-bio/openpipeline"
  docker_registry: "ghcr.io"
runners:
- type: "nextflow"
  id: "nextflow"
  directives:
    tag: "$id"
  auto:
    simplifyInput: true
    simplifyOutput: false
    transcript: false
    publish: false
  config:
    labels:
      mem1gb: "memory = 1000000000.B"
      mem2gb: "memory = 2000000000.B"
      mem5gb: "memory = 5000000000.B"
      mem10gb: "memory = 10000000000.B"
      mem20gb: "memory = 20000000000.B"
      mem50gb: "memory = 50000000000.B"
      mem100gb: "memory = 100000000000.B"
      mem200gb: "memory = 200000000000.B"
      mem500gb: "memory = 500000000000.B"
      mem1tb: "memory = 1000000000000.B"
      mem2tb: "memory = 2000000000000.B"
      mem5tb: "memory = 5000000000000.B"
      mem10tb: "memory = 10000000000000.B"
      mem20tb: "memory = 20000000000000.B"
      mem50tb: "memory = 50000000000000.B"
      mem100tb: "memory = 100000000000000.B"
      mem200tb: "memory = 200000000000000.B"
      mem500tb: "memory = 500000000000000.B"
      mem1gib: "memory = 1073741824.B"
      mem2gib: "memory = 2147483648.B"
      mem4gib: "memory = 4294967296.B"
      mem8gib: "memory = 8589934592.B"
      mem16gib: "memory = 17179869184.B"
      mem32gib: "memory = 34359738368.B"
      mem64gib: "memory = 68719476736.B"
      mem128gib: "memory = 137438953472.B"
      mem256gib: "memory = 274877906944.B"
      mem512gib: "memory = 549755813888.B"
      mem1tib: "memory = 1099511627776.B"
      mem2tib: "memory = 2199023255552.B"
      mem4tib: "memory = 4398046511104.B"
      mem8tib: "memory = 8796093022208.B"
      mem16tib: "memory = 17592186044416.B"
      mem32tib: "memory = 35184372088832.B"
      mem64tib: "memory = 70368744177664.B"
      mem128tib: "memory = 140737488355328.B"
      mem256tib: "memory = 281474976710656.B"
      mem512tib: "memory = 562949953421312.B"
      cpu1: "cpus = 1"
      cpu2: "cpus = 2"
      cpu5: "cpus = 5"
      cpu10: "cpus = 10"
      cpu20: "cpus = 20"
      cpu50: "cpus = 50"
      cpu100: "cpus = 100"
      cpu200: "cpus = 200"
      cpu500: "cpus = 500"
      cpu1000: "cpus = 1000"
    script:
    - "includeConfig(\"nextflow_labels.config\")"
  debug: false
  container: "docker"
build_info:
  config: "src/workflows/integration/scanorama_leiden/config.vsh.yaml"
  runner: "nextflow"
  engine: "native"
  output: "target/nextflow/workflows/integration/scanorama_leiden"
  executable: "target/nextflow/workflows/integration/scanorama_leiden/main.nf"
  viash_version: "0.9.0"
  git_commit: "5367a81dbd5e07e3c188b6106502d5de71312443"
  git_remote: "https://github.com/openpipelines-bio/openpipeline"
  dependencies:
  - "target/nextflow/integrate/scanorama"
  - "target/nextflow/workflows/multiomics/neighbors_leiden_umap"
package_config:
  name: "openpipeline"
  info:
    test_resources:
    - type: "s3"
      path: "s3://openpipelines-data"
      dest: "resources_test"
  viash_version: "0.9.0"
  source: "src"
  target: "target"
  config_mods:
  - ".resources += {path: '/src/workflows/utils/labels.config', dest: 'nextflow_labels.config'}\n\
    .runners[.type == 'nextflow'].directives.tag := '$id'\n.runners[.type == 'nextflow'].config.script\
    \ := 'includeConfig(\"nextflow_labels.config\")'"
  - ".version := \"main_build\""
  organization: "openpipelines-bio"
  links:
    repository: "https://github.com/openpipelines-bio/openpipeline"
    docker_registry: "ghcr.io"
    homepage: "https://openpipelines.bio"
    documentation: "https://openpipelines.bio/fundamentals"
    issue_tracker: "https://github.com/openpipelines-bio/openpipeline/issues"
