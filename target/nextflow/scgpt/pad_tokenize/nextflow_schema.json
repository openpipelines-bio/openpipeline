{
  "$schema": "http://json-schema.org/draft-07/schema",
  "title": "pad_tokenize",
  "description": "Tokenize and pad a batch of data for scGPT integration zero-shot inference or fine-tuning.\n",
  "type": "object",
  "definitions": {
    "Dataset input": {
      "title": "Dataset input",
      "type": "object",
      "description": "Dataset input using nf-tower \"dataset\" or \"data explorer\". Allows for the input of multiple         parameter sets to initialise a Nextflow channel.",
      "properties": {
        "param_list": {
          "description": "Dataset input can either be a list of maps, a csv file, a json file, a yaml file, or simply a yaml                 blob. The names of the input fields (e.g. csv columns, json keys) need to be an exact match with the workflow input parameters.",
          "default": "",
          "format": "file-path",
          "mimetype": "text/csv",
          "pattern": "^\\S+\\.csv$"
        }
      }
    },
    "inputs": {
      "title": "Inputs",
      "type": "object",
      "description": "No description",
      "properties": {
        "input": {
          "type": "string",
          "format": "path",
          "exists": true,
          "description": "The input h5mu file of pre-processed data",
          "help_text": "Type: `file`, multiple: `False`, required, direction: `input`, example: `input.h5mu`. "
        },
        "modality": {
          "type": "string",
          "description": "",
          "help_text": "Type: `string`, multiple: `False`, default: `rna`. ",
          "default": "rna"
        },
        "model_vocab": {
          "type": "string",
          "format": "path",
          "exists": true,
          "description": "Path to model vocabulary file",
          "help_text": "Type: `file`, multiple: `False`, required, direction: `input`, example: `vocab.json`. "
        },
        "var_gene_names": {
          "type": "string",
          "description": "The name of the ",
          "help_text": "Type: `string`, multiple: `False`. "
        },
        "var_input": {
          "type": "string",
          "description": "The name of the adata",
          "help_text": "Type: `string`, multiple: `False`, default: `id_in_vocab`. ",
          "default": "id_in_vocab"
        },
        "input_obsm_binned_counts": {
          "type": "string",
          "description": "The name of the ",
          "help_text": "Type: `string`, multiple: `False`, default: `binned_counts`. ",
          "default": "binned_counts"
        }
      }
    },
    "outputs": {
      "title": "Outputs",
      "type": "object",
      "description": "No description",
      "properties": {
        "output": {
          "type": "string",
          "format": "path",
          "description": "The output h5mu file containing obsm arrays for gene tokens, tokenized data and padding mask",
          "help_text": "Type: `file`, multiple: `False`, required, default: `$id.$key.output.h5mu`, direction: `output`, example: `output.h5mu`. ",
          "default": "$id.$key.output.h5mu"
        },
        "obsm_gene_tokens": {
          "type": "string",
          "description": "The key of the ",
          "help_text": "Type: `string`, multiple: `False`, default: `gene_id_tokens`, example: `values.pt`. ",
          "default": "gene_id_tokens"
        },
        "obsm_tokenized_values": {
          "type": "string",
          "description": "The key of the ",
          "help_text": "Type: `string`, multiple: `False`, default: `values_tokenized`. ",
          "default": "values_tokenized"
        },
        "obsm_padding_mask": {
          "type": "string",
          "description": "The key of the ",
          "help_text": "Type: `string`, multiple: `False`, default: `padding_mask`. ",
          "default": "padding_mask"
        },
        "output_compression": {
          "type": "string",
          "description": "Compression format to use for the output AnnData and/or Mudata objects",
          "help_text": "Type: `string`, multiple: `False`, example: `gzip`, choices: ``gzip`, `lzf``. ",
          "enum": [
            "gzip",
            "lzf"
          ]
        }
      }
    },
    "arguments": {
      "title": "Arguments",
      "type": "object",
      "description": "No description",
      "properties": {
        "pad_token": {
          "type": "string",
          "description": "Token used for padding",
          "help_text": "Type: `string`, multiple: `False`, default: `<pad>`. ",
          "default": "<pad>"
        },
        "pad_value": {
          "type": "integer",
          "description": "The value of the padding token",
          "help_text": "Type: `integer`, multiple: `False`, default: `-2`. ",
          "default": -2
        },
        "max_seq_len": {
          "type": "integer",
          "description": "The maximum sequence length of the tokenized data",
          "help_text": "Type: `integer`, multiple: `False`. "
        }
      }
    },
    "nextflow input-output arguments": {
      "title": "Nextflow input-output arguments",
      "type": "object",
      "description": "Input/output parameters for Nextflow itself. Please note that both publishDir and publish_dir are supported but at least one has to be configured.",
      "properties": {
        "publish_dir": {
          "type": "string",
          "description": "Path to an output directory",
          "help_text": "Type: `string`, multiple: `False`, required, example: `output/`. "
        }
      }
    }
  },
  "allOf": [
    {
      "$ref": "#/definitions/inputs"
    },
    {
      "$ref": "#/definitions/outputs"
    },
    {
      "$ref": "#/definitions/arguments"
    },
    {
      "$ref": "#/definitions/nextflow input-output arguments"
    }
  ]
}
