{
"$schema": "http://json-schema.org/draft-07/schema",
"title": "knn",
"description": "This component performs label transfer from reference to query using a K-Neirest Neighbors classifier.\n",
"type": "object",
"definitions": {

    
    "Dataset input": {
        "title": "Dataset input",
        "type": "object",
        "description": "Dataset input using nf-tower \"dataset\" or \"data explorer\". Allows for the input of multiple         parameter sets to initialise a Nextflow channel.",
        "properties": {
            "param_list": {
                "description": "Dataset input can either be a list of maps, a csv file, a json file, a yaml file, or simply a yaml                 blob. The names of the input fields (e.g. csv columns, json keys) need to be an exact match with the workflow input parameters.",
                "default": "",
                "format": "file-path",
                "mimetype": "text/csv",
                "pattern": "^\\S+\\.csv$"
            }
        }
    },

    
    
    "outputs" : {
    "title": "Outputs",
    "type": "object",
    "description": "No description",
    "properties": {
    
        
                "output": {
                "type":
                "string",
                "description": "Type: `file`, required, default: `$id.$key.output.output`. The query data in ",
                "help_text": "Type: `file`, required, default: `$id.$key.output.output`. The query data in .h5mu format with predicted labels transfered from the reference."
            ,
                "default":"$id.$key.output.output"
            }
    

        ,
                "output_obs_predictions": {
                "type":
                "string",
                "description": "Type: List of `string`, multiple_sep: `\";\"`. In which `",
                "help_text": "Type: List of `string`, multiple_sep: `\";\"`. In which `.obs` slots to store the predicted information.\nIf provided, must have the same length as `--reference_obs_targets`.\nIf empty, will default to the `reference_obs_targets` combined with the `\"_pred\"` suffix.\n"
            
            }
    

        ,
                "output_obs_probability": {
                "type":
                "string",
                "description": "Type: List of `string`, multiple_sep: `\";\"`. In which `",
                "help_text": "Type: List of `string`, multiple_sep: `\";\"`. In which `.obs` slots to store the probability of the predictions.\nIf provided, must have the same length as `--reference_obs_targets`.\nIf empty, will default to the `reference_obs_targets` combined with the `\"_probability\"` suffix.\n"
            
            }
    

        ,
                "output_compression": {
                "type":
                "string",
                "description": "Type: `string`, example: `gzip`, choices: ``gzip`, `lzf``. The compression format to be used on the output h5mu object",
                "help_text": "Type: `string`, example: `gzip`, choices: ``gzip`, `lzf``. The compression format to be used on the output h5mu object.\n",
                "enum": ["gzip", "lzf"]
            
            
            }
    

}
},
    
    
    "input dataset (query) arguments" : {
    "title": "Input dataset (query) arguments",
    "type": "object",
    "description": "No description",
    "properties": {
    
        
                "input": {
                "type":
                "string",
                "description": "Type: `file`, required. The query data to transfer the labels to",
                "help_text": "Type: `file`, required. The query data to transfer the labels to. Should be a .h5mu file."
            
            }
    

        ,
                "modality": {
                "type":
                "string",
                "description": "Type: `string`, default: `rna`. Which modality to use",
                "help_text": "Type: `string`, default: `rna`. Which modality to use."
            ,
                "default":"rna"
            }
    

        ,
                "input_obsm_features": {
                "type":
                "string",
                "description": "Type: `string`, example: `X_scvi`. The `",
                "help_text": "Type: `string`, example: `X_scvi`. The `.obsm` key of the embedding to use for the classifier\u0027s inference. If not provided, the `.X` slot will be used instead.\nMake sure that embedding was obtained in the same way as the reference embedding (e.g. by the same model or preprocessing).\n"
            
            }
    

}
},
    
    
    "reference dataset arguments" : {
    "title": "Reference dataset arguments",
    "type": "object",
    "description": "No description",
    "properties": {
    
        
                "reference": {
                "type":
                "string",
                "description": "Type: `file`, example: `reference.h5mu`. The reference data to train classifiers on",
                "help_text": "Type: `file`, example: `reference.h5mu`. The reference data to train classifiers on."
            
            }
    

        ,
                "reference_obsm_features": {
                "type":
                "string",
                "description": "Type: `string`, example: `X_scvi`. The `",
                "help_text": "Type: `string`, example: `X_scvi`. The `.obsm` key of the embedding to use for the classifier\u0027s training. If not provided, the `.X` slot will be used instead.\nMake sure that embedding was obtained in the same way as the query embedding (e.g. by the same model or preprocessing).\n"
            
            }
    

        ,
                "reference_obs_targets": {
                "type":
                "string",
                "description": "Type: List of `string`, default: `ann_level_1;ann_level_2;ann_level_3;ann_level_4;ann_level_5;ann_finest_level`, multiple_sep: `\";\"`. The `",
                "help_text": "Type: List of `string`, default: `ann_level_1;ann_level_2;ann_level_3;ann_level_4;ann_level_5;ann_finest_level`, multiple_sep: `\";\"`. The `.obs` key(s) of the target labels to tranfer."
            ,
                "default":"ann_level_1;ann_level_2;ann_level_3;ann_level_4;ann_level_5;ann_finest_level"
            }
    

}
},
    
    
    "input dataset (query) arguments" : {
    "title": "Input dataset (query) arguments",
    "type": "object",
    "description": "No description",
    "properties": {
    
        
                "input_obsm_distances": {
                "type":
                "string",
                "description": "Type: `string`, example: `bbknn_distances`. The `",
                "help_text": "Type: `string`, example: `bbknn_distances`. The `.obsm` key of the input (query) dataset containing pre-calculated distances. \nIf not provided, the distances will be calculated using PyNNDescent.\nMake sure the distance matrix contains distances relative to the reference dataset and were obtained in the same way as the reference embedding.\n"
            
            }
    

}
},
    
    
    "reference dataset arguments" : {
    "title": "Reference dataset arguments",
    "type": "object",
    "description": "No description",
    "properties": {
    
        
                "reference_obsm_distances": {
                "type":
                "string",
                "description": "Type: `string`, example: `bbknn_distances`. The `",
                "help_text": "Type: `string`, example: `bbknn_distances`. The `.obsm` key of the reference dataset containing pre-calculated distances. \nIf not provided, the distances will be calculated using PyNNDescent.\n"
            
            }
    

}
},
    
    
    "knn label transfer arguments" : {
    "title": "KNN label transfer arguments",
    "type": "object",
    "description": "No description",
    "properties": {
    
        
                "weights": {
                "type":
                "string",
                "description": "Type: `string`, default: `uniform`, choices: ``uniform`, `distance`, `gaussian``. Weight function used in prediction",
                "help_text": "Type: `string`, default: `uniform`, choices: ``uniform`, `distance`, `gaussian``. Weight function used in prediction. Possible values are:\n- `uniform` - all points in each neighborhood are weighted equally \n- `distance` - weight points by the inverse of their distance\n- `gaussian` - weight points by the sum of their Gaussian kernel similarities to each sample\n",
                "enum": ["uniform", "distance", "gaussian"]
            
            ,
                "default":"uniform"
            }
    

        ,
                "n_neighbors": {
                "type":
                "integer",
                "description": "Type: `integer`, default: `15`. The number of neighbors to use in k-neighbor graph structure used for fast approximate nearest neighbor search with PyNNDescent",
                "help_text": "Type: `integer`, default: `15`. The number of neighbors to use in k-neighbor graph structure used for fast approximate nearest neighbor search with PyNNDescent. \nLarger values will result in more accurate search results at the cost of computation time.\n"
            ,
                "default":15
            }
    

}
},
    
    
    "nextflow input-output arguments" : {
    "title": "Nextflow input-output arguments",
    "type": "object",
    "description": "Input/output parameters for Nextflow itself. Please note that both publishDir and publish_dir are supported but at least one has to be configured.",
    "properties": {
    
        
                "publish_dir": {
                "type":
                "string",
                "description": "Type: `string`, required, example: `output/`. Path to an output directory",
                "help_text": "Type: `string`, required, example: `output/`. Path to an output directory."
            
            }
    

        

}
}
},
"allOf": [

    {
    "$ref": "#/definitions/outputs"
    },

    {
    "$ref": "#/definitions/input dataset (query) arguments"
    },

    {
    "$ref": "#/definitions/reference dataset arguments"
    },

    {
    "$ref": "#/definitions/input dataset (query) arguments"
    },

    {
    "$ref": "#/definitions/reference dataset arguments"
    },

    {
    "$ref": "#/definitions/knn label transfer arguments"
    },

    {
    "$ref": "#/definitions/nextflow input-output arguments"
    }
]
}
