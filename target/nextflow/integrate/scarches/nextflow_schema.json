{
"$schema": "http://json-schema.org/draft-07/schema",
"title": "scarches",
"description": "Performs reference mapping with scArches",
"type": "object",
"definitions": {

    
    "Dataset input": {
        "title": "Dataset input",
        "type": "object",
        "description": "Dataset input using nf-tower \"dataset\" or \"data explorer\". Allows for the input of multiple         parameter sets to initialise a Nextflow channel.",
        "properties": {
            "param_list": {
                "description": "Dataset input can either be a list of maps, a csv file, a json file, a yaml file, or simply a yaml                 blob. The names of the input fields (e.g. csv columns, json keys) need to be an exact match with the workflow input parameters.",
                "default": "",
                "format": "file-path",
                "mimetype": "text/csv",
                "pattern": "^\\S+\\.csv$"
            }
        }
    },

    
    
    "inputs" : {
    "title": "Inputs",
    "type": "object",
    "description": "No description",
    "properties": {
    
        
                "input": {
                "type":
                "string",
                "description": "Type: `file`, required. Input h5mu file to use as a query",
                "help_text": "Type: `file`, required. Input h5mu file to use as a query"
            
            }
    

        ,
                "modality": {
                "type":
                "string",
                "description": "Type: `string`, default: `rna`. ",
                "help_text": "Type: `string`, default: `rna`. "
            ,
                "default": "rna"
            }
    

        ,
                "reference": {
                "type":
                "string",
                "description": "Type: `file`, required. Path to the directory with reference model or a web link",
                "help_text": "Type: `file`, required. Path to the directory with reference model or a web link. For HLCA use https://zenodo.org/record/6337966/files/HLCA_reference_model.zip"
            
            }
    

        ,
                "dataset_name": {
                "type":
                "string",
                "description": "Type: `string`, default: `test_dataset`. Name of query dataset to use as a batch name",
                "help_text": "Type: `string`, default: `test_dataset`. Name of query dataset to use as a batch name. If not set, name of the input file is used"
            ,
                "default": "test_dataset"
            }
    

}
},
    
    
    "outputs" : {
    "title": "Outputs",
    "type": "object",
    "description": "No description",
    "properties": {
    
        
                "output": {
                "type":
                "string",
                "description": "Type: `file`, required, default: `$id.$key.output.output`. Output h5mu file",
                "help_text": "Type: `file`, required, default: `$id.$key.output.output`. Output h5mu file."
            ,
                "default": "$id.$key.output.output"
            }
    

        ,
                "output_compression": {
                "type":
                "string",
                "description": "Type: `string`, example: `gzip`, choices: ``gzip`, `lzf``. The compression format to be used on the output h5mu object",
                "help_text": "Type: `string`, example: `gzip`, choices: ``gzip`, `lzf``. The compression format to be used on the output h5mu object.",
                "enum": ["gzip", "lzf"]
            
            
            }
    

        ,
                "model_output": {
                "type":
                "string",
                "description": "Type: `file`, default: `$id.$key.model_output.model_output`. Output directory for model",
                "help_text": "Type: `file`, default: `$id.$key.model_output.model_output`. Output directory for model"
            ,
                "default": "$id.$key.model_output.model_output"
            }
    

        ,
                "obsm_output": {
                "type":
                "string",
                "description": "Type: `string`, default: `X_integrated_scanvi`. In which ",
                "help_text": "Type: `string`, default: `X_integrated_scanvi`. In which .obsm slot to store the resulting integrated embedding."
            ,
                "default": "X_integrated_scanvi"
            }
    

}
},
    
    
    "early stopping arguments" : {
    "title": "Early stopping arguments",
    "type": "object",
    "description": "No description",
    "properties": {
    
        
                "early_stopping": {
                "type":
                "boolean",
                "description": "Type: `boolean`. Whether to perform early stopping with respect to the validation set",
                "help_text": "Type: `boolean`. Whether to perform early stopping with respect to the validation set."
            
            }
    

        ,
                "early_stopping_monitor": {
                "type":
                "string",
                "description": "Type: `string`, default: `elbo_validation`, choices: ``elbo_validation`, `reconstruction_loss_validation`, `kl_local_validation``. Metric logged during validation set epoch",
                "help_text": "Type: `string`, default: `elbo_validation`, choices: ``elbo_validation`, `reconstruction_loss_validation`, `kl_local_validation``. Metric logged during validation set epoch.",
                "enum": ["elbo_validation", "reconstruction_loss_validation", "kl_local_validation"]
            
            ,
                "default": "elbo_validation"
            }
    

        ,
                "early_stopping_patience": {
                "type":
                "integer",
                "description": "Type: `integer`, default: `45`. Number of validation epochs with no improvement after which training will be stopped",
                "help_text": "Type: `integer`, default: `45`. Number of validation epochs with no improvement after which training will be stopped."
            ,
                "default": "45"
            }
    

        ,
                "early_stopping_min_delta": {
                "type":
                "number",
                "description": "Type: `double`, default: `0.0`. Minimum change in the monitored quantity to qualify as an improvement, i",
                "help_text": "Type: `double`, default: `0.0`. Minimum change in the monitored quantity to qualify as an improvement, i.e. an absolute change of less than min_delta, will count as no improvement."
            ,
                "default": "0.0"
            }
    

}
},
    
    
    "learning parameters" : {
    "title": "Learning parameters",
    "type": "object",
    "description": "No description",
    "properties": {
    
        
                "max_epochs": {
                "type":
                "integer",
                "description": "Type: `integer`, required. Number of passes through the dataset, defaults to (20000 / number of cells) * 400 or 400; whichever is smallest",
                "help_text": "Type: `integer`, required. Number of passes through the dataset, defaults to (20000 / number of cells) * 400 or 400; whichever is smallest."
            
            }
    

        ,
                "reduce_lr_on_plateau": {
                "type":
                "boolean",
                "description": "Type: `boolean`, default: `true`. Whether to monitor validation loss and reduce learning rate when validation set `lr_scheduler_metric` plateaus",
                "help_text": "Type: `boolean`, default: `true`. Whether to monitor validation loss and reduce learning rate when validation set `lr_scheduler_metric` plateaus."
            ,
                "default": "True"
            }
    

        ,
                "lr_factor": {
                "type":
                "number",
                "description": "Type: `double`, default: `0.6`. Factor to reduce learning rate",
                "help_text": "Type: `double`, default: `0.6`. Factor to reduce learning rate."
            ,
                "default": "0.6"
            }
    

        ,
                "lr_patience": {
                "type":
                "number",
                "description": "Type: `double`, default: `30.0`. Number of epochs with no improvement after which learning rate will be reduced",
                "help_text": "Type: `double`, default: `30.0`. Number of epochs with no improvement after which learning rate will be reduced."
            ,
                "default": "30.0"
            }
    

}
},
    
    
    "nextflow input-output arguments" : {
    "title": "Nextflow input-output arguments",
    "type": "object",
    "description": "Input/output parameters for Nextflow itself. Please note that both publishDir and publish_dir are supported but at least one has to be configured.",
    "properties": {
    
        
                "publish_dir": {
                "type":
                "string",
                "description": "Type: `string`, required, example: `output/`. Path to an output directory",
                "help_text": "Type: `string`, required, example: `output/`. Path to an output directory."
            
            }
    

        

}
}
},
"allOf": [

    {
    "$ref": "#/definitions/inputs"
    },

    {
    "$ref": "#/definitions/outputs"
    },

    {
    "$ref": "#/definitions/early stopping arguments"
    },

    {
    "$ref": "#/definitions/learning parameters"
    },

    {
    "$ref": "#/definitions/nextflow input-output arguments"
    }
]
}
