{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "title": "freemuxlet",
  "description": "Freemuxlet is a software tool to deconvolute sample identity and identify multiplets when\nmultiple samples are pooled by barcoded single cell sequencing. If external genotyping\ndata is not available, the genotyping-free version demuxlet, freemuxlet, would be recommended.\n",
  "type": "object",
  "$defs": {
    "Dataset input": {
      "title": "Dataset input",
      "type": "object",
      "description": "Dataset input using nf-tower \"dataset\" or \"data explorer\". Allows for the input of multiple         parameter sets to initialise a Nextflow channel.",
      "properties": {
        "param_list": {
          "description": "Dataset input can either be a list of maps, a csv file, a json file, a yaml file, or simply a yaml                 blob. The names of the input fields (e.g. csv columns, json keys) need to be an exact match with the workflow input parameters.",
          "default": "",
          "type": "object",
          "format": "file-path",
          "mimetype": "text/csv"
        }
      }
    },
    "input": {
      "title": "Input",
      "type": "object",
      "description": "No description",
      "properties": {
        "plp": {
          "type": "string",
          "description": "Prefix of input files generated by dsc-pileup",
          "help_text": "Type: `string`, multiple: `False`. "
        },
        "init_cluster": {
          "type": "string",
          "format": "path",
          "description": "Input file containing the initial cluster information.",
          "help_text": "Type: `file`, multiple: `False`, direction: `input`. "
        },
        "nsample": {
          "type": "integer",
          "description": "Number of samples multiplexed together",
          "help_text": "Type: `integer`, multiple: `False`, default: `2`. ",
          "default": 2
        },
        "aux_files": {
          "type": "boolean",
          "description": "Turn on writing auxilary output files",
          "help_text": "Type: `boolean_true`, multiple: `False`, default: `false`. ",
          "default": false
        },
        "verbose": {
          "type": "integer",
          "description": "Turn on verbose mode with specific verbosity threshold",
          "help_text": "Type: `integer`, multiple: `False`, default: `100`. ",
          "default": 100
        },
        "doublet_prior": {
          "type": "number",
          "description": "Prior of doublet.",
          "help_text": "Type: `double`, multiple: `False`, default: `0.5`. ",
          "default": 0.5
        },
        "geno_error": {
          "type": "number",
          "description": "Genotype error parameter per cluster.",
          "help_text": "Type: `double`, multiple: `False`, default: `0.1`. ",
          "default": 0.1
        },
        "bf_thres": {
          "type": "number",
          "description": "Bayes Factor Threshold used in the initial clustering.",
          "help_text": "Type: `double`, multiple: `False`, default: `5.41`. ",
          "default": 5.41
        },
        "frac_init_clust": {
          "type": "number",
          "description": "Fraction of droplets to be clustered in the very first round of initial clustering procedure.",
          "help_text": "Type: `double`, multiple: `False`, default: `1.0`. ",
          "default": 1.0
        },
        "iter_init": {
          "type": "integer",
          "description": "Iteration for initial cluster assignment (set to zero to skip the iterations).",
          "help_text": "Type: `integer`, multiple: `False`, default: `10`. ",
          "default": 10
        },
        "keep_init_missing": {
          "type": "boolean",
          "description": "Keep missing cluster assignment as missing in the initial iteration.",
          "help_text": "Type: `boolean_true`, multiple: `False`, default: `false`. ",
          "default": false
        },
        "randomize_singlet_score": {
          "type": "boolean",
          "description": "Randomize the singlet scores to test its effect.",
          "help_text": "Type: `boolean_true`, multiple: `False`, default: `false`. ",
          "default": false
        },
        "seed": {
          "type": "integer",
          "description": "Seed for random number (use clocks if not set).",
          "help_text": "Type: `integer`, multiple: `False`, default: `0`. ",
          "default": 0
        },
        "cap_bq": {
          "type": "integer",
          "description": "Maximum base quality (higher BQ will be capped).",
          "help_text": "Type: `integer`, multiple: `False`, default: `20`. ",
          "default": 20
        },
        "min_bq": {
          "type": "integer",
          "description": "Minimum base quality to consider (lower BQ will be skipped).",
          "help_text": "Type: `integer`, multiple: `False`, default: `13`. ",
          "default": 13
        },
        "group_list": {
          "type": "string",
          "description": "List of tag readgroup/cell barcode to consider in this run",
          "help_text": "Type: `string`, multiple: `False`. "
        },
        "min_total": {
          "type": "integer",
          "description": "Minimum number of total reads for a droplet/cell to be considered.",
          "help_text": "Type: `integer`, multiple: `False`, default: `0`. ",
          "default": 0
        },
        "min_umi": {
          "type": "integer",
          "description": "Minimum number of UMIs for a droplet/cell to be considered.",
          "help_text": "Type: `integer`, multiple: `False`, default: `0`. ",
          "default": 0
        },
        "min_snp": {
          "type": "integer",
          "description": "Minimum number of SNPs with coverage for a droplet/cell to be considered.",
          "help_text": "Type: `integer`, multiple: `False`, default: `0`. ",
          "default": 0
        }
      }
    },
    "output": {
      "title": "Output",
      "type": "object",
      "description": "No description",
      "properties": {
        "output": {
          "type": "string",
          "format": "path",
          "description": "Output directory",
          "help_text": "Type: `file`, multiple: `False`, default: `\"$id.$key.output\"`, direction: `output`, example: `\"freemux\"`. ",
          "default": "$id.$key.output"
        },
        "out": {
          "type": "string",
          "description": "freemuxlet Output file prefix",
          "help_text": "Type: `string`, multiple: `False`, example: `\"freemuxlet\"`. "
        }
      }
    },
    "nextflow input-output arguments": {
      "title": "Nextflow input-output arguments",
      "type": "object",
      "description": "Input/output parameters for Nextflow itself. Please note that both publishDir and publish_dir are supported but at least one has to be configured.",
      "properties": {
        "publish_dir": {
          "type": "string",
          "description": "Path to an output directory.",
          "help_text": "Type: `string`, multiple: `False`, required, example: `\"output/\"`. "
        }
      }
    }
  },
  "allOf": [
    {
      "$ref": "#/$defs/input"
    },
    {
      "$ref": "#/$defs/output"
    },
    {
      "$ref": "#/$defs/nextflow input-output arguments"
    }
  ]
}
