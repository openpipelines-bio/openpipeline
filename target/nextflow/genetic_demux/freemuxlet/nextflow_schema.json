{
"$schema": "http://json-schema.org/draft-07/schema",
"title": "freemuxlet",
"description": "Freemuxlet is a software tool to deconvolute sample identity and identify multiplets when\nmultiple samples are pooled by barcoded single cell sequencing. If external genotyping\ndata is not available, the genotyping-free version demuxlet, freemuxlet, would be recommended.\n",
"type": "object",
"definitions": {

    
    "Dataset input": {
        "title": "Dataset input",
        "type": "object",
        "description": "Dataset input using nf-tower \"dataset\" or \"data explorer\". Allows for the input of multiple         parameter sets to initialise a Nextflow channel.",
        "properties": {
            "param_list": {
                "description": "Dataset input can either be a list of maps, a csv file, a json file, a yaml file, or simply a yaml                 blob. The names of the input fields (e.g. csv columns, json keys) need to be an exact match with the workflow input parameters.",
                "default": "",
                "format": "file-path",
                "mimetype": "text/csv",
                "pattern": "^\\S+\\.csv$"
            }
        }
    },

    
    
    "input" : {
    "title": "Input",
    "type": "object",
    "description": "No description",
    "properties": {
    
        
                "plp": {
                "type":
                "string",
                "description": "Type: `string`. Prefix of input files generated by dsc-pileup",
                "help_text": "Type: `string`. Prefix of input files generated by dsc-pileup"
            
            }
    

        ,
                "init_cluster": {
                "type":
                "string",
                "description": "Type: `file`. Input file containing the initial cluster information",
                "help_text": "Type: `file`. Input file containing the initial cluster information."
            
            }
    

        ,
                "nsample": {
                "type":
                "integer",
                "description": "Type: `integer`, default: `2`. Number of samples multiplexed together",
                "help_text": "Type: `integer`, default: `2`. Number of samples multiplexed together"
            ,
                "default":2
            }
    

        ,
                "aux_files": {
                "type":
                "boolean",
                "description": "Type: `boolean_true`, default: `false`. Turn on writing auxilary output files",
                "help_text": "Type: `boolean_true`, default: `false`. Turn on writing auxilary output files"
            ,
                "default":false
            }
    

        ,
                "verbose": {
                "type":
                "integer",
                "description": "Type: `integer`, default: `100`. Turn on verbose mode with specific verbosity threshold",
                "help_text": "Type: `integer`, default: `100`. Turn on verbose mode with specific verbosity threshold. 0: fully verbose, 100 : no verbose messages."
            ,
                "default":100
            }
    

        ,
                "doublet_prior": {
                "type":
                "number",
                "description": "Type: `double`, default: `0.5`. Prior of doublet",
                "help_text": "Type: `double`, default: `0.5`. Prior of doublet."
            ,
                "default":0.5
            }
    

        ,
                "geno_error": {
                "type":
                "number",
                "description": "Type: `double`, default: `0.1`. Genotype error parameter per cluster",
                "help_text": "Type: `double`, default: `0.1`. Genotype error parameter per cluster."
            ,
                "default":0.1
            }
    

        ,
                "bf_thres": {
                "type":
                "number",
                "description": "Type: `double`, default: `5.41`. Bayes Factor Threshold used in the initial clustering",
                "help_text": "Type: `double`, default: `5.41`. Bayes Factor Threshold used in the initial clustering."
            ,
                "default":5.41
            }
    

        ,
                "frac_init_clust": {
                "type":
                "number",
                "description": "Type: `double`, default: `1.0`. Fraction of droplets to be clustered in the very first round of initial clustering procedure",
                "help_text": "Type: `double`, default: `1.0`. Fraction of droplets to be clustered in the very first round of initial clustering procedure."
            ,
                "default":1.0
            }
    

        ,
                "iter_init": {
                "type":
                "integer",
                "description": "Type: `integer`, default: `10`. Iteration for initial cluster assignment (set to zero to skip the iterations)",
                "help_text": "Type: `integer`, default: `10`. Iteration for initial cluster assignment (set to zero to skip the iterations)."
            ,
                "default":10
            }
    

        ,
                "keep_init_missing": {
                "type":
                "boolean",
                "description": "Type: `boolean_true`, default: `false`. Keep missing cluster assignment as missing in the initial iteration",
                "help_text": "Type: `boolean_true`, default: `false`. Keep missing cluster assignment as missing in the initial iteration."
            ,
                "default":false
            }
    

        ,
                "randomize_singlet_score": {
                "type":
                "boolean",
                "description": "Type: `boolean_true`, default: `false`. Randomize the singlet scores to test its effect",
                "help_text": "Type: `boolean_true`, default: `false`. Randomize the singlet scores to test its effect."
            ,
                "default":false
            }
    

        ,
                "seed": {
                "type":
                "integer",
                "description": "Type: `integer`, default: `0`. Seed for random number (use clocks if not set)",
                "help_text": "Type: `integer`, default: `0`. Seed for random number (use clocks if not set)."
            ,
                "default":0
            }
    

        ,
                "cap_bq": {
                "type":
                "integer",
                "description": "Type: `integer`, default: `20`. Maximum base quality (higher BQ will be capped)",
                "help_text": "Type: `integer`, default: `20`. Maximum base quality (higher BQ will be capped)."
            ,
                "default":20
            }
    

        ,
                "min_bq": {
                "type":
                "integer",
                "description": "Type: `integer`, default: `13`. Minimum base quality to consider (lower BQ will be skipped)",
                "help_text": "Type: `integer`, default: `13`. Minimum base quality to consider (lower BQ will be skipped)."
            ,
                "default":13
            }
    

        ,
                "group_list": {
                "type":
                "string",
                "description": "Type: `string`. List of tag readgroup/cell barcode to consider in this run",
                "help_text": "Type: `string`. List of tag readgroup/cell barcode to consider in this run. All other barcodes will be ignored. This is useful for parallelized run."
            
            }
    

        ,
                "min_total": {
                "type":
                "integer",
                "description": "Type: `integer`, default: `0`. Minimum number of total reads for a droplet/cell to be considered",
                "help_text": "Type: `integer`, default: `0`. Minimum number of total reads for a droplet/cell to be considered."
            ,
                "default":0
            }
    

        ,
                "min_umi": {
                "type":
                "integer",
                "description": "Type: `integer`, default: `0`. Minimum number of UMIs for a droplet/cell to be considered",
                "help_text": "Type: `integer`, default: `0`. Minimum number of UMIs for a droplet/cell to be considered."
            ,
                "default":0
            }
    

        ,
                "min_snp": {
                "type":
                "integer",
                "description": "Type: `integer`, default: `0`. Minimum number of SNPs with coverage for a droplet/cell to be considered",
                "help_text": "Type: `integer`, default: `0`. Minimum number of SNPs with coverage for a droplet/cell to be considered."
            ,
                "default":0
            }
    

}
},
    
    
    "output" : {
    "title": "Output",
    "type": "object",
    "description": "No description",
    "properties": {
    
        
                "output": {
                "type":
                "string",
                "description": "Type: `file`, default: `$id.$key.output.output`, example: `freemux`. Output directory",
                "help_text": "Type: `file`, default: `$id.$key.output.output`, example: `freemux`. Output directory"
            ,
                "default":"$id.$key.output.output"
            }
    

        ,
                "out": {
                "type":
                "string",
                "description": "Type: `string`, example: `freemuxlet`. freemuxlet Output file prefix",
                "help_text": "Type: `string`, example: `freemuxlet`. freemuxlet Output file prefix"
            
            }
    

}
},
    
    
    "nextflow input-output arguments" : {
    "title": "Nextflow input-output arguments",
    "type": "object",
    "description": "Input/output parameters for Nextflow itself. Please note that both publishDir and publish_dir are supported but at least one has to be configured.",
    "properties": {
    
        
                "publish_dir": {
                "type":
                "string",
                "description": "Type: `string`, required, example: `output/`. Path to an output directory",
                "help_text": "Type: `string`, required, example: `output/`. Path to an output directory."
            
            }
    

        

}
}
},
"allOf": [

    {
    "$ref": "#/definitions/input"
    },

    {
    "$ref": "#/definitions/output"
    },

    {
    "$ref": "#/definitions/nextflow input-output arguments"
    }
]
}
