{
"$schema": "http://json-schema.org/draft-07/schema",
"title": "freebayes",
"description": "Freebayes is a Bayesian genetic variant detector designed to\nfind small polymorphisms, specifically SNPs.\n",
"type": "object",
"definitions": {

    
    "Dataset input": {
        "title": "Dataset input",
        "type": "object",
        "description": "Dataset input using nf-tower \"dataset\" or \"data explorer\". Allows for the input of multiple         parameter sets to initialise a Nextflow channel.",
        "properties": {
            "param_list": {
                "description": "Dataset input can either be a list of maps, a csv file, a json file, a yaml file, or simply a yaml                 blob. The names of the input fields (e.g. csv columns, json keys) need to be an exact match with the workflow input parameters.",
                "default": "",
                "format": "file-path",
                "mimetype": "text/csv",
                "pattern": "^\\S+\\.csv$"
            }
        }
    },

    
    
    "input" : {
    "title": "Input",
    "type": "object",
    "description": "No description",
    "properties": {
    
        
                "bam": {
                "type":
                "string",
                "description": "Type: `file`. Add FILE to the set of BAM files to be analyzed",
                "help_text": "Type: `file`. Add FILE to the set of BAM files to be analyzed."
            
            }
    

        ,
                "bam_list": {
                "type":
                "string",
                "description": "Type: `file`. A file containing a list of BAM files to be analyzed",
                "help_text": "Type: `file`. A file containing a list of BAM files to be analyzed."
            
            }
    

        ,
                "stdin": {
                "type":
                "boolean",
                "description": "Type: `boolean_true`, default: `false`. Read BAM input on stdin",
                "help_text": "Type: `boolean_true`, default: `false`. Read BAM input on stdin."
            ,
                "default":false
            }
    

        ,
                "fasta_reference": {
                "type":
                "string",
                "description": "Type: `file`. Use FILE as the reference sequence for analysis",
                "help_text": "Type: `file`. Use FILE as the reference sequence for analysis. An index file (FILE.fai) will be created if none exists. If neither --targets nor --region are specified, FreeBayes will analyze every position in this reference."
            
            }
    

        ,
                "fasta_reference_index": {
                "type":
                "string",
                "description": "Type: `file`. Use FILE",
                "help_text": "Type: `file`. Use FILE.fai as the index of reference sequence for analysis."
            
            }
    

        ,
                "targets": {
                "type":
                "string",
                "description": "Type: `file`. Limit analysis to targets listed in the BED-format FILE",
                "help_text": "Type: `file`. Limit analysis to targets listed in the BED-format FILE."
            
            }
    

        ,
                "region": {
                "type":
                "string",
                "description": "Type: `string`. Limit analysis to the specified region, 0-base coordinates, end_position not included (same as BED format)",
                "help_text": "Type: `string`. Limit analysis to the specified region, 0-base coordinates, end_position not included (same as BED format)."
            
            }
    

        ,
                "samples": {
                "type":
                "string",
                "description": "Type: `file`. Limit analysis to samples listed (one per line) in the FILE",
                "help_text": "Type: `file`. Limit analysis to samples listed (one per line) in the FILE. By default FreeBayes will analyze all samples in its input BAM files."
            
            }
    

        ,
                "populations": {
                "type":
                "string",
                "description": "Type: `file`. Each line of FILE should list a sample and a population which it is part of",
                "help_text": "Type: `file`. Each line of FILE should list a sample and a population which it is part of. The population-based bayesian inference model will then be partitioned on the basis of the populations."
            
            }
    

        ,
                "cnv_map": {
                "type":
                "string",
                "description": "Type: `file`. Read a copy number map from the BED file FILE, which has either a sample-level ploidy or a region-specific format",
                "help_text": "Type: `file`. Read a copy number map from the BED file FILE, which has either a sample-level ploidy or a region-specific format."
            
            }
    

        ,
                "gvcf": {
                "type":
                "boolean",
                "description": "Type: `boolean_true`, default: `false`. Write gVCF output, which indicates coverage in uncalled regions",
                "help_text": "Type: `boolean_true`, default: `false`. Write gVCF output, which indicates coverage in uncalled regions."
            ,
                "default":false
            }
    

        ,
                "gvcf_chunk": {
                "type":
                "integer",
                "description": "Type: `integer`. When writing gVCF output emit a record for every NUM bases",
                "help_text": "Type: `integer`. When writing gVCF output emit a record for every NUM bases."
            
            }
    

        ,
                "variant_input": {
                "type":
                "string",
                "description": "Type: `file`. Use variants reported in VCF file as input to the algorithm",
                "help_text": "Type: `file`. Use variants reported in VCF file as input to the algorithm. Variants in this file will included in the output even if there is not enough support in the data to pass input filters."
            
            }
    

        ,
                "only_use_input_alleles": {
                "type":
                "boolean",
                "description": "Type: `boolean_true`, default: `false`. Only provide variant calls and genotype likelihoods for sites and alleles which are provided in the VCF input, and provide output in the VCF for all input alleles, not just those which have support in the data",
                "help_text": "Type: `boolean_true`, default: `false`. Only provide variant calls and genotype likelihoods for sites and alleles which are provided in the VCF input, and provide output in the VCF for all input alleles, not just those which have support in the data."
            ,
                "default":false
            }
    

        ,
                "haplotype_basis_alleles": {
                "type":
                "string",
                "description": "Type: `file`. When specified, only variant alleles provided in this input VCF will be used for the construction of complex or haplotype alleles",
                "help_text": "Type: `file`. When specified, only variant alleles provided in this input VCF will be used for the construction of complex or haplotype alleles."
            
            }
    

        ,
                "report_all_haplotype_alleles": {
                "type":
                "boolean",
                "description": "Type: `boolean_true`, default: `false`. At sites where genotypes are made over haplotype alleles, provide information about all alleles in output, not only those which are called",
                "help_text": "Type: `boolean_true`, default: `false`. At sites where genotypes are made over haplotype alleles, provide information about all alleles in output, not only those which are called."
            ,
                "default":false
            }
    

        ,
                "report_monomorphic": {
                "type":
                "boolean",
                "description": "Type: `boolean_true`, default: `false`. Report even loci which appear to be monomorphic, and report all considered alleles, even those which are not in called genotypes",
                "help_text": "Type: `boolean_true`, default: `false`. Report even loci which appear to be monomorphic, and report all considered alleles, even those which are not in called genotypes."
            ,
                "default":false
            }
    

        ,
                "pvar": {
                "type":
                "number",
                "description": "Type: `double`, default: `0.0`. Report sites if the probability that there is a polymorphism at the site is greater than N",
                "help_text": "Type: `double`, default: `0.0`. Report sites if the probability that there is a polymorphism at the site is greater than N. Note that post-filtering is generally recommended over the use of this parameter."
            ,
                "default":0.0
            }
    

        ,
                "strict_vcf": {
                "type":
                "boolean",
                "description": "Type: `boolean_true`, default: `false`. Generate strict VCF format (FORMAT/GQ will be an int)",
                "help_text": "Type: `boolean_true`, default: `false`. Generate strict VCF format (FORMAT/GQ will be an int)."
            ,
                "default":false
            }
    

        ,
                "theta": {
                "type":
                "number",
                "description": "Type: `double`, default: `0.001`. The expected mutation rate or pairwise nucleotide diversity among the population under analysis",
                "help_text": "Type: `double`, default: `0.001`. The expected mutation rate or pairwise nucleotide diversity among the population under analysis. This serves as the single parameter to the Ewens Sampling Formula prior model."
            ,
                "default":0.001
            }
    

        ,
                "ploidy": {
                "type":
                "integer",
                "description": "Type: `integer`, default: `2`. Sets the default ploidy for the analysis to N",
                "help_text": "Type: `integer`, default: `2`. Sets the default ploidy for the analysis to N."
            ,
                "default":2
            }
    

        ,
                "pooled_discrete": {
                "type":
                "boolean",
                "description": "Type: `boolean_true`, default: `false`. Assume that samples result from pooled sequencing",
                "help_text": "Type: `boolean_true`, default: `false`. Assume that samples result from pooled sequencing. Model pooled samples using discrete genotypes across pools."
            ,
                "default":false
            }
    

        ,
                "pooled_continuous": {
                "type":
                "boolean",
                "description": "Type: `boolean_true`, default: `false`. Output all alleles which pass input filters, regardles of genotyping outcome or model",
                "help_text": "Type: `boolean_true`, default: `false`. Output all alleles which pass input filters, regardles of genotyping outcome or model."
            ,
                "default":false
            }
    

        ,
                "use_reference_allele": {
                "type":
                "boolean",
                "description": "Type: `boolean_true`, default: `false`. This flag includes the reference allele in the analysis as if it is another sample from the same population",
                "help_text": "Type: `boolean_true`, default: `false`. This flag includes the reference allele in the analysis as if it is another sample from the same population."
            ,
                "default":false
            }
    

        ,
                "reference_quality": {
                "type":
                "string",
                "description": "Type: `string`, default: `100,60`. Assign mapping quality of MQ to the reference allele at each site and base quality of BQ",
                "help_text": "Type: `string`, default: `100,60`. Assign mapping quality of MQ to the reference allele at each site and base quality of BQ."
            ,
                "default":"100,60"
            }
    

        ,
                "throw_away_snp_obs": {
                "type":
                "boolean",
                "description": "Type: `boolean_true`, default: `false`. Ignore SNP alleles",
                "help_text": "Type: `boolean_true`, default: `false`. Ignore SNP alleles."
            ,
                "default":false
            }
    

        ,
                "throw_away_mnps_obs": {
                "type":
                "boolean",
                "description": "Type: `boolean_false`, default: `true`. Ignore multi-nuceotide polymorphisms, MNPs",
                "help_text": "Type: `boolean_false`, default: `true`. Ignore multi-nuceotide polymorphisms, MNPs. MNPs are excluded as default."
            ,
                "default":true
            }
    

        ,
                "throw_away_indel_obs": {
                "type":
                "boolean",
                "description": "Type: `boolean_false`, default: `true`. Ignore insertion and deletion alleles",
                "help_text": "Type: `boolean_false`, default: `true`. Ignore insertion and deletion alleles. Indels are excluded as default."
            ,
                "default":true
            }
    

        ,
                "throw_away_complex_obs": {
                "type":
                "boolean",
                "description": "Type: `boolean_false`, default: `true`. Ignore complex events (composites of other classes)",
                "help_text": "Type: `boolean_false`, default: `true`. Ignore complex events (composites of other classes). Complex are excluded as default"
            ,
                "default":true
            }
    

        ,
                "use_best_n_alleles": {
                "type":
                "integer",
                "description": "Type: `integer`, default: `0`. Evaluate only the best N SNP alleles, ranked by sum of supporting quality scores",
                "help_text": "Type: `integer`, default: `0`. Evaluate only the best N SNP alleles, ranked by sum of supporting quality scores."
            ,
                "default":0
            }
    

        ,
                "max_complex_gap": {
                "type":
                "integer",
                "description": "Type: `integer`, default: `3`. Allow haplotype calls with contiguous embedded matches of up to this length",
                "help_text": "Type: `integer`, default: `3`. Allow haplotype calls with contiguous embedded matches of up to this length."
            ,
                "default":3
            }
    

        ,
                "min_repeat_size": {
                "type":
                "integer",
                "description": "Type: `integer`, default: `5`. When assembling observations across repeats, require the total repeat length at least this many bp",
                "help_text": "Type: `integer`, default: `5`. When assembling observations across repeats, require the total repeat length at least this many bp."
            ,
                "default":5
            }
    

        ,
                "min_repeat_entropy": {
                "type":
                "integer",
                "description": "Type: `integer`, default: `1`. To detect interrupted repeats, build across sequence until it has entropy \u003e N bits per bp",
                "help_text": "Type: `integer`, default: `1`. To detect interrupted repeats, build across sequence until it has entropy \u003e N bits per bp. Set to 0 to turn off."
            ,
                "default":1
            }
    

        ,
                "no_partial_observations": {
                "type":
                "boolean",
                "description": "Type: `boolean_true`, default: `false`. Exclude observations which do not fully span the dynamically-determined detection window",
                "help_text": "Type: `boolean_true`, default: `false`. Exclude observations which do not fully span the dynamically-determined detection window.  (default, use all observations, dividing partial support across matching haplotypes when generating haplotypes.)"
            ,
                "default":false
            }
    

        ,
                "dont_left_align_indels": {
                "type":
                "boolean",
                "description": "Type: `boolean_true`, default: `false`. Turn off left-alignment of indels, which is enabled by default",
                "help_text": "Type: `boolean_true`, default: `false`. Turn off left-alignment of indels, which is enabled by default."
            ,
                "default":false
            }
    

        ,
                "use_duplicate_reads": {
                "type":
                "boolean",
                "description": "Type: `boolean_true`, default: `false`. Include duplicate-marked alignments in the analysis",
                "help_text": "Type: `boolean_true`, default: `false`. Include duplicate-marked alignments in the analysis. default: exclude duplicates marked as such in alignments"
            ,
                "default":false
            }
    

        ,
                "min_mapping_quality": {
                "type":
                "integer",
                "description": "Type: `integer`, default: `1`. Exclude alignments from analysis if they have a mapping quality less than Q",
                "help_text": "Type: `integer`, default: `1`. Exclude alignments from analysis if they have a mapping quality less than Q."
            ,
                "default":1
            }
    

        ,
                "min_base_quality": {
                "type":
                "integer",
                "description": "Type: `integer`, default: `1`. Exclude alleles from analysis if their supporting base quality is less than Q",
                "help_text": "Type: `integer`, default: `1`. Exclude alleles from analysis if their supporting base quality is less than Q. Default value is changed according to the instruction of scSplit."
            ,
                "default":1
            }
    

        ,
                "min_supporting_allele_qsum": {
                "type":
                "integer",
                "description": "Type: `integer`, default: `0`. Consider any allele in which the sum of qualities of supporting observations is at least Q",
                "help_text": "Type: `integer`, default: `0`. Consider any allele in which the sum of qualities of supporting observations is at least Q."
            ,
                "default":0
            }
    

        ,
                "min_supporting_mapping_qsum": {
                "type":
                "integer",
                "description": "Type: `integer`, default: `0`. Consider any allele in which and the sum of mapping qualities of supporting reads is at least",
                "help_text": "Type: `integer`, default: `0`. Consider any allele in which and the sum of mapping qualities of supporting reads is at least."
            ,
                "default":0
            }
    

        ,
                "mismatch_base_quality_threshold": {
                "type":
                "integer",
                "description": "Type: `integer`, default: `10`. Count mismatches toward --read-mismatch-limit if the base quality of the mismatch is \u003e= Q",
                "help_text": "Type: `integer`, default: `10`. Count mismatches toward --read-mismatch-limit if the base quality of the mismatch is \u003e= Q."
            ,
                "default":10
            }
    

        ,
                "read_max_mismatch_fraction": {
                "type":
                "number",
                "description": "Type: `double`, default: `1.0`. Exclude reads with more than N mismatches where each mismatch has base quality \u003e= mismatch-base-quality-threshold",
                "help_text": "Type: `double`, default: `1.0`. Exclude reads with more than N mismatches where each mismatch has base quality \u003e= mismatch-base-quality-threshold."
            ,
                "default":1.0
            }
    

        ,
                "read_mismatch_limit": {
                "type":
                "integer",
                "description": "Type: `integer`. Exclude reads with more than N [0,1] fraction of mismatches where each mismatch has base quality \u003e= mismatch-base-quality-threshold",
                "help_text": "Type: `integer`. Exclude reads with more than N [0,1] fraction of mismatches where each mismatch has base quality \u003e= mismatch-base-quality-threshold."
            
            }
    

        ,
                "read_snp_limit": {
                "type":
                "integer",
                "description": "Type: `integer`. Exclude reads with more than N base mismatches, ignoring gaps with quality \u003e= mismatch-base-quality-threshold",
                "help_text": "Type: `integer`. Exclude reads with more than N base mismatches, ignoring gaps with quality \u003e= mismatch-base-quality-threshold."
            
            }
    

        ,
                "read_indel_limit": {
                "type":
                "integer",
                "description": "Type: `integer`. Exclude reads with more than N separate gaps",
                "help_text": "Type: `integer`. Exclude reads with more than N separate gaps."
            
            }
    

        ,
                "standard_filters": {
                "type":
                "boolean",
                "description": "Type: `boolean_true`, default: `false`. Use stringent input base and mapping quality filters, equivalent to -m 30 -q 20 -R 0 -S 0",
                "help_text": "Type: `boolean_true`, default: `false`. Use stringent input base and mapping quality filters, equivalent to -m 30 -q 20 -R 0 -S 0"
            ,
                "default":false
            }
    

        ,
                "min_alternate_fraction": {
                "type":
                "number",
                "description": "Type: `double`, default: `0.05`. Require at least this fraction of observations supporting an alternate allele within a single individual in order to evaluate the position",
                "help_text": "Type: `double`, default: `0.05`. Require at least this fraction of observations supporting an alternate allele within a single individual in order to evaluate the position."
            ,
                "default":0.05
            }
    

        ,
                "min_alternate_count": {
                "type":
                "integer",
                "description": "Type: `integer`, default: `2`. Require at least this count of observations supporting an alternate allele within a single individual in order to evaluate the position",
                "help_text": "Type: `integer`, default: `2`. Require at least this count of observations supporting an alternate allele within a single individual in order to evaluate the position."
            ,
                "default":2
            }
    

        ,
                "min_alternate_qsum": {
                "type":
                "integer",
                "description": "Type: `integer`, default: `0`. Require at least this sum of quality of observations supporting an alternate allele within a single individual in order to evaluate the position",
                "help_text": "Type: `integer`, default: `0`. Require at least this sum of quality of observations supporting an alternate allele within a single individual in order to evaluate the position."
            ,
                "default":0
            }
    

        ,
                "min_alternate_total": {
                "type":
                "integer",
                "description": "Type: `integer`, default: `1`. Require at least this count of observations supporting an alternate allele within the total population in order to use the allele in analysis",
                "help_text": "Type: `integer`, default: `1`. Require at least this count of observations supporting an alternate allele within the total population in order to use the allele in analysis."
            ,
                "default":1
            }
    

        ,
                "min_coverage": {
                "type":
                "integer",
                "description": "Type: `integer`, default: `0`. Require at least this coverage to process a site",
                "help_text": "Type: `integer`, default: `0`. Require at least this coverage to process a site."
            ,
                "default":0
            }
    

        ,
                "max_coverage": {
                "type":
                "integer",
                "description": "Type: `integer`. Do not process sites with greater than this coverage",
                "help_text": "Type: `integer`. Do not process sites with greater than this coverage."
            
            }
    

        ,
                "no_population_priors": {
                "type":
                "boolean",
                "description": "Type: `boolean_true`, default: `false`. Equivalent to --pooled-discrete --hwe-priors-off and removal of Ewens Sampling Formula component of priors",
                "help_text": "Type: `boolean_true`, default: `false`. Equivalent to --pooled-discrete --hwe-priors-off and removal of Ewens Sampling Formula component of priors."
            ,
                "default":false
            }
    

        ,
                "hwe_priors_off": {
                "type":
                "boolean",
                "description": "Type: `boolean_true`, default: `false`. Disable estimation of the probability of the combination arising under HWE given the allele frequency as estimated by observation frequency",
                "help_text": "Type: `boolean_true`, default: `false`. Disable estimation of the probability of the combination arising under HWE given the allele frequency as estimated by observation frequency."
            ,
                "default":false
            }
    

        ,
                "binomial_obs_priors_off": {
                "type":
                "boolean",
                "description": "Type: `boolean_true`, default: `false`. Disable incorporation of prior expectations about observations",
                "help_text": "Type: `boolean_true`, default: `false`. Disable incorporation of prior expectations about observations. Uses read placement probability, strand balance probability, and read position probability."
            ,
                "default":false
            }
    

        ,
                "allele_balance_priors_off": {
                "type":
                "boolean",
                "description": "Type: `boolean_true`, default: `false`. Disable use of aggregate probability of observation balance between alleles as a component of the priors",
                "help_text": "Type: `boolean_true`, default: `false`. Disable use of aggregate probability of observation balance between alleles as a component of the priors."
            ,
                "default":false
            }
    

        ,
                "observation_bias": {
                "type":
                "string",
                "description": "Type: `file`. Read length-dependent allele observation biases from FILE",
                "help_text": "Type: `file`. Read length-dependent allele observation biases from FILE. The format is [length] [alignment efficiency relative to reference] where the efficiency is 1 if there is no relative observation bias."
            
            }
    

        ,
                "base_quality_cap": {
                "type":
                "integer",
                "description": "Type: `integer`. Limit estimated observation quality by capping base quality at Q",
                "help_text": "Type: `integer`. Limit estimated observation quality by capping base quality at Q."
            
            }
    

        ,
                "prob_contamination": {
                "type":
                "number",
                "description": "Type: `double`, default: `1.0E-8`. An estimate of contamination to use for all samples",
                "help_text": "Type: `double`, default: `1.0E-8`. An estimate of contamination to use for all samples."
            ,
                "default":1e-08
            }
    

        ,
                "legacy_gls": {
                "type":
                "boolean",
                "description": "Type: `boolean_true`, default: `false`. Use legacy (polybayes equivalent) genotype likelihood calculations",
                "help_text": "Type: `boolean_true`, default: `false`. Use legacy (polybayes equivalent) genotype likelihood calculations"
            ,
                "default":false
            }
    

        ,
                "contamination_estimates": {
                "type":
                "string",
                "description": "Type: `file`. A file containing per-sample estimates of contamination, such as those generated by VerifyBamID",
                "help_text": "Type: `file`. A file containing per-sample estimates of contamination, such as those generated by VerifyBamID."
            
            }
    

        ,
                "report_genotype_likelihood_max": {
                "type":
                "boolean",
                "description": "Type: `boolean_true`, default: `false`. Report genotypes using the maximum-likelihood estimate provided from genotype likelihoods",
                "help_text": "Type: `boolean_true`, default: `false`. Report genotypes using the maximum-likelihood estimate provided from genotype likelihoods."
            ,
                "default":false
            }
    

        ,
                "genotyping_max_iterations": {
                "type":
                "integer",
                "description": "Type: `integer`, default: `1000`. Iterate no more than N times during genotyping step",
                "help_text": "Type: `integer`, default: `1000`. Iterate no more than N times during genotyping step."
            ,
                "default":1000
            }
    

        ,
                "genotyping_max_banddepth": {
                "type":
                "integer",
                "description": "Type: `integer`, default: `6`. Integrate no deeper than the Nth best genotype by likelihood when genotyping",
                "help_text": "Type: `integer`, default: `6`. Integrate no deeper than the Nth best genotype by likelihood when genotyping."
            ,
                "default":6
            }
    

        ,
                "posterior_integration_limits": {
                "type":
                "string",
                "description": "Type: `string`, default: `1,3`. Integrate all genotype combinations in our posterior space which include no more than N samples with their Mth best data likelihood",
                "help_text": "Type: `string`, default: `1,3`. Integrate all genotype combinations in our posterior space which include no more than N samples with their Mth best data likelihood."
            ,
                "default":"1,3"
            }
    

        ,
                "exclude_unobserved_genotypes": {
                "type":
                "boolean",
                "description": "Type: `boolean_true`, default: `false`. Skip sample genotypings for which the sample has no supporting reads",
                "help_text": "Type: `boolean_true`, default: `false`. Skip sample genotypings for which the sample has no supporting reads."
            ,
                "default":false
            }
    

        ,
                "genotype_variant_threshold": {
                "type":
                "integer",
                "description": "Type: `integer`. Limit posterior integration to samples where the second-best genotype likelihood is no more than log(N) from the highest genotype likelihood for the sample",
                "help_text": "Type: `integer`. Limit posterior integration to samples where the second-best genotype likelihood is no more than log(N) from the highest genotype likelihood for the sample."
            
            }
    

        ,
                "use_mapping_quality": {
                "type":
                "boolean",
                "description": "Type: `boolean_true`, default: `false`. Use mapping quality of alleles when calculating data likelihoods",
                "help_text": "Type: `boolean_true`, default: `false`. Use mapping quality of alleles when calculating data likelihoods."
            ,
                "default":false
            }
    

        ,
                "harmonic_indel_quality": {
                "type":
                "boolean",
                "description": "Type: `boolean_true`, default: `false`. Use a weighted sum of base qualities around an indel, scaled by the distance from the indel",
                "help_text": "Type: `boolean_true`, default: `false`. Use a weighted sum of base qualities around an indel, scaled by the distance from the indel. By default use a minimum BQ in flanking sequence."
            ,
                "default":false
            }
    

        ,
                "read_dependence_factor": {
                "type":
                "number",
                "description": "Type: `double`, default: `0.9`. Incorporate non-independence of reads by scaling successive observations by this factor during data likelihood calculations",
                "help_text": "Type: `double`, default: `0.9`. Incorporate non-independence of reads by scaling successive observations by this factor during data likelihood calculations."
            ,
                "default":0.9
            }
    

        ,
                "genotype_qualities": {
                "type":
                "boolean",
                "description": "Type: `boolean_true`, default: `false`. Calculate the marginal probability of genotypes and report as GQ in each sample field in the VCF output",
                "help_text": "Type: `boolean_true`, default: `false`. Calculate the marginal probability of genotypes and report as GQ in each sample field in the VCF output."
            ,
                "default":false
            }
    

        ,
                "debug": {
                "type":
                "boolean",
                "description": "Type: `boolean_true`, default: `false`. Print debugging output",
                "help_text": "Type: `boolean_true`, default: `false`. Print debugging output."
            ,
                "default":false
            }
    

        ,
                "dd": {
                "type":
                "boolean",
                "description": "Type: `boolean_true`, default: `false`. Print more verbose debugging output",
                "help_text": "Type: `boolean_true`, default: `false`. Print more verbose debugging output"
            ,
                "default":false
            }
    

}
},
    
    
    "output" : {
    "title": "Output",
    "type": "object",
    "description": "No description",
    "properties": {
    
        
                "output": {
                "type":
                "string",
                "description": "Type: `file`, default: `$id.$key.output.output`, example: `freebayes_out`. Output directory",
                "help_text": "Type: `file`, default: `$id.$key.output.output`, example: `freebayes_out`. Output directory"
            ,
                "default":"$id.$key.output.output"
            }
    

        ,
                "vcf": {
                "type":
                "string",
                "description": "Type: `string`, example: `snp.vcf`. Output VCF-format results to FILE",
                "help_text": "Type: `string`, example: `snp.vcf`. Output VCF-format results to FILE."
            
            }
    

}
},
    
    
    "nextflow input-output arguments" : {
    "title": "Nextflow input-output arguments",
    "type": "object",
    "description": "Input/output parameters for Nextflow itself. Please note that both publishDir and publish_dir are supported but at least one has to be configured.",
    "properties": {
    
        
                "publish_dir": {
                "type":
                "string",
                "description": "Type: `string`, required, example: `output/`. Path to an output directory",
                "help_text": "Type: `string`, required, example: `output/`. Path to an output directory."
            
            }
    

        

}
}
},
"allOf": [

    {
    "$ref": "#/definitions/input"
    },

    {
    "$ref": "#/definitions/output"
    },

    {
    "$ref": "#/definitions/nextflow input-output arguments"
    }
]
}
