{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "title": "grep_annotation_column",
  "description": "Perform a regex lookup on a column from the annotation matrices .obs or .var.\nThe annotation matrix can originate from either a modality, or all modalities (global .var or .obs).\n",
  "type": "object",
  "$defs": {
    "Dataset input": {
      "title": "Dataset input",
      "type": "object",
      "description": "Dataset input using nf-tower \"dataset\" or \"data explorer\". Allows for the input of multiple         parameter sets to initialise a Nextflow channel.",
      "properties": {
        "param_list": {
          "description": "Dataset input can either be a list of maps, a csv file, a json file, a yaml file, or simply a yaml                 blob. The names of the input fields (e.g. csv columns, json keys) need to be an exact match with the workflow input parameters.",
          "type": "string",
          "default": "",
          "format": "file-path",
          "mimetype": "text/csv"
        }
      }
    },
    "inputs": {
      "title": "Inputs",
      "type": "object",
      "description": "Arguments related to the input dataset.",
      "properties": {
        "input": {
          "type": "string",
          "format": "path",
          "exists": true,
          "description": "Path to the input .h5mu.",
          "help_text": "Type: `file`, multiple: `False`, required, direction: `input`, example: `\"sample_path\"`. "
        },
        "input_column": {
          "type": "string",
          "description": "Column to query",
          "help_text": "Type: `string`, multiple: `False`. "
        },
        "input_layer": {
          "type": "string",
          "description": "Input data to use when calculating fraction of observations that match with the query",
          "help_text": "Type: `string`, multiple: `False`. "
        },
        "modality": {
          "type": "string",
          "description": "Which modality to get the annotation matrix from.\n",
          "help_text": "Type: `string`, multiple: `False`, required, example: `\"rna\"`. "
        },
        "matrix": {
          "type": "string",
          "description": "Matrix to fetch the column from that will be searched.",
          "help_text": "Type: `string`, multiple: `False`, example: `\"var\"`, choices: ``var`, `obs``. ",
          "enum": [
            "var",
            "obs"
          ]
        }
      }
    },
    "outputs": {
      "title": "Outputs",
      "type": "object",
      "description": "Arguments related to how the output will be written.",
      "properties": {
        "output": {
          "type": "string",
          "format": "path",
          "description": "Location of the output MuData file.\n",
          "help_text": "Type: `file`, multiple: `False`, default: `\"$id.$key.output.h5mu\"`, direction: `output`, example: `\"output.h5mu\"`. ",
          "default": "$id.$key.output.h5mu"
        },
        "output_match_column": {
          "type": "string",
          "description": "Name of the column to write the result to.",
          "help_text": "Type: `string`, multiple: `False`, required. "
        },
        "output_fraction_column": {
          "type": "string",
          "description": "For the opposite axis, name of the column to write the fraction of \nobservations that matches to the pattern.\n",
          "help_text": "Type: `string`, multiple: `False`. "
        },
        "output_compression": {
          "type": "string",
          "description": "Compression format to use for the output AnnData and/or Mudata objects.\nBy default no compression is applied.\n",
          "help_text": "Type: `string`, multiple: `False`, example: `\"gzip\"`, choices: ``gzip`, `lzf``. ",
          "enum": [
            "gzip",
            "lzf"
          ]
        }
      }
    },
    "query options": {
      "title": "Query options",
      "type": "object",
      "description": "Options related to the query",
      "properties": {
        "regex_pattern": {
          "type": "string",
          "description": "Regex to use to match with the input column.",
          "help_text": "Type: `string`, multiple: `False`, required, example: `\"^[mM][tT]-\"`. "
        }
      }
    },
    "nextflow input-output arguments": {
      "title": "Nextflow input-output arguments",
      "type": "object",
      "description": "Input/output parameters for Nextflow itself. Please note that both publishDir and publish_dir are supported but at least one has to be configured.",
      "properties": {
        "publish_dir": {
          "type": "string",
          "description": "Path to an output directory.",
          "help_text": "Type: `string`, multiple: `False`, required, example: `\"output/\"`. "
        }
      }
    }
  },
  "allOf": [
    {
      "$ref": "#/$defs/inputs"
    },
    {
      "$ref": "#/$defs/outputs"
    },
    {
      "$ref": "#/$defs/query options"
    },
    {
      "$ref": "#/$defs/nextflow input-output arguments"
    }
  ]
}
