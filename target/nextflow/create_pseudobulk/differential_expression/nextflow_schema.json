{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "title": "differential_expression",
  "description": "Generation of pseudobulk samples from single-cell transcriptomics data,\nby aggregating raw gene expression counts from individual cells to create \nbulk-like expression profiles suitable for differential expression analysis\nwith methods designed for bulk differential expression analysis.\nNote that this componentonly considers factors as explanatory variables, \nand excludes covariates from the analysis.\n",
  "type": "object",
  "$defs": {
    "Dataset input": {
      "title": "Dataset input",
      "type": "object",
      "description": "Dataset input using nf-tower \"dataset\" or \"data explorer\". Allows for the input of multiple         parameter sets to initialise a Nextflow channel.",
      "properties": {
        "param_list": {
          "description": "Dataset input can either be a list of maps, a csv file, a json file, a yaml file, or simply a yaml                 blob. The names of the input fields (e.g. csv columns, json keys) need to be an exact match with the workflow input parameters.",
          "type": "string",
          "default": "",
          "format": "file-path",
          "mimetype": "text/csv"
        }
      }
    },
    "inputs": {
      "title": "Inputs",
      "type": "object",
      "description": "No description",
      "properties": {
        "input": {
          "type": "string",
          "format": "path",
          "exists": true,
          "description": "Input h5mu file.",
          "help_text": "Type: `file`, multiple: `False`, required, direction: `input`. "
        },
        "modality": {
          "type": "string",
          "description": "Which modality from the input MuData file to process.\n",
          "help_text": "Type: `string`, multiple: `False`, default: `\"rna\"`. ",
          "default": "rna"
        },
        "input_layer": {
          "type": "string",
          "description": "Input layer to use",
          "help_text": "Type: `string`, multiple: `False`. "
        },
        "obs_label": {
          "type": "string",
          "description": ".obs field containing the variable to group on",
          "help_text": "Type: `string`, multiple: `False`, required. "
        },
        "obs_groups": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": ".obs fields containing the experimental condition(s) to create pseudobulk samples for.",
          "help_text": "Type: `string`, multiple: `True`. "
        }
      }
    },
    "outputs": {
      "title": "Outputs",
      "type": "object",
      "description": "No description",
      "properties": {
        "output": {
          "type": "string",
          "format": "path",
          "description": "Output h5mu file containing the aggregated pseudobulk samples.",
          "help_text": "Type: `file`, multiple: `False`, required, default: `\"$id.$key.output\"`, direction: `output`. ",
          "default": "$id.$key.output"
        },
        "output_compression": {
          "type": "string",
          "description": "The compression format to be used on the output h5mu object.\n",
          "help_text": "Type: `string`, multiple: `False`, example: `\"gzip\"`, choices: ``gzip`, `lzf``. ",
          "enum": [
            "gzip",
            "lzf"
          ]
        }
      }
    },
    "arguments": {
      "title": "Arguments",
      "type": "object",
      "description": "No description",
      "properties": {
        "aggregation_method": {
          "type": "string",
          "description": "Method to aggregate the raw counts for pseudoreplicates",
          "help_text": "Type: `string`, multiple: `False`, default: `\"sum\"`, choices: ``sum`, `mean``. ",
          "enum": [
            "sum",
            "mean"
          ],
          "default": "sum"
        },
        "min_obs_per_sample": {
          "type": "integer",
          "description": "Minimum number of cells per pseudobulk sample.",
          "help_text": "Type: `integer`, multiple: `False`, default: `30`. ",
          "default": 30
        },
        "random_state": {
          "type": "integer",
          "description": "The random seed for sampling.\n",
          "help_text": "Type: `integer`, multiple: `False`, default: `0`. ",
          "default": 0
        },
        "obs_cell_count": {
          "type": "string",
          "description": "The .obs field to store the number of observations per pseudobulk sample.",
          "help_text": "Type: `string`, multiple: `False`, default: `\"n_cells\"`. ",
          "default": "n_cells"
        }
      }
    },
    "nextflow input-output arguments": {
      "title": "Nextflow input-output arguments",
      "type": "object",
      "description": "Input/output parameters for Nextflow itself. Please note that both publishDir and publish_dir are supported but at least one has to be configured.",
      "properties": {
        "publish_dir": {
          "type": "string",
          "description": "Path to an output directory.",
          "help_text": "Type: `string`, multiple: `False`, required, example: `\"output/\"`. "
        }
      }
    }
  },
  "allOf": [
    {
      "$ref": "#/$defs/inputs"
    },
    {
      "$ref": "#/$defs/outputs"
    },
    {
      "$ref": "#/$defs/arguments"
    },
    {
      "$ref": "#/$defs/nextflow input-output arguments"
    }
  ]
}
