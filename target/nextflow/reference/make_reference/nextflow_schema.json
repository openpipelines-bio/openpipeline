{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "title": "make_reference",
  "description": "Preprocess and build a transcriptome reference.\n\nExample input files are:\n  - `genome_fasta`: https://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_41/GRCh38.primary_assembly.genome.fa.gz\n  - `transcriptome_gtf`: https://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_41/gencode.v41.annotation.gtf.gz\n  - `ercc`: https://assets.thermofisher.com/TFS-Assets/LSG/manuals/ERCC92.zip\n",
  "type": "object",
  "$defs": {
    "Dataset input": {
      "title": "Dataset input",
      "type": "object",
      "description": "Dataset input using nf-tower \"dataset\" or \"data explorer\". Allows for the input of multiple         parameter sets to initialise a Nextflow channel.",
      "properties": {
        "param_list": {
          "description": "Dataset input can either be a list of maps, a csv file, a json file, a yaml file, or simply a yaml                 blob. The names of the input fields (e.g. csv columns, json keys) need to be an exact match with the workflow input parameters.",
          "default": "",
          "format": "file-path",
          "mimetype": "text/csv",
          "pattern": "^\\S+\\.csv$"
        }
      }
    },
    "arguments": {
      "title": "Arguments",
      "type": "object",
      "description": "No description",
      "properties": {
        "genome_fasta": {
          "type": "string",
          "format": "path",
          "exists": true,
          "description": "Reference genome fasta",
          "help_text": "Type: `file`, multiple: `False`, required, direction: `input`, example: `genome_fasta.fa.gz`. "
        },
        "transcriptome_gtf": {
          "type": "string",
          "format": "path",
          "exists": true,
          "description": "Reference transcriptome annotation",
          "help_text": "Type: `file`, multiple: `False`, required, direction: `input`, example: `transcriptome.gtf.gz`. "
        },
        "ercc": {
          "type": "string",
          "format": "path",
          "description": "ERCC sequence and annotation file",
          "help_text": "Type: `file`, multiple: `False`, direction: `input`, example: `ercc.zip`. "
        },
        "subset_regex": {
          "type": "string",
          "description": "Will subset the reference chromosomes using the given regex",
          "help_text": "Type: `string`, multiple: `False`, example: `(ERCC-00002|chr1)`. "
        },
        "output_fasta": {
          "type": "string",
          "format": "path",
          "description": "Output genome sequence fasta",
          "help_text": "Type: `file`, multiple: `False`, required, default: `$id.$key.output_fasta.gz`, direction: `output`, example: `genome_sequence.fa.gz`. ",
          "default": "$id.$key.output_fasta.gz"
        },
        "output_gtf": {
          "type": "string",
          "format": "path",
          "description": "Output transcriptome annotation gtf",
          "help_text": "Type: `file`, multiple: `False`, required, default: `$id.$key.output_gtf.gz`, direction: `output`, example: `transcriptome_annotation.gtf.gz`. ",
          "default": "$id.$key.output_gtf.gz"
        }
      }
    },
    "nextflow input-output arguments": {
      "title": "Nextflow input-output arguments",
      "type": "object",
      "description": "Input/output parameters for Nextflow itself. Please note that both publishDir and publish_dir are supported but at least one has to be configured.",
      "properties": {
        "publish_dir": {
          "type": "string",
          "description": "Path to an output directory",
          "help_text": "Type: `string`, multiple: `False`, required, example: `output/`. "
        }
      }
    }
  },
  "allOf": [
    {
      "$ref": "#/$defs/arguments"
    },
    {
      "$ref": "#/$defs/nextflow input-output arguments"
    }
  ]
}
