{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "title": "build_cellranger_arc_reference",
  "description": "Build a Cell Ranger-arc and -atac compatible reference folder from user-supplied genome FASTA and gene GTF files. Creates a new folder named after the genome.",
  "type": "object",
  "$defs": {
    "Dataset input": {
      "title": "Dataset input",
      "type": "object",
      "description": "Dataset input using nf-tower \"dataset\" or \"data explorer\". Allows for the input of multiple         parameter sets to initialise a Nextflow channel.",
      "properties": {
        "param_list": {
          "description": "Dataset input can either be a list of maps, a csv file, a json file, a yaml file, or simply a yaml                 blob. The names of the input fields (e.g. csv columns, json keys) need to be an exact match with the workflow input parameters.",
          "default": "",
          "type": "object",
          "format": "file-path",
          "mimetype": "text/csv"
        }
      }
    },
    "arguments": {
      "title": "Arguments",
      "type": "object",
      "description": "No description",
      "properties": {
        "genome_fasta": {
          "type": "string",
          "format": "path",
          "exists": true,
          "description": "Reference genome fasta.",
          "help_text": "Type: `file`, multiple: `False`, required, direction: `input`, example: `\"genome_sequence.fa.gz\"`. "
        },
        "annotation_gtf": {
          "type": "string",
          "format": "path",
          "exists": true,
          "description": "Reference annotation.",
          "help_text": "Type: `file`, multiple: `False`, required, direction: `input`, example: `\"annotation.gtf.gz\"`. "
        },
        "motifs_file": {
          "type": "string",
          "format": "path",
          "description": "Transcription factor motifs in JASPAR format",
          "help_text": "Type: `file`, multiple: `False`, direction: `input`, example: `\"JASPAR2024_CORE_non-redundant_pfms_jaspar.txt.modified\"`. "
        },
        "non_nuclear_contigs": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Name(s) of contig(s) that do not have any chromatin structure, for example, mitochondria or plastids",
          "help_text": "Type: `string`, multiple: `True`, default: `[\"chrM\"]`, example: `[\"chrM\"]`. ",
          "default": [
            "chrM"
          ]
        },
        "output": {
          "type": "string",
          "format": "path",
          "description": "Output folder",
          "help_text": "Type: `file`, multiple: `False`, required, default: `\"$id.$key.output\"`, direction: `output`, example: `\"cellranger_reference\"`. ",
          "default": "$id.$key.output"
        },
        "genome": {
          "type": "string",
          "description": "Name of the genome",
          "help_text": "Type: `string`, multiple: `False`, required, default: `\"output\"`, example: `\"GRCh38\"`. ",
          "default": "output"
        },
        "organism": {
          "type": "string",
          "description": "Name of the organism",
          "help_text": "Type: `string`, multiple: `False`. "
        },
        "subset_regex": {
          "type": "string",
          "description": "Will subset the reference chromosomes using the given regex.",
          "help_text": "Type: `string`, multiple: `False`, example: `\"(ERCC-00002|chr1)\"`. "
        }
      }
    },
    "nextflow input-output arguments": {
      "title": "Nextflow input-output arguments",
      "type": "object",
      "description": "Input/output parameters for Nextflow itself. Please note that both publishDir and publish_dir are supported but at least one has to be configured.",
      "properties": {
        "publish_dir": {
          "type": "string",
          "description": "Path to an output directory.",
          "help_text": "Type: `string`, multiple: `False`, required, example: `\"output/\"`. "
        }
      }
    }
  },
  "allOf": [
    {
      "$ref": "#/$defs/arguments"
    },
    {
      "$ref": "#/$defs/nextflow input-output arguments"
    }
  ]
}
