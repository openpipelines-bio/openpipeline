name: "singler"
namespace: "annotate"
version: "integration_build"
authors:
- name: "Dorien Roosen"
  roles:
  - "author"
  info:
    role: "Core Team Member"
    links:
      email: "dorien@data-intuitive.com"
      github: "dorien-er"
      linkedin: "dorien-roosen"
    organizations:
    - name: "Data Intuitive"
      href: "https://www.data-intuitive.com"
      role: "Data Scientist"
- name: "Weiwei Schultz"
  roles:
  - "contributor"
  info:
    role: "Contributor"
    organizations:
    - name: "Janssen R&D US"
      role: "Associate Director Data Sciences"
argument_groups:
- name: "Inputs"
  description: "Input dataset (query) arguments"
  arguments:
  - type: "file"
    name: "--input"
    alternatives:
    - "-i"
    description: "The input (query) data to be labeled. Should be a .h5mu file."
    info: null
    example:
    - "input.h5mu"
    must_exist: true
    create_parent: true
    required: true
    direction: "input"
    multiple: false
    multiple_sep: ";"
  - type: "string"
    name: "--modality"
    description: "Which modality to process."
    info: null
    default:
    - "rna"
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ";"
  - type: "string"
    name: "--input_layer"
    description: "The layer in the input data containing log normalized counts to\
      \ be used for cell type annotation if .X is not to be used."
    info: null
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ";"
  - type: "string"
    name: "--input_var_gene_names"
    description: "The name of the adata .var column in the input data containing gene\
      \ names; when no gene_name_layer is provided, the var index will be used.\n"
    info: null
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ";"
  - type: "string"
    name: "--input_obs_clusters"
    description: "The name of the adata .obs column containing cluster identities\
      \ of the observations. \nIf provided, annoation is performed on the aggregated\
      \ cluster profiles, \notherwise it defaults to annotation per observation.\n"
    info: null
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ";"
  - type: "integer"
    name: "--input_reference_gene_overlap"
    description: "The minimum number of genes present in both the reference and query\
      \ datasets.\n"
    info: null
    default:
    - 100
    required: false
    min: 1
    direction: "input"
    multiple: false
    multiple_sep: ";"
- name: "Reference"
  description: "Arguments related to the reference dataset."
  arguments:
  - type: "file"
    name: "--reference"
    description: "The reference data to train the CellTypist classifiers on. Only\
      \ required if a pre-trained --model is not provided."
    info: null
    example:
    - "reference.h5mu"
    must_exist: true
    create_parent: true
    required: true
    direction: "input"
    multiple: false
    multiple_sep: ";"
  - type: "string"
    name: "--reference_layer"
    description: "The layer in the reference data containing lognormalized couns to\
      \ be used for cell type annotation if .X is not to be used. Data are expected\
      \ to be processed in the same way as the --input query dataset."
    info: null
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ";"
  - type: "string"
    name: "--reference_obs_target"
    description: "The name of the adata obs column in the reference data containing\
      \ cell type annotations."
    info: null
    required: true
    direction: "input"
    multiple: false
    multiple_sep: ";"
  - type: "string"
    name: "--reference_var_gene_names"
    description: "The name of the adata var column in the reference data containing\
      \ gene names; when no gene_name_layer is provided, the var index will be used.\n"
    info: null
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ";"
  - type: "string"
    name: "--reference_var_input"
    description: ".var column containing a boolean mask corresponding to genes to\
      \ be used for marker selection. By default, do not subset genes.\n"
    info: null
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ";"
- name: "Arguments"
  description: "Arguments related to the training of and classification with the SingleR\
    \ model"
  arguments:
  - type: "integer"
    name: "--de_n_genes"
    description: "The number of differentially expressed genes across labels to be\
      \ calculated from the reference.\nDefaults to 500 * (2/3) ^ log2(N) where N\
      \ is the number of unique labels when if `--de_method` is set to `classic`,\n\
      otherwise, defaults to 10.\n"
    info: null
    required: false
    min: 1
    direction: "input"
    multiple: false
    multiple_sep: ";"
  - type: "string"
    name: "--de_method"
    description: "Method to detect differentially expressed genes between pairs of\
      \ labels."
    info: null
    default:
    - "classic"
    required: false
    choices:
    - "classic"
    - "t"
    - "wilcox"
    direction: "input"
    multiple: false
    multiple_sep: ";"
  - type: "double"
    name: "--quantile"
    description: "The quantile of the correlation distribution to use to compute the\
      \ score per label."
    info: null
    default:
    - 0.8
    required: false
    min: 0.0
    max: 1.0
    direction: "input"
    multiple: false
    multiple_sep: ";"
  - type: "boolean"
    name: "--fine_tune"
    description: "Whether finetuning should be performed to improve the resolution.\
      \ \nIf set to True, an additional finetuning step is performed after initial\
      \ classification, \nnew marker genes are calculated based on all cells with\
      \ a score higher then the maximum score minus `--fine_tuning_thershold`,\nand\
      \ the calculation of the scores is repeated.\n"
    info: null
    default:
    - true
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ";"
  - type: "double"
    name: "--fine_tuning_threshold"
    description: "The maximum difference from the maximum correlation to use in fine-tuning\n"
    info: null
    default:
    - 0.05
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ";"
  - type: "boolean"
    name: "--prune"
    description: "Whether label pruning should be performed. If set to True, an additional\
      \ output .obs field `--output_obs_pruned_predictions` will be added to the `--output`,\
      \ containing labels where 'low-quality' labels are replaced with NA's. Labels\
      \ are considered 'low-quality' when their delta score (stored in `--output_obs_delta_next`)\
      \ fall more than 3 median absolute deviations below the median for that label\
      \ type."
    info: null
    default:
    - true
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ";"
- name: "Outputs"
  description: "Output arguments."
  arguments:
  - type: "file"
    name: "--output"
    description: "Output h5mu file."
    info: null
    example:
    - "output.h5mu"
    must_exist: true
    create_parent: true
    required: false
    direction: "output"
    multiple: false
    multiple_sep: ";"
  - type: "string"
    name: "--output_obs_predictions"
    description: "In which `.obs` slot to store the predicted labels. If `--fine_tune\
      \ False`, this is based only on the maximum entry in `--output_obsm_scores`.\n"
    info: null
    default:
    - "singler_pred"
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ";"
  - type: "string"
    name: "--output_obs_probability"
    description: "In which `.obs` slots to store the probability of the predicted\
      \ labels.\n"
    info: null
    default:
    - "singler_probability"
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ";"
  - type: "string"
    name: "--output_obs_delta_next"
    description: "In which `.obs` slot to store the delta between the best and next-best\
      \ score. If `--fine_tune True`, this is reported for scores after fine-tuning.\n"
    info: null
    default:
    - "singler_delta_next"
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ";"
  - type: "string"
    name: "--output_obs_pruned_predictions"
    description: "In which `.obs` slot to store the pruned labels, where low-quality\
      \ labels are replaced with NA's. Only added if `--prune True`.\n"
    info: null
    default:
    - "singler_pruned_labels"
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ";"
  - type: "string"
    name: "--output_obsm_scores"
    description: "In which `.obsm` slot to store the matrix of prediction correlations\
      \ at the specified quantile for each label (column) in each cell (row).\n"
    info: null
    default:
    - "singler_scores"
    required: false
    direction: "input"
    multiple: false
    multiple_sep: ";"
  - type: "string"
    name: "--output_compression"
    description: "Compression format to use for the output AnnData and/or Mudata objects.\n\
      By default no compression is applied.\n"
    info: null
    example:
    - "gzip"
    required: false
    choices:
    - "gzip"
    - "lzf"
    direction: "input"
    multiple: false
    multiple_sep: ";"
resources:
- type: "r_script"
  path: "script.R"
  is_executable: true
- type: "file"
  path: "nextflow_labels.config"
  dest: "nextflow_labels.config"
description: "SingleR performs reference-based cell type annotation for single-cell\
  \ RNA-seq data \nby computing Spearman correlations between test cells and reference\
  \ samples with known labels, \nusing marker genes to assign the most similar cell\
  \ type label to each new cell.\n"
test_resources:
- type: "python_script"
  path: "test.py"
  is_executable: true
- type: "file"
  path: "TS_Blood_filtered.h5mu"
- type: "file"
  path: "pbmc_1k_protein_v3_filtered_feature_bc_matrix.h5mu"
info: null
status: "enabled"
scope:
  image: "public"
  target: "public"
license: "MIT"
links:
  repository: "https://github.com/openpipelines-bio/openpipeline"
  docker_registry: "ghcr.io"
runners:
- type: "executable"
  id: "executable"
  docker_setup_strategy: "ifneedbepullelsecachedbuild"
- type: "nextflow"
  id: "nextflow"
  directives:
    label:
    - "lowmem"
    - "lowcpu"
    tag: "$id"
  auto:
    simplifyInput: true
    simplifyOutput: false
    transcript: false
    publish: false
  config:
    labels:
      mem1gb: "memory = 1000000000.B"
      mem2gb: "memory = 2000000000.B"
      mem5gb: "memory = 5000000000.B"
      mem10gb: "memory = 10000000000.B"
      mem20gb: "memory = 20000000000.B"
      mem50gb: "memory = 50000000000.B"
      mem100gb: "memory = 100000000000.B"
      mem200gb: "memory = 200000000000.B"
      mem500gb: "memory = 500000000000.B"
      mem1tb: "memory = 1000000000000.B"
      mem2tb: "memory = 2000000000000.B"
      mem5tb: "memory = 5000000000000.B"
      mem10tb: "memory = 10000000000000.B"
      mem20tb: "memory = 20000000000000.B"
      mem50tb: "memory = 50000000000000.B"
      mem100tb: "memory = 100000000000000.B"
      mem200tb: "memory = 200000000000000.B"
      mem500tb: "memory = 500000000000000.B"
      mem1gib: "memory = 1073741824.B"
      mem2gib: "memory = 2147483648.B"
      mem4gib: "memory = 4294967296.B"
      mem8gib: "memory = 8589934592.B"
      mem16gib: "memory = 17179869184.B"
      mem32gib: "memory = 34359738368.B"
      mem64gib: "memory = 68719476736.B"
      mem128gib: "memory = 137438953472.B"
      mem256gib: "memory = 274877906944.B"
      mem512gib: "memory = 549755813888.B"
      mem1tib: "memory = 1099511627776.B"
      mem2tib: "memory = 2199023255552.B"
      mem4tib: "memory = 4398046511104.B"
      mem8tib: "memory = 8796093022208.B"
      mem16tib: "memory = 17592186044416.B"
      mem32tib: "memory = 35184372088832.B"
      mem64tib: "memory = 70368744177664.B"
      mem128tib: "memory = 140737488355328.B"
      mem256tib: "memory = 281474976710656.B"
      mem512tib: "memory = 562949953421312.B"
      cpu1: "cpus = 1"
      cpu2: "cpus = 2"
      cpu5: "cpus = 5"
      cpu10: "cpus = 10"
      cpu20: "cpus = 20"
      cpu50: "cpus = 50"
      cpu100: "cpus = 100"
      cpu200: "cpus = 200"
      cpu500: "cpus = 500"
      cpu1000: "cpus = 1000"
    script:
    - "includeConfig(\"nextflow_labels.config\")"
  debug: false
  container: "docker"
engines:
- type: "docker"
  id: "docker"
  image: "rocker/r2u:22.04"
  target_tag: "integration_build"
  namespace_separator: "/"
  setup:
  - type: "docker"
    env:
    - "RETICULATE_PYTHON=/usr/bin/python"
  - type: "apt"
    packages:
    - "libhdf5-dev"
    - "python3"
    - "python3-pip"
    - "python3-dev"
    - "python-is-python3"
    interactive: false
  - type: "r"
    cran:
    - "anndata"
    - "reticulate"
    - "SingleR"
    bioc:
    - "scrapper"
    - "bit64"
    bioc_force_install: false
    warnings_as_errors: true
  - type: "python"
    user: false
    packages:
    - "anndata~=0.11.1"
    - "mudata~=0.3.1"
    script:
    - "exec(\"try:\\n  import awkward\\nexcept ModuleNotFoundError:\\n  exit(0)\\\
      nelse:  exit(1)\")"
    upgrade: true
  test_setup:
  - type: "apt"
    packages:
    - "git"
    interactive: false
  - type: "python"
    user: false
    packages:
    - "viashpy==0.8.0"
    github:
    - "openpipelines-bio/core#subdirectory=packages/python/openpipeline_testutils"
    upgrade: true
  entrypoint: []
  cmd: null
build_info:
  config: "src/annotate/singler/config.vsh.yaml"
  runner: "nextflow"
  engine: "docker"
  output: "target/nextflow/annotate/singler"
  executable: "target/nextflow/annotate/singler/main.nf"
  viash_version: "0.9.4"
  git_commit: "a881f17bae8991918e74acd3eb629eee021f5cff"
  git_remote: "https://github.com/openpipelines-bio/openpipeline"
package_config:
  name: "openpipeline"
  summary: "Best-practice workflows for single-cell multi-omics analyses.\n"
  description: "OpenPipelines are extensible single cell analysis pipelines for reproducible\
    \ and large-scale single cell processing using [Viash](https://viash.io) and [Nextflow](https://www.nextflow.io/).\n\
    \nIn terms of workflows, the following has been made available, but keep in mind\
    \ that\nindividual tools and functionality can be executed as standalone components\
    \ as well.\n\n  * Demultiplexing: conversion of raw sequencing data to FASTQ objects.\n\
    \  * Ingestion: Read mapping and generating a count matrix.\n  * Single sample\
    \ processing: cell filtering and doublet detection.\n  * Multisample processing:\
    \ Count transformation, normalization, QC metric calulations.\n  * Integration:\
    \ Clustering, integration and batch correction using single and multimodal methods.\n\
    \  * Downstream analysis workflows\n"
  info:
    test_resources:
    - type: "s3"
      path: "s3://openpipelines-data"
      dest: "resources_test"
    nextflow_labels_ci:
    - path: "src/workflows/utils/labels_ci.config"
      description: "Adds the correct memory and CPU labels when running on the Viash\
        \ Hub CI."
  viash_version: "0.9.4"
  source: "src"
  target: "target"
  config_mods:
  - ".resources += {path: '/src/workflows/utils/labels.config', dest: 'nextflow_labels.config'}\n\
    .runners[.type == 'nextflow'].config.script := 'includeConfig(\"nextflow_labels.config\"\
    )'"
  - ".version := \"integration_build\""
  - ".engines[.type == 'docker'].target_tag := 'integration_build'"
  keywords:
  - "single-cell"
  - "multimodal"
  license: "MIT"
  organization: "openpipelines-bio"
  links:
    repository: "https://github.com/openpipelines-bio/openpipeline"
    docker_registry: "ghcr.io"
    homepage: "https://openpipelines.bio"
    documentation: "https://openpipelines.bio/fundamentals"
    issue_tracker: "https://github.com/openpipelines-bio/openpipeline/issues"
