{
"$schema": "http://json-schema.org/draft-07/schema",
"title": "popv",
"description": "Performs popular major vote cell typing on single cell sequence data using multiple algorithms. Note that this is a one-shot version of PopV.",
"type": "object",
"definitions": {

    
    "Dataset input": {
        "title": "Dataset input",
        "type": "object",
        "description": "Dataset input using nf-tower \"dataset\" or \"data explorer\". Allows for the input of multiple         parameter sets to initialise a Nextflow channel.",
        "properties": {
            "param_list": {
                "description": "Dataset input can either be a list of maps, a csv file, a json file, a yaml file, or simply a yaml                 blob. The names of the input fields (e.g. csv columns, json keys) need to be an exact match with the workflow input parameters.",
                "default": "",
                "format": "file-path",
                "mimetype": "text/csv",
                "pattern": "^\\S+\\.csv$"
            }
        }
    },

    
    
    "inputs" : {
    "title": "Inputs",
    "type": "object",
    "description": "Arguments related to the input (aka query) dataset.",
    "properties": {
    
        
                "input": {
                "type":
                "string",
                "description": "Type: `file`, required, example: `input.h5mu`. Input h5mu file",
                "help_text": "Type: `file`, required, example: `input.h5mu`. Input h5mu file."
            
            }
    

        ,
                "modality": {
                "type":
                "string",
                "description": "Type: `string`, default: `rna`. Which modality to process",
                "help_text": "Type: `string`, default: `rna`. Which modality to process."
            ,
                "default":"rna"
            }
    

        ,
                "input_layer": {
                "type":
                "string",
                "description": "Type: `string`. Which layer to use",
                "help_text": "Type: `string`. Which layer to use. If no value is provided, the counts are assumed to be in the `.X` slot. Otherwise, count data is expected to be in `.layers[input_layer]`."
            
            }
    

        ,
                "input_obs_batch": {
                "type":
                "string",
                "description": "Type: `string`. Key in obs field of input adata for batch information",
                "help_text": "Type: `string`. Key in obs field of input adata for batch information. If no value is provided, batch label is assumed to be unknown."
            
            }
    

        ,
                "input_var_subset": {
                "type":
                "string",
                "description": "Type: `string`. Subset the input object with this column",
                "help_text": "Type: `string`. Subset the input object with this column."
            
            }
    

        ,
                "input_obs_label": {
                "type":
                "string",
                "description": "Type: `string`. Key in obs field of input adata for label information",
                "help_text": "Type: `string`. Key in obs field of input adata for label information. This is only used for training scANVI. Unlabelled cells should be set to `\"unknown_celltype_label\"`."
            
            }
    

        ,
                "unknown_celltype_label": {
                "type":
                "string",
                "description": "Type: `string`, default: `unknown`. If `input_obs_label` is specified, cells with this value will be treated as unknown and will be predicted by the model",
                "help_text": "Type: `string`, default: `unknown`. If `input_obs_label` is specified, cells with this value will be treated as unknown and will be predicted by the model."
            ,
                "default":"unknown"
            }
    

}
},
    
    
    "outputs" : {
    "title": "Outputs",
    "type": "object",
    "description": "Output arguments.",
    "properties": {
    
        
                "output": {
                "type":
                "string",
                "description": "Type: `file`, required, default: `$id.$key.output.h5mu`, example: `output.h5mu`. Output h5mu file",
                "help_text": "Type: `file`, required, default: `$id.$key.output.h5mu`, example: `output.h5mu`. Output h5mu file."
            ,
                "default":"$id.$key.output.h5mu"
            }
    

        ,
                "output_compression": {
                "type":
                "string",
                "description": "Type: `string`, example: `gzip`, choices: ``gzip`, `lzf``. ",
                "help_text": "Type: `string`, example: `gzip`, choices: ``gzip`, `lzf``. ",
                "enum": ["gzip", "lzf"]
            
            
            }
    

}
},
    
    
    "arguments" : {
    "title": "Arguments",
    "type": "object",
    "description": "Other arguments.",
    "properties": {
    
        
                "methods": {
                "type":
                "string",
                "description": "Type: List of `string`, required, example: `knn_on_scvi;scanvi`, multiple_sep: `\";\"`, choices: ``celltypist`, `knn_on_bbknn`, `knn_on_scanorama`, `knn_on_scvi`, `onclass`, `rf`, `scanvi`, `svm``. Methods to call cell types",
                "help_text": "Type: List of `string`, required, example: `knn_on_scvi;scanvi`, multiple_sep: `\";\"`, choices: ``celltypist`, `knn_on_bbknn`, `knn_on_scanorama`, `knn_on_scvi`, `onclass`, `rf`, `scanvi`, `svm``. Methods to call cell types. By default, runs to knn_on_scvi and scanvi."
            
            }
    

}
},
    
    
    "reference" : {
    "title": "Reference",
    "type": "object",
    "description": "Arguments related to the reference dataset.",
    "properties": {
    
        
                "reference": {
                "type":
                "string",
                "description": "Type: `file`, required, example: `TS_Bladder_filtered.h5ad`. User-provided reference tissue",
                "help_text": "Type: `file`, required, example: `TS_Bladder_filtered.h5ad`. User-provided reference tissue. The data that will be used as reference to call cell types."
            
            }
    

        ,
                "reference_layer": {
                "type":
                "string",
                "description": "Type: `string`. Which layer to use",
                "help_text": "Type: `string`. Which layer to use. If no value is provided, the counts are assumed to be in the `.X` slot. Otherwise, count data is expected to be in `.layers[reference_layer]`."
            
            }
    

        ,
                "reference_obs_label": {
                "type":
                "string",
                "description": "Type: `string`, default: `cell_ontology_class`. Key in obs field of reference AnnData with cell-type information",
                "help_text": "Type: `string`, default: `cell_ontology_class`. Key in obs field of reference AnnData with cell-type information."
            ,
                "default":"cell_ontology_class"
            }
    

        ,
                "reference_obs_batch": {
                "type":
                "string",
                "description": "Type: `string`, default: `donor_assay`. Key in obs field of input adata for batch information",
                "help_text": "Type: `string`, default: `donor_assay`. Key in obs field of input adata for batch information."
            ,
                "default":"donor_assay"
            }
    

}
},
    
    
    "nextflow input-output arguments" : {
    "title": "Nextflow input-output arguments",
    "type": "object",
    "description": "Input/output parameters for Nextflow itself. Please note that both publishDir and publish_dir are supported but at least one has to be configured.",
    "properties": {
    
        
                "publish_dir": {
                "type":
                "string",
                "description": "Type: `string`, required, example: `output/`. Path to an output directory",
                "help_text": "Type: `string`, required, example: `output/`. Path to an output directory."
            
            }
    

        

}
}
},
"allOf": [

    {
    "$ref": "#/definitions/inputs"
    },

    {
    "$ref": "#/definitions/outputs"
    },

    {
    "$ref": "#/definitions/arguments"
    },

    {
    "$ref": "#/definitions/reference"
    },

    {
    "$ref": "#/definitions/nextflow input-output arguments"
    }
]
}
