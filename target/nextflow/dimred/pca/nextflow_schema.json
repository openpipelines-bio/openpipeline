{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "title": "pca",
  "description": "Computes PCA coordinates, loadings and variance decomposition. Uses the implementation of scikit-learn [Pedregosa11].\n",
  "type": "object",
  "$defs": {
    "Dataset input": {
      "title": "Dataset input",
      "type": "object",
      "description": "Dataset input using nf-tower \"dataset\" or \"data explorer\". Allows for the input of multiple         parameter sets to initialise a Nextflow channel.",
      "properties": {
        "param_list": {
          "description": "Dataset input can either be a list of maps, a csv file, a json file, a yaml file, or simply a yaml                 blob. The names of the input fields (e.g. csv columns, json keys) need to be an exact match with the workflow input parameters.",
          "type": "string",
          "default": "",
          "format": "file-path",
          "mimetype": "text/csv"
        }
      }
    },
    "arguments": {
      "title": "Arguments",
      "type": "object",
      "description": "No description",
      "properties": {
        "input": {
          "type": "string",
          "format": "path",
          "exists": true,
          "description": "Input h5mu file",
          "help_text": "Type: `file`, multiple: `False`, required, direction: `input`, example: `\"input.h5mu\"`. "
        },
        "modality": {
          "type": "string",
          "description": "Which modality from the input MuData file to process.\n",
          "help_text": "Type: `string`, multiple: `False`, default: `\"rna\"`. ",
          "default": "rna"
        },
        "layer": {
          "type": "string",
          "description": "Use specified layer for expression values instead of the .X object from the modality.",
          "help_text": "Type: `string`, multiple: `False`. "
        },
        "var_input": {
          "type": "string",
          "description": "Column name in .var matrix that will be used to select which genes to run the PCA on.",
          "help_text": "Type: `string`, multiple: `False`, example: `\"filter_with_hvg\"`. "
        },
        "output": {
          "type": "string",
          "format": "path",
          "description": "Output h5mu file.",
          "help_text": "Type: `file`, multiple: `False`, required, default: `\"$id.$key.output.h5mu\"`, direction: `output`, example: `\"output.h5mu\"`. ",
          "default": "$id.$key.output.h5mu"
        },
        "obsm_output": {
          "type": "string",
          "description": "In which .obsm slot to store the resulting embedding.",
          "help_text": "Type: `string`, multiple: `False`, default: `\"X_pca\"`. ",
          "default": "X_pca"
        },
        "varm_output": {
          "type": "string",
          "description": "In which .varm slot to store the resulting loadings matrix.",
          "help_text": "Type: `string`, multiple: `False`, default: `\"pca_loadings\"`. ",
          "default": "pca_loadings"
        },
        "uns_output": {
          "type": "string",
          "description": "In which .uns slot to store the resulting variance objects.",
          "help_text": "Type: `string`, multiple: `False`, default: `\"pca_variance\"`. ",
          "default": "pca_variance"
        },
        "num_components": {
          "type": "integer",
          "description": "Number of principal components to compute",
          "help_text": "Type: `integer`, multiple: `False`, example: `25`. "
        },
        "overwrite": {
          "type": "boolean",
          "description": "Allow overwriting .obsm, .varm and .uns slots.",
          "help_text": "Type: `boolean_true`, multiple: `False`, default: `false`. ",
          "default": false
        },
        "output_compression": {
          "type": "string",
          "description": "Compression format to use for the output AnnData and/or Mudata objects.\nBy default no compression is applied.\n",
          "help_text": "Type: `string`, multiple: `False`, example: `\"gzip\"`, choices: ``gzip`, `lzf``. ",
          "enum": [
            "gzip",
            "lzf"
          ]
        }
      }
    },
    "nextflow input-output arguments": {
      "title": "Nextflow input-output arguments",
      "type": "object",
      "description": "Input/output parameters for Nextflow itself. Please note that both publishDir and publish_dir are supported but at least one has to be configured.",
      "properties": {
        "publish_dir": {
          "type": "string",
          "description": "Path to an output directory.",
          "help_text": "Type: `string`, multiple: `False`, required, example: `\"output/\"`. "
        }
      }
    }
  },
  "allOf": [
    {
      "$ref": "#/$defs/arguments"
    },
    {
      "$ref": "#/$defs/nextflow input-output arguments"
    }
  ]
}
