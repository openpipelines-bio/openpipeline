functionality:
  name: "knn"
  namespace: "labels_transfer"
  version: "1.0.5"
  authors:
  - name: "Vladimir Shitov"
    roles:
    - "author"
    info:
      role: "Contributor"
      links:
        email: "vladimir.shitov@helmholtz-muenchen.de"
        github: "vladimirshitov"
        orcid: "0000-0002-1960-8812"
        linkedin: "vladimir-shitov-9a659513b"
      organizations:
      - name: "Helmholtz Munich"
        href: "https://www.helmholtz-munich.de"
        role: "PhD Candidate"
  argument_groups:
  - name: "Input dataset (query) arguments"
    arguments:
    - type: "file"
      name: "--input"
      description: "The query data to transfer the labels to. Should be a .h5mu file."
      info:
        label: "Query"
        file_format:
          type: "h5mu"
          mod:
            rna:
              description: "Modality in AnnData format containing RNA data."
              required: true
              slots:
                X:
                  type: "double"
                  name: "features"
                  required: false
                  description: "The expression data to use for the classifier's inference,\
                    \ if `--input_obsm_features` argument is not provided.\n"
                obsm:
                - type: "double"
                  name: "features"
                  example: "X_integrated_scanvi"
                  required: false
                  description: "The embedding to use for the classifier's inference.\
                    \ Override using the `--input_obsm_features` argument. If not\
                    \ provided, the `.X` slot will be used instead.\nMake sure that\
                    \ embedding was obtained in the same way as the reference embedding\
                    \ (e.g. by the same model or preprocessing).\n"
      must_exist: true
      create_parent: true
      required: true
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "string"
      name: "--modality"
      description: "Which modality to use."
      info: null
      default:
      - "rna"
      required: false
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "string"
      name: "--input_obsm_features"
      description: "The `.obsm` key of the embedding to use for the classifier's inference.\
        \ If not provided, the `.X` slot will be used instead.\nMake sure that embedding\
        \ was obtained in the same way as the reference embedding (e.g. by the same\
        \ model or preprocessing).\n"
      info: null
      example:
      - "X_integrated_scanvi"
      required: false
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
  - name: "Reference dataset arguments"
    arguments:
    - type: "file"
      name: "--reference"
      description: "The reference data to train classifiers on."
      info:
        label: "Reference"
        file_format:
          type: "h5ad"
          X:
            type: "double"
            name: "features"
            required: false
            description: "The expression data to use for the classifier's training,\
              \ if `--input_obsm_features` argument is not provided.\n"
          obsm:
          - type: "double"
            name: "features"
            example: "X_integrated_scanvi"
            description: "The embedding to use for the classifier's training. Override\
              \ using the `--reference_obsm_features` argument.\nMake sure that embedding\
              \ was obtained in the same way as the query embedding (e.g. by the same\
              \ model or preprocessing).\n"
            required: true
          obs:
          - type: "string"
            name: "targets"
            multiple: true
            example:
            - "ann_level_1"
            - "ann_level_2"
            - "ann_level_3"
            - "ann_level_4"
            - "ann_level_5"
            - "ann_finest_level"
            description: "The target labels to transfer. Override using the `--reference_obs_targets`\
              \ argument."
            required: true
      example:
      - "https:/zenodo.org/record/6337966/files/HLCA_emb_and_metadata.h5ad"
      must_exist: true
      create_parent: true
      required: false
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "string"
      name: "--reference_obsm_features"
      description: "The `.obsm` key of the embedding to use for the classifier's training.\n\
        Make sure that embedding was obtained in the same way as the query embedding\
        \ (e.g. by the same model or preprocessing).\n"
      info: null
      default:
      - "X_integrated_scanvi"
      required: true
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "string"
      name: "--reference_obs_targets"
      description: "The `.obs` key of the target labels to tranfer."
      info: null
      default:
      - "ann_level_1"
      - "ann_level_2"
      - "ann_level_3"
      - "ann_level_4"
      - "ann_level_5"
      - "ann_finest_level"
      required: false
      direction: "input"
      multiple: true
      multiple_sep: ";"
      dest: "par"
  - name: "Outputs"
    arguments:
    - type: "file"
      name: "--output"
      description: "The query data in .h5mu format with predicted labels transfered\
        \ from the reference."
      info:
        label: "Output data"
        file_format:
          type: "h5mu"
          mod:
            rna:
              description: "Modality in AnnData format containing RNA data."
              required: true
              obs:
              - type: "string"
                name: "predictions"
                description: "The predicted labels. Override using the `--output_obs_predictions`\
                  \ argument."
                required: true
              - type: "double"
                name: "uncertainty"
                description: "The uncertainty of the predicted labels. Override using\
                  \ the `--output_obs_uncertainty` argument."
                required: false
              obsm:
              - type: "double"
                name: "X_integrated_scanvi"
                description: "The embedding used for the classifier's inference. Could\
                  \ have any name, specified by `input_obsm_features` argument.\""
                required: false
              uns:
              - type: "string"
                name: "parameters"
                example: "labels_tranfer"
                description: "Additional information about the parameters used for\
                  \ the label transfer."
                required: true
      must_exist: true
      create_parent: true
      required: true
      direction: "output"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "string"
      name: "--output_obs_predictions"
      description: "In which `.obs` slots to store the predicted information.\nIf\
        \ provided, must have the same length as `--reference_obs_targets`.\nIf empty,\
        \ will default to the `reference_obs_targets` combined with the `\"_pred\"\
        ` suffix.\n"
      info: null
      required: false
      direction: "input"
      multiple: true
      multiple_sep: ";"
      dest: "par"
    - type: "string"
      name: "--output_obs_uncertainty"
      description: "In which `.obs` slots to store the uncertainty of the predictions.\n\
        If provided, must have the same length as `--reference_obs_targets`.\nIf empty,\
        \ will default to the `reference_obs_targets` combined with the `\"_uncertainty\"\
        ` suffix.\n"
      info: null
      required: false
      direction: "input"
      multiple: true
      multiple_sep: ";"
      dest: "par"
    - type: "string"
      name: "--output_uns_parameters"
      description: "The `.uns` key to store additional information about the parameters\
        \ used for the label transfer."
      info: null
      default:
      - "labels_transfer"
      required: false
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
  - name: "Learning parameters"
    arguments:
    - type: "integer"
      name: "--n_neighbors"
      alternatives:
      - "-k"
      description: "Number of nearest neighbors to use for classification"
      info: null
      required: true
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
  resources:
  - type: "python_script"
    path: "script.py"
    is_executable: true
  - type: "file"
    path: "../utils/helper.py"
  - type: "file"
    path: "../../utils/setup_logger.py"
  - type: "file"
    path: "./src/workflows/utils/labels.config"
    dest: "nextflow_labels.config"
  description: "Performs label transfer from reference to query using KNN classifier"
  test_resources:
  - type: "python_script"
    path: "test.py"
    is_executable: true
  - type: "file"
    path: "resources_test/annotation_test_data/"
  - type: "file"
    path: "resources_test/pbmc_1k_protein_v3/"
  - type: "file"
    path: "src/base/openpipelinetestutils"
    dest: "openpipelinetestutils"
  info:
    method_id: "KNN_pynndescent"
  status: "enabled"
  requirements:
    commands:
    - "ps"
  set_wd_to_resources_dir: false
platforms:
- type: "docker"
  id: "docker"
  image: "python:3.10-slim"
  target_organization: "openpipelines-bio"
  target_registry: "ghcr.io"
  target_tag: "1.0.0"
  namespace_separator: "/"
  resolve_volume: "Automatic"
  chown: true
  setup_strategy: "ifneedbepullelsecachedbuild"
  target_image_source: "https://github.com/openpipelines-bio/openpipeline"
  setup:
  - type: "apt"
    packages:
    - "procps"
    - "git"
    interactive: false
  - type: "python"
    user: false
    packages:
    - "anndata~=0.9.1"
    - "mudata~=0.2.3"
    - "pandas!=2.1.2"
    upgrade: true
  - type: "apt"
    packages:
    - "libopenblas-dev"
    - "liblapack-dev"
    - "gfortran"
    interactive: false
  - type: "python"
    user: false
    packages:
    - "scanpy~=1.9.5"
    - "statsmodels==0.14.0"
    - "pynndescent~=0.5.8"
    - "numba~=0.56.4"
    - "numpy~=1.23.5"
    upgrade: true
  test_setup:
  - type: "python"
    user: false
    packages:
    - "viashpy==0.6.0"
    upgrade: true
  entrypoint: []
  cmd: null
- type: "nextflow"
  id: "nextflow"
  directives:
    label:
    - "highmem"
    - "highcpu"
    tag: "$id"
  auto:
    simplifyInput: true
    simplifyOutput: false
    transcript: false
    publish: false
  config:
    labels:
      mem1gb: "memory = 1.GB"
      mem2gb: "memory = 2.GB"
      mem4gb: "memory = 4.GB"
      mem8gb: "memory = 8.GB"
      mem16gb: "memory = 16.GB"
      mem32gb: "memory = 32.GB"
      mem64gb: "memory = 64.GB"
      mem128gb: "memory = 128.GB"
      mem256gb: "memory = 256.GB"
      mem512gb: "memory = 512.GB"
      mem1tb: "memory = 1.TB"
      mem2tb: "memory = 2.TB"
      mem4tb: "memory = 4.TB"
      mem8tb: "memory = 8.TB"
      mem16tb: "memory = 16.TB"
      mem32tb: "memory = 32.TB"
      mem64tb: "memory = 64.TB"
      mem128tb: "memory = 128.TB"
      mem256tb: "memory = 256.TB"
      mem512tb: "memory = 512.TB"
      cpu1: "cpus = 1"
      cpu2: "cpus = 2"
      cpu5: "cpus = 5"
      cpu10: "cpus = 10"
      cpu20: "cpus = 20"
      cpu50: "cpus = 50"
      cpu100: "cpus = 100"
      cpu200: "cpus = 200"
      cpu500: "cpus = 500"
      cpu1000: "cpus = 1000"
    script:
    - "includeConfig(\"nextflow_labels.config\")"
  debug: false
  container: "docker"
- type: "native"
  id: "native"
info:
  config: "/home/runner/work/openpipeline/openpipeline/src/labels_transfer/knn/config.vsh.yaml"
  platform: "native"
  output: "/home/runner/work/openpipeline/openpipeline/target/native/labels_transfer/knn"
  executable: "/home/runner/work/openpipeline/openpipeline/target/native/labels_transfer/knn/knn"
  viash_version: "0.8.8"
  git_commit: "bfe311bb5542f97dfe80b20a3e47a02800708f43"
  git_remote: "https://github.com/openpipelines-bio/openpipeline"
  git_tag: "1.0.4-3-gbfe311bb554"
