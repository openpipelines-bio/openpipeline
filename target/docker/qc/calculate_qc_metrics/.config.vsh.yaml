functionality:
  name: "calculate_qc_metrics"
  namespace: "qc"
  version: "1.0.5"
  authors:
  - name: "Dries Schaumont"
    roles:
    - "author"
    info:
      role: "Core Team Member"
      links:
        email: "dries@data-intuitive.com"
        github: "DriesSchaumont"
        orcid: "0000-0002-4389-0440"
        linkedin: "dries-schaumont"
      organizations:
      - name: "Data Intuitive"
        href: "https://www.data-intuitive.com"
        role: "Data Scientist"
  argument_groups:
  - name: "Inputs"
    arguments:
    - type: "file"
      name: "--input"
      description: "Input h5mu file"
      info: null
      example:
      - "input.h5mu"
      must_exist: true
      create_parent: true
      required: true
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "string"
      name: "--modality"
      info: null
      default:
      - "rna"
      required: false
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "string"
      name: "--layer"
      info: null
      example:
      - "raw_counts"
      required: false
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
  - name: "Metrics added to .obs"
    arguments:
    - type: "string"
      name: "--var_qc_metrics"
      description: "Keys to select a boolean (containing only True or False) column\
        \ from .var.\nFor each cell, calculate the proportion of total values for\
        \ genes which are labeled 'True', \ncompared to the total sum of the values\
        \ for all genes.\n"
      info: null
      example:
      - "ercc,highly_variable,mitochondrial"
      required: false
      direction: "input"
      multiple: true
      multiple_sep: ";"
      dest: "par"
    - type: "boolean"
      name: "--var_qc_metrics_fill_na_value"
      description: "Fill any 'NA' values found in the columns specified with --var_qc_metrics\
        \ to 'True' or 'False'.\nas False.\n"
      info: null
      required: false
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "integer"
      name: "--top_n_vars"
      description: "Number of top vars to be used to calculate cumulative proportions.\n\
        If not specified, proportions are not calculated. `--top_n_vars 20;50` finds\n\
        cumulative proportion to the 20th and 50th most expressed vars.\n"
      info: null
      required: false
      direction: "input"
      multiple: true
      multiple_sep: ";"
      dest: "par"
    - type: "string"
      name: "--output_obs_num_nonzero_vars"
      description: "Name of column in .obs describing, for each observation, the number\
        \ of stored values\n(including explicit zeroes). In other words, the name\
        \ of the column that counts\nfor each row the number of columns that contain\
        \ data.\n"
      info: null
      default:
      - "num_nonzero_vars"
      required: false
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "string"
      name: "--output_obs_total_counts_vars"
      description: "Name of the column for .obs describing, for each observation (row),\n\
        the sum of the stored values in the columns.\n"
      info: null
      default:
      - "total_counts"
      required: false
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
  - name: "Metrics added to .var"
    arguments:
    - type: "string"
      name: "--output_var_num_nonzero_obs"
      description: "Name of column describing, for each feature, the number of stored\
        \ values\n(including explicit zeroes). In other words, the name of the column\
        \ that counts\nfor each column the number of rows that contain data.\n"
      info: null
      default:
      - "num_nonzero_obs"
      required: false
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "string"
      name: "--output_var_total_counts_obs"
      description: "Name of the column in .var describing, for each feature (column),\n\
        the sum of the stored values in the rows.\n"
      info: null
      default:
      - "total_counts"
      required: false
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "string"
      name: "--output_var_obs_mean"
      description: "Name of the column in .obs providing the mean of the values in\
        \ each row.\n"
      info: null
      default:
      - "obs_mean"
      required: false
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "string"
      name: "--output_var_pct_dropout"
      description: "Name of the column in .obs providing for each feature the percentage\
        \ of\nobservations the feature does not appear on (i.e. is missing). Same\
        \ as `--num_nonzero_obs`\nbut percentage based.\n"
      info: null
      default:
      - "pct_dropout"
      required: false
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
  - name: "Outputs"
    arguments:
    - type: "file"
      name: "--output"
      description: "Output h5mu file."
      info: null
      example:
      - "output.h5mu"
      must_exist: true
      create_parent: true
      required: false
      direction: "output"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "string"
      name: "--output_compression"
      description: "The compression format to be used on the output h5mu object."
      info: null
      example:
      - "gzip"
      required: false
      choices:
      - "gzip"
      - "lzf"
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
  resources:
  - type: "python_script"
    path: "script.py"
    is_executable: true
  - type: "file"
    path: "src/utils/setup_logger.py"
  - type: "file"
    path: "./src/workflows/utils/labels.config"
    dest: "nextflow_labels.config"
  description: "Add basic quality control metrics to an .h5mu file.\n\nThe metrics\
    \ are comparable to what scanpy.pp.calculate_qc_metrics output,\nalthough they\
    \ have slightly different names:\n\nVar metrics (name in this component -> name\
    \ in scanpy):\n  - pct_dropout -> pct_dropout_by_{expr_type}\n  - num_nonzero_obs\
    \ -> n_cells_by_{expr_type}\n  - obs_mean -> mean_{expr_type}\n  - total_counts\
    \ -> total_{expr_type}\n\nObs metrics:\n  - num_nonzero_vars -> n_genes_by_{expr_type}\n\
    \  - pct_{var_qc_metrics} -> pct_{expr_type}_{qc_var}\n  - total_counts_{var_qc_metrics}\
    \ -> total_{expr_type}_{qc_var}\n  - pct_of_counts_in_top_{top_n_vars}_vars ->\
    \ pct_{expr_type}_in_top_{n}_{var_type}\n  - total_counts -> total_{expr_type}\n\
    \  \n"
  test_resources:
  - type: "python_script"
    path: "test.py"
    is_executable: true
  - type: "file"
    path: "resources_test/pbmc_1k_protein_v3/pbmc_1k_protein_v3_filtered_feature_bc_matrix.h5mu"
  - type: "file"
    path: "src/base/openpipelinetestutils"
    dest: "openpipelinetestutils"
  info: null
  status: "enabled"
  requirements:
    commands:
    - "ps"
  set_wd_to_resources_dir: false
platforms:
- type: "docker"
  id: "docker"
  image: "python:3.9-slim"
  target_organization: "openpipelines-bio"
  target_registry: "ghcr.io"
  target_tag: "1.0.0"
  namespace_separator: "/"
  resolve_volume: "Automatic"
  chown: true
  setup_strategy: "ifneedbepullelsecachedbuild"
  target_image_source: "https://github.com/openpipelines-bio/openpipeline"
  setup:
  - type: "apt"
    packages:
    - "procps"
    interactive: false
  - type: "python"
    user: false
    packages:
    - "anndata~=0.9.1"
    - "mudata~=0.2.3"
    - "pandas!=2.1.2"
    - "scikit-learn~=1.2.0"
    upgrade: true
  test_setup:
  - type: "docker"
    copy:
    - "openpipelinetestutils /opt/openpipelinetestutils"
  - type: "python"
    user: false
    packages:
    - "/opt/openpipelinetestutils"
    upgrade: true
  - type: "python"
    user: false
    packages:
    - "viashpy==0.6.0"
    upgrade: true
  - type: "python"
    user: false
    packages:
    - "scanpy~=1.9.5"
    - "statsmodels==0.14.0"
    upgrade: true
  entrypoint: []
  cmd: null
- type: "nextflow"
  id: "nextflow"
  directives:
    label:
    - "singlecpu"
    - "midmem"
    tag: "$id"
  auto:
    simplifyInput: true
    simplifyOutput: false
    transcript: false
    publish: false
  config:
    labels:
      mem1gb: "memory = 1.GB"
      mem2gb: "memory = 2.GB"
      mem4gb: "memory = 4.GB"
      mem8gb: "memory = 8.GB"
      mem16gb: "memory = 16.GB"
      mem32gb: "memory = 32.GB"
      mem64gb: "memory = 64.GB"
      mem128gb: "memory = 128.GB"
      mem256gb: "memory = 256.GB"
      mem512gb: "memory = 512.GB"
      mem1tb: "memory = 1.TB"
      mem2tb: "memory = 2.TB"
      mem4tb: "memory = 4.TB"
      mem8tb: "memory = 8.TB"
      mem16tb: "memory = 16.TB"
      mem32tb: "memory = 32.TB"
      mem64tb: "memory = 64.TB"
      mem128tb: "memory = 128.TB"
      mem256tb: "memory = 256.TB"
      mem512tb: "memory = 512.TB"
      cpu1: "cpus = 1"
      cpu2: "cpus = 2"
      cpu5: "cpus = 5"
      cpu10: "cpus = 10"
      cpu20: "cpus = 20"
      cpu50: "cpus = 50"
      cpu100: "cpus = 100"
      cpu200: "cpus = 200"
      cpu500: "cpus = 500"
      cpu1000: "cpus = 1000"
    script:
    - "includeConfig(\"nextflow_labels.config\")"
  debug: false
  container: "docker"
info:
  config: "/home/runner/work/openpipeline/openpipeline/src/qc/calculate_qc_metrics/config.vsh.yaml"
  platform: "docker"
  output: "/home/runner/work/openpipeline/openpipeline/target/docker/qc/calculate_qc_metrics"
  executable: "/home/runner/work/openpipeline/openpipeline/target/docker/qc/calculate_qc_metrics/calculate_qc_metrics"
  viash_version: "0.8.8"
  git_commit: "bfe311bb5542f97dfe80b20a3e47a02800708f43"
  git_remote: "https://github.com/openpipelines-bio/openpipeline"
  git_tag: "1.0.4-3-gbfe311bb554"
