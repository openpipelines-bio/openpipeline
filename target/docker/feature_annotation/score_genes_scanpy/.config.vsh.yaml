functionality:
  name: "score_genes_scanpy"
  namespace: "feature_annotation"
  version: "1.0.5"
  authors:
  - name: "Robrecht Cannoodt"
    info:
      role: "Core Team Member"
      links:
        email: "robrecht@data-intuitive.com"
        github: "rcannood"
        orcid: "0000-0003-3641-729X"
        linkedin: "robrechtcannoodt"
      organizations:
      - name: "Data Intuitive"
        href: "https://www.data-intuitive.com"
        role: "Data Science Engineer"
      - name: "Open Problems"
        href: "https://openproblems.bio"
        role: "Core Member"
  - name: "Dorien Roosen"
    info:
      role: "Contributor"
      links:
        email: "dorien@data-intuitive.com"
        github: "dorien-er"
        linkedin: "dorien-roosen"
      organizations:
      - name: "Data Intuitive"
        href: "https://www.data-intuitive.com"
        role: "Data Scientist"
  argument_groups:
  - name: "Inputs"
    arguments:
    - type: "file"
      name: "--input"
      description: "Input h5mu file"
      info: null
      example:
      - "input_file.h5mu"
      must_exist: true
      create_parent: true
      required: true
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "string"
      name: "--gene_list"
      description: "List of gene symbols to be scored.\n"
      info: null
      example:
      - "gene1"
      - "gene2"
      - "gene3"
      required: false
      direction: "input"
      multiple: true
      multiple_sep: ";"
      dest: "par"
    - type: "file"
      name: "--gene_list_file"
      description: "Path to a .txt file containing the gene list to be scored.\nThe\
        \ gene list file should be formatted as a single column with gene symbols.\n"
      info: null
      example:
      - "gene_list.txt"
      must_exist: true
      create_parent: true
      required: false
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "string"
      name: "--gene_pool"
      description: "List of gene symbols for sampling the reference set. Default is\
        \ all genes.\n"
      info: null
      example:
      - "gene1"
      - "gene2"
      - "gene3"
      required: false
      direction: "input"
      multiple: true
      multiple_sep: ";"
      dest: "par"
    - type: "file"
      name: "--gene_pool_file"
      description: "File with genes for sampling the reference set. Default is all\
        \ genes.\nThe gene pool file should be formatted as a single column with gene\
        \ symbols.\n"
      info: null
      example:
      - "gene_pool.txt"
      must_exist: true
      create_parent: true
      required: false
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "string"
      name: "--modality"
      info: null
      default:
      - "rna"
      required: false
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "string"
      name: "--input_layer"
      description: "The layer of the adata object containing normalized expression\
        \ values.\nIf not provided, the X attribute of the adata object will be used.\n"
      info: null
      example:
      - "log_normalized"
      required: false
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "string"
      name: "--var_gene_names"
      description: ".var column name to be used to detect mitochondrial genes instead\
        \ of .var_names (default if not set).\n"
      info: null
      example:
      - "gene_symbol"
      required: false
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "boolean"
      name: "--allow_missing_genes"
      description: "Whether to run score_genes when some genes in the gene_list or\
        \ gene_list_file are not present in the gene_pool\n"
      info: null
      required: false
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
  - name: "Outputs"
    arguments:
    - type: "file"
      name: "--output"
      description: "Output h5mu file\n"
      info: null
      example:
      - "output_file.h5mu"
      must_exist: true
      create_parent: true
      required: true
      direction: "output"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "string"
      name: "--obs_score"
      description: "Name of the score field to be added in .obs.\n"
      info: null
      default:
      - "score"
      required: false
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "string"
      name: "--output_compression"
      description: "The compression format to be used on the output h5mu object."
      info: null
      example:
      - "gzip"
      required: false
      choices:
      - "gzip"
      - "lzf"
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
  - name: "Arguments"
    arguments:
    - type: "integer"
      name: "--ctrl_size"
      description: "Number of reference genes to be sampled from each bin. \nIf len(gene_list)\
        \ is not too low, you can set ctrl_size=len(gene_list).\n"
      info: null
      default:
      - 50
      required: false
      min: 0
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "integer"
      name: "--n_bins"
      description: "Number of expression level bins for sampling.\n"
      info: null
      default:
      - 25
      required: false
      min: 0
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
    - type: "integer"
      name: "--random_state"
      description: "The random seed for sampling.\n"
      info: null
      default:
      - 0
      required: false
      direction: "input"
      multiple: false
      multiple_sep: ":"
      dest: "par"
  resources:
  - type: "python_script"
    path: "script.py"
    is_executable: true
  - type: "file"
    path: "helper.py"
  - type: "file"
    path: "./src/workflows/utils/labels.config"
    dest: "nextflow_labels.config"
  description: "Calculates the score of a set of genes for each cell, as implemented\
    \ by scanpy. \nThe score is the average expression of a set of genes subtracted\
    \ with the average expression of a reference set of genes.\n"
  test_resources:
  - type: "python_script"
    path: "test.py"
    is_executable: true
  - type: "file"
    path: "resources_test/pbmc_1k_protein_v3/"
  - type: "file"
    path: "src/base/openpipelinetestutils"
    dest: "openpipelinetestutils"
  info: null
  status: "enabled"
  requirements:
    commands:
    - "ps"
  set_wd_to_resources_dir: false
platforms:
- type: "docker"
  id: "docker"
  image: "python:3.11"
  target_organization: "openpipelines-bio"
  target_registry: "ghcr.io"
  target_tag: "1.0.0"
  namespace_separator: "/"
  resolve_volume: "Automatic"
  chown: true
  setup_strategy: "ifneedbepullelsecachedbuild"
  target_image_source: "https://github.com/openpipelines-bio/openpipeline"
  setup:
  - type: "python"
    user: false
    packages:
    - "scanpy~=1.9.5"
    - "statsmodels==0.14.0"
    - "anndata~=0.9.1"
    - "mudata~=0.2.3"
    - "pandas!=2.1.2"
    upgrade: true
  test_setup:
  - type: "python"
    user: false
    packages:
    - "viashpy==0.6.0"
    upgrade: true
  entrypoint: []
  cmd: null
info:
  config: "/home/runner/work/openpipeline/openpipeline/src/feature_annotation/score_genes_scanpy/config.vsh.yaml"
  platform: "docker"
  output: "/home/runner/work/openpipeline/openpipeline/target/docker/feature_annotation/score_genes_scanpy"
  executable: "/home/runner/work/openpipeline/openpipeline/target/docker/feature_annotation/score_genes_scanpy/score_genes_scanpy"
  viash_version: "0.8.8"
  git_commit: "bfe311bb5542f97dfe80b20a3e47a02800708f43"
  git_remote: "https://github.com/openpipelines-bio/openpipeline"
  git_tag: "1.0.4-3-gbfe311bb554"
