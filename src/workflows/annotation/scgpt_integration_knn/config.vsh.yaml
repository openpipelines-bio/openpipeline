name: "scgpt_integration_knn"
namespace: "workflows/annotation"
description: "Cell type annotation workflow that performs scGPT integration of reference and query dataset followed by KNN label transfer."
authors:
  - __merge__: /src/authors/dorien_roosen.yaml
    roles: [ author, maintainer ]
  - __merge__: /src/authors/elizabeth_mlynarski.yaml
    roles: [ author ]
  - __merge__: /src/authors/weiwei_schultz.yaml
    roles: [ contributor ]
info:
  name: "scGPT Annotation"
  test_dependencies:
    - name: scgpt_integration_knn_test
      namespace: test_workflows/annotation

argument_groups:
  - name: Query Input
    arguments:
      - name: "--id"
        required: true
        type: string
        description: ID of the sample.
        example: foo
      - name: "--input"
        required: true
        type: file
        description: Input dataset consisting of the (unlabeled) query observations. The dataset is expected to be pre-processed in the same way as --reference.
        example: input.h5mu
      - name: "--modality"
        description: Which modality to process. Should match the modality of the --reference dataset.
        type: string
        default: "rna"
        required: false
      - name: "--input_layer"
        type: string
        required: False
        description: |
          Mudata layer (key from layers) to use as input data for scGPT integration; if not specified, X is used. Should match the layer name of the reference dataset.
      - name: "--input_var_gene_names"
        type: string
        required: false
        description: |
          The .var field in the input (query) dataset containing gene names; if not provided, the .var index will be used.
      - name: "--input_obs_batch_label"
        type: string
        description: "The .obs field in the input (query) dataset containing the batch labels."
        example: "sample"
        required: true
      - name: "--overwrite_existing_key"
        type: boolean_true
        description: If provided, will overwrite existing fields in the input dataset when data are copied during the reference alignment process.

  - name: Reference input
    arguments:
      - name: "--reference"
        required: true
        type: file
        description: Reference dataset consisting of observations with cell type labels present in the .obs --reference_obs_batch_label column to train the classifier on. The dataset is expected to be pre-processed in the same way as the --input query dataset(s).
        example: reference.h5mu
      - name: "--reference_obs_targets"
        type: string
        example: [ ann_level_1, ann_level_2, ann_level_3, ann_level_4, ann_level_5, ann_finest_level ]
        required: true
        multiple: true
        description: The `.obs` key(s) of the target labels to tranfer.
      - name: "--reference_var_gene_names"
        type: string
        required: false
        description: |
          The .var field in the reference dataset containing gene names; if not provided, the .var index will be used.
      - name: "--reference_obs_batch_label"
        type: string
        description:  "The .obs field in the reference dataset containing the batch labels."
        example: "sample"
        required: true

  - name: scGPT model
    arguments:
      - name: "--model"
        type: file
        required: true
        example: resources_test/scgpt/best_model.pt
        description: |
          The scGPT model file.
          Can either be a foundation model or a fine-tuned model. 
          If the model file is a fine-tuned model, it must contain a key for the checkpoints (--finetuned_checkpoints_key).
      - name: "--model_vocab"
        type: file
        direction: input
        required: true
        example: resources_test/scgpt/vocab.json
        description: |
          The scGPT model vocabulary file.
      - name: "--model_config"
        type: file
        direction: input
        required: true
        example: args.json
        description: |
          The scGPT model configuration file.
      - name: "--finetuned_checkpoints_key"
        type: string
        required: false
        example: model_state_dict
        description: |
          Key in the model file containing the pretrained checkpoints. Must be provided when `--model` is a fine-tuned model.

  - name: "Padding arguments"
    arguments:
      - name: "--pad_token"
        type: string
        default: "<pad>"
        required: false
        description: |
          Token used for padding.
      - name: "--pad_value"
        type: integer
        default: -2
        required: false
        description: |
          The value of the padding token.

  - name: "HVG subset arguments"
    arguments:
      - name: "--n_hvg"
        type: integer
        default: 1200
        description: |
          Number of highly variable genes to subset for.

  - name: "Tokenization arguments"
    arguments:
      - name: "--max_seq_len"
        type: integer
        required: false
        description: |
          The maximum sequence length of the tokenized data. Defaults to the number of features if not provided.

  - name: "Embedding arguments"
    arguments:
      - name: --dsbn
        type: boolean
        default: true
        description: |
          Apply domain-specific batch normalization
      - name: "--batch_size"
        type: integer
        default: 64
        description: |
          The batch size to be used for embedding inference.

  - name: "Binning arguments"
    arguments:
      - name: "--n_input_bins"
        type: integer
        default: 51
        required: False
        min: 1
        description: |
          The number of bins to discretize the data into; When no value is provided, data won't be binned.
      - name: "--seed"
        type: integer
        required: false
        description: |
          Seed for random number generation used for binning. If not set, no seed is used.

  - name: Leiden clustering options
    arguments:
      - name: "--leiden_resolution"
        type: double
        description: Control the coarseness of the clustering. Higher values lead to more clusters.
        default: [1]
        multiple: true

  - name: Neighbor classifier arguments
    arguments:
      - name: "--weights"
        type: string
        default: "uniform"
        choices: ["uniform", "distance", "gaussian"]
        description: |
          Weight function used in prediction. Possible values are:
          `uniform` (all points in each neighborhood are weighted equally) or 
          `distance` (weight points by the inverse of their distance)
      - name: "--n_neighbors"
        type: integer
        default: 15
        required: false
        description: |
          The number of neighbors to use in k-neighbor graph structure used for fast approximate nearest neighbor search with PyNNDescent. 
          Larger values will result in more accurate search results at the cost of computation time.

  - name: "Outputs"
    arguments:
      - name: "--output"
        type: file
        required: true
        direction: output
        description: The query data in .h5mu format with predicted labels predicted from the classifier trained on the reference.
        example: output.h5mu
      - name: "--output_obs_predictions"
        type: string
        required: false
        multiple: true
        description: |
          In which `.obs` slots to store the predicted information.
          If provided, must have the same length as `--reference_obs_targets`.
          If empty, will default to the `reference_obs_targets` combined with the `"_pred"` suffix.
      - name: "--output_obs_probability"
        type: string
        required: false
        multiple: true
        description: |
          In which `.obs` slots to store the probability of the predictions.
          If provided, must have the same length as `--reference_obs_targets`.
          If empty, will default to the `reference_obs_targets` combined with the `"_probability"` suffix.
      - name: "--output_obsm_integrated"
        type: string
        default: "X_integrated_scgpt"
        required: false
        description: "In which .obsm slot to store the integrated embedding."
      - name: "--output_compression"
        type: string
        description: |
          The compression format to be used on the output h5mu object.
        choices: ["gzip", "lzf"]
        required: false
        example: "gzip"

dependencies:
  - name: workflows/integration/scgpt_leiden
    alias: scgpt_leiden_workflow
  - name: labels_transfer/knn
  - name: dataflow/split_h5mu
  - name: dataflow/concatenate_h5mu
  - name: metadata/add_id
  - name: metadata/duplicate_obs
  - name: metadata/duplicate_var

resources:
  - type: nextflow_script
    path: main.nf
    entrypoint: run_wf

test_resources:
  - type: nextflow_script
    path: test.nf
    entrypoint: test_wf
  - path: /resources_test/scgpt
  - path: /resources_test/pbmc_1k_protein_v3/pbmc_1k_protein_v3_mms.h5mu
  - path: /resources_test/annotation_test_data/TS_Blood_filtered.h5mu

runners:
  - type: nextflow
